{
	"id": "f262cb4a43b12c53631681cd9a7e4027",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/MyToken2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./MyToken.sol\";\r\nimport \"./DividendLogic.sol\";\r\n// import \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n\r\n//MyToken(V2)\r\ncontract MyToken2 is MyToken, DividendLogic {\r\n    // uint256 public x;\r\n\r\n    // function initialize(\r\n    //     // uint256 _newX,\r\n    //     uint256 _oldX,\r\n    //     uint256 initialSupply\r\n    // ) public {\r\n    //     MyToken.initialize(_oldX);\r\n    //     _mint(msg.sender, initialSupply);\r\n    //     // x = _newX;\r\n    // }\r\n    function updateContractStatus(uint256 _x) public {\r\n        MyToken.initialize(_x);\r\n    }\r\n\r\n    function getVersion() public view returns(uint256){\r\n        return MyToken.x;\r\n    }\r\n\r\n    // constructor() {}\r\n}\r\n"
			},
			"contract/DividendLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nabstract contract DividendLogic is Ownable {\r\n    // 存储在调用合约（MyToken2）中\r\n    mapping(address => uint256) public dividends;  \r\n    mapping(address => uint256) public claimedDividends;\r\n    uint256 public totalDividends;\r\n    uint256 public lastDividendTimestamp;\r\n\r\n    address[] public holders;   // 持币者列表\r\n\r\n    event DividendDistributed(uint256 amount, uint256 timestamp);\r\n    event DividendClaimed(address indexed user, uint256 amount);\r\n\r\n    // 初始化分红相关状态变量\r\n    function initializeDividends() external onlyOwner {\r\n        totalDividends = 0;\r\n        lastDividendTimestamp = 0;\r\n    }\r\n\r\n    // 添加分红用户\r\n    function addDividendsUser(address user, uint256 amount) external onlyOwner {\r\n        require(user != address(0), \"Invalid address\");\r\n        dividends[user] = amount;\r\n        holders.push(user);\r\n    }\r\n\r\n    // 批量添加分红用户\r\n    function addBatchDividendsUsers(address[] memory users, uint256[] memory amounts) external onlyOwner {\r\n        require(users.length == amounts.length, \"Arrays length mismatch\");\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            require(users[i] != address(0), \"Invalid address\");\r\n            dividends[users[i]] = amounts[i];\r\n        }\r\n    }\r\n\r\n    // 分发分红（调用代币合约进行分红，管理员调用该方法时，需要转入ETH）\r\n    function distributeDividends(address token) external payable onlyOwner {\r\n        //1、检查管理员是否发送了ETH\r\n        require(msg.value > 0, \"No ETH sent for dividends\");\r\n        //2、检查是否发行了代币\r\n        require(IERC20(token).totalSupply() > 0, \"No tokens issued\");\r\n\r\n        //3、将总分红数额累加\r\n        totalDividends += msg.value;\r\n        lastDividendTimestamp = block.timestamp;\r\n\r\n        //4、获取代币总供应量(假设为公司总股份)\r\n        uint256 totalTokens = IERC20(token).totalSupply();\r\n\r\n        //5、遍历持币者列表，计算每个持币者的分红数额\r\n        for (uint256 i = 0; i < holders.length; i++) {\r\n            //获取分红的名单\r\n            address holder = holders[i];\r\n            //获取持股人投资的股份\r\n            uint256 balance = IERC20(token).balanceOf(holder);\r\n            if (balance > 0) {\r\n                //按照份额将分红分发给投资者\r\n                dividends[holder] += (msg.value * balance) / totalTokens;\r\n            }\r\n        }\r\n\r\n        emit DividendDistributed(msg.value, block.timestamp);\r\n    }\r\n\r\n    // 领取分红\r\n    function claimDividends(address user) external {\r\n        //1、查看用户可领取的分红数额\r\n        uint256 amount = dividends[user];\r\n        require(amount > 0, \"No dividends to claim\");\r\n\r\n        //2、将用户可领取的分红数额设置为0\r\n        dividends[user] = 0;\r\n        //3、将用户已领取的分红数额累加\r\n        claimedDividends[user] += amount;\r\n\r\n        //4、将用户可领取的分红数额发送给用户（bug）\r\n        (bool sent, ) = user.call{value: amount}(\"\");\r\n        require(sent, \"Failed to send ETH\");\r\n\r\n        emit DividendClaimed(user, amount);\r\n    }\r\n\r\n    // 查询可领取分红\r\n    function getClaimableDividends(address user) external view returns (uint256) {\r\n        return dividends[user];\r\n    }\r\n}"
			},
			"contract/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n// import \"@openzeppelin/contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\r\n// import \"@openzeppelin/contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\";\r\n\r\n//合约V1版本\r\ncontract MyToken is ERC20, Ownable, Initializable {\r\n    uint256 public x;\r\n\r\n    function initialize(uint256 _x) public onlyInitializing {\r\n        x = _x;\r\n    }\r\n\r\n    function initializeSupply(uint256 initialSupply) public {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    //可能需要修改\r\n    constructor(\r\n        \r\n    ) ERC20(\"MyToken\", \"MTK\") Ownable(msg.sender) {\r\n        \r\n        \r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(address from, uint256 amount) public onlyOwner {\r\n        _burn(from, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 276,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 575,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 581,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 583,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 585,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 587,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/DividendLogic.sol": {
				"DividendLogic": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DividendClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "DividendDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addBatchDividendsUsers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addDividendsUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "distributeDividends",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "dividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimableDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "holders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializeDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDividendTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBatchDividendsUsers(address[],uint256[])": "6264786c",
							"addDividendsUser(address,uint256)": "8ad0aaef",
							"claimDividends(address)": "c7e772ed",
							"claimedDividends(address)": "7dfb3383",
							"distributeDividends(address)": "213a852f",
							"dividends(address)": "68306e43",
							"getClaimableDividends(address)": "8284ce3e",
							"holders(uint256)": "2a11ced0",
							"initializeDividends()": "ad9e7611",
							"lastDividendTimestamp()": "2eb21b22",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalDividends()": "997664d7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DividendClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DividendDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addBatchDividendsUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addDividendsUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"distributeDividends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDividendTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/DividendLogic.sol\":\"DividendLogic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contract/DividendLogic.sol\":{\"keccak256\":\"0xf1d301dd8f02bb7d70ea3f8b71baa6be38f33c41c3880839acbca4d03a8e402b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b902b1249b9a75de490412b688f4fd1cb776d98e293cbb32d05f692440092d5\",\"dweb:/ipfs/QmVhLc7nEmrim8rZ8oNgjkr2HUi6Ds5NrESrDZhGZc5Dhb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 276,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1211,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "dividends",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1215,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "claimedDividends",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1217,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "totalDividends",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1219,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "lastDividendTimestamp",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "contract/DividendLogic.sol:DividendLogic",
								"label": "holders",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"name": "initializeSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyToken.sol\":452:1079  contract MyToken is ERC20, Ownable, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"contract/MyToken.sol\":764:866  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contract/MyToken.sol\":826:836  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contract/MyToken.sol\":452:1079  contract MyToken is ERC20, Ownable, Initializable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract/MyToken.sol\":452:1079  contract MyToken is ERC20, Ownable, Initializable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/MyToken.sol\":452:1079  contract MyToken is ERC20, Ownable, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd9e63bb1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0c55699c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":509:525  uint256 public x */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":509:525  uint256 public x */\n    tag_34:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"contract/MyToken.sol\":944:961  _mint(to, amount) */\n      tag_112\n        /* \"contract/MyToken.sol\":950:952  to */\n      dup3\n        /* \"contract/MyToken.sol\":954:960  amount */\n      dup3\n        /* \"contract/MyToken.sol\":944:949  _mint */\n      tag_113\n        /* \"contract/MyToken.sol\":944:961  _mint(to, amount) */\n      jump\t// in\n    tag_112:\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_90\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_90\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"contract/MyToken.sol\":1049:1068  _burn(from, amount) */\n      tag_130\n        /* \"contract/MyToken.sol\":1055:1059  from */\n      dup3\n        /* \"contract/MyToken.sol\":1061:1067  amount */\n      dup3\n        /* \"contract/MyToken.sol\":1049:1054  _burn */\n      tag_131\n        /* \"contract/MyToken.sol\":1049:1068  _burn(from, amount) */\n      jump\t// in\n    tag_130:\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n    tag_76:\n        /* \"contract/MyToken.sol\":690:722  _mint(msg.sender, initialSupply) */\n      tag_136\n        /* \"contract/MyToken.sol\":696:706  msg.sender */\n      caller\n        /* \"contract/MyToken.sol\":708:721  initialSupply */\n      dup3\n        /* \"contract/MyToken.sol\":690:695  _mint */\n      tag_113\n        /* \"contract/MyToken.sol\":690:722  _mint(msg.sender, initialSupply) */\n      jump\t// in\n    tag_136:\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_145:\n        /* \"contract/MyToken.sol\":605:607  _x */\n      dup1\n        /* \"contract/MyToken.sol\":601:602  x */\n      0x06\n        /* \"contract/MyToken.sol\":601:607  x = _x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_196)\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_200)\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_209:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_210:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_211:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_212:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_213:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_238\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_209\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":711:782   */\n      tag_239\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_210\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_240\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_211\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":881:910   */\n      tag_241\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_212\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_243\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_215:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_217:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_218:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_249\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_217\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_219:\n        /* \"#utility.yul\":1876:1900   */\n      tag_251\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_218\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_252:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_220:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_254\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_219\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_221:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_222:\n        /* \"#utility.yul\":2232:2256   */\n      tag_257\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_258:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_223:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_260\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_263\n      tag_215\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2525:2644   */\n    tag_262:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_264\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_220\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_265\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_223\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_224:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_225:\n        /* \"#utility.yul\":3089:3110   */\n      tag_268\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_224\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_270\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_225\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_226:\n        /* \"#utility.yul\":3426:3450   */\n      tag_272\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_221\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_274\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_226\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_42:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_277\n      tag_215\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3801:3920   */\n    tag_276:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_278\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_279\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_220\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_280\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_227:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_228:\n        /* \"#utility.yul\":4491:4513   */\n      tag_283\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_227\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_48:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_285\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_228\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_54:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_288\n      tag_215\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4822:4941   */\n    tag_287:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_289\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_220\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_229:\n        /* \"#utility.yul\":5168:5192   */\n      tag_291\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_218\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_62:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_293\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_229\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_75:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_296\n      tag_215\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5509:5628   */\n    tag_295:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_297\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_223\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_79:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_300\n      tag_215\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5861:5980   */\n    tag_299:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_301\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_220\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_302\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_220\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_230:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_90:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_305:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_307\n      tag_230\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6664:6748   */\n    tag_306:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:7202   */\n    tag_157:\n        /* \"#utility.yul\":6909:6913   */\n      0x00\n        /* \"#utility.yul\":6947:6949   */\n      0x60\n        /* \"#utility.yul\":6936:6945   */\n      dup3\n        /* \"#utility.yul\":6932:6950   */\n      add\n        /* \"#utility.yul\":6924:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6960:7031   */\n      tag_309\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7017:7026   */\n      dup4\n        /* \"#utility.yul\":7013:7030   */\n      add\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":6960:7031   */\n      tag_229\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7041:7113   */\n      tag_310\n        /* \"#utility.yul\":7109:7111   */\n      0x20\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7112   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup6\n        /* \"#utility.yul\":7041:7113   */\n      tag_226\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7123:7195   */\n      tag_311\n        /* \"#utility.yul\":7191:7193   */\n      0x40\n        /* \"#utility.yul\":7180:7189   */\n      dup4\n        /* \"#utility.yul\":7176:7194   */\n      add\n        /* \"#utility.yul\":7167:7173   */\n      dup5\n        /* \"#utility.yul\":7123:7195   */\n      tag_226\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6760:7202   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_231:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_195:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_314\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_221\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_315\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_221\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_317\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7542:7578   */\n    tag_316:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220903dca19e44ba7d1c4fbb475778a305a9b4640cd9c4f8eb4f8c31f0689ed215164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1545": {
									"entryPoint": null,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_604": {
									"entryPoint": null,
									"id": 604,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_414": {
									"entryPoint": 292,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:10",
										"nodeType": "YulBlock",
										"src": "0:5817:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nativeSrc": "5279:81:10",
													"nodeType": "YulBlock",
													"src": "5279:81:10",
													"statements": [
														{
															"nativeSrc": "5289:65:10",
															"nodeType": "YulAssignment",
															"src": "5289:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:10",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nativeSrc": "5300:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:10",
														"nodeType": "YulTypedName",
														"src": "5261:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:10",
														"nodeType": "YulTypedName",
														"src": "5271:7:10",
														"type": ""
													}
												],
												"src": "5234:126:10"
											},
											{
												"body": {
													"nativeSrc": "5411:51:10",
													"nodeType": "YulBlock",
													"src": "5411:51:10",
													"statements": [
														{
															"nativeSrc": "5421:35:10",
															"nodeType": "YulAssignment",
															"src": "5421:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:10"
																},
																"nativeSrc": "5432:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:10",
														"nodeType": "YulTypedName",
														"src": "5393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:10",
														"nodeType": "YulTypedName",
														"src": "5403:7:10",
														"type": ""
													}
												],
												"src": "5366:96:10"
											},
											{
												"body": {
													"nativeSrc": "5533:53:10",
													"nodeType": "YulBlock",
													"src": "5533:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:10"
																		},
																		"nativeSrc": "5555:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:10"
																},
																"nativeSrc": "5543:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:10"
															},
															"nativeSrc": "5543:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:10",
														"nodeType": "YulTypedName",
														"src": "5521:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:10",
														"nodeType": "YulTypedName",
														"src": "5528:3:10",
														"type": ""
													}
												],
												"src": "5468:118:10"
											},
											{
												"body": {
													"nativeSrc": "5690:124:10",
													"nodeType": "YulBlock",
													"src": "5690:124:10",
													"statements": [
														{
															"nativeSrc": "5700:26:10",
															"nodeType": "YulAssignment",
															"src": "5700:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:10"
																},
																"nativeSrc": "5708:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:10"
																		},
																		"nativeSrc": "5789:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:10"
																},
																"nativeSrc": "5736:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:10"
															},
															"nativeSrc": "5736:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:10",
														"nodeType": "YulTypedName",
														"src": "5662:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:10",
														"nodeType": "YulTypedName",
														"src": "5674:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:10",
														"nodeType": "YulTypedName",
														"src": "5685:4:10",
														"type": ""
													}
												],
												"src": "5592:222:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250816003908161008c9190610424565b50806004908161009c9190610424565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610532565b60405180910390fd5b61011e8161012460201b60201c565b5061054b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026257607f821691505b6020821081036102755761027461021e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261029c565b6102e1868361029c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032561032061031b846102f9565b610302565b6102f9565b9050919050565b5f819050919050565b61033e8361030b565b61035261034a8261032c565b8484546102a8565b825550505050565b5f5f905090565b61036961035a565b610374818484610335565b505050565b5b818110156103975761038c5f82610361565b60018101905061037a565b5050565b601f8211156103dc576103ad8161027b565b6103b68461028d565b810160208510156103c5578190505b6103d96103d18561028d565b830182610379565b50505b505050565b5f82821c905092915050565b5f6103fc5f19846008026103e1565b1980831691505092915050565b5f61041483836103ed565b9150826002028217905092915050565b61042d826101e7565b67ffffffffffffffff811115610446576104456101f1565b5b610450825461024b565b61045b82828561039b565b5f60209050601f83116001811461048c575f841561047a578287015190505b6104848582610409565b8655506104eb565b601f19841661049a8661027b565b5f5b828110156104c15784890151825560018201915060208501945060208101905061049c565b868310156104de57848901516104da601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051c826104f3565b9050919050565b61052c81610512565b82525050565b5f6020820190506105455f830184610523565b92915050565b611349806105585f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c8063715018a6116100a0578063a9059cbb1161006f578063a9059cbb14610293578063d9e63bb1146102c3578063dd62ed3e146102df578063f2fde38b1461030f578063fe4b84df1461032b57610109565b8063715018a6146102315780638da5cb5b1461023b57806395d89b41146102595780639dc29fac1461027757610109565b806323b872dd116100dc57806323b872dd14610197578063313ce567146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b5780630c55699c1461015b57806318160ddd14610179575b5f5ffd5b610115610347565b6040516101229190610f97565b60405180910390f35b61014560048036038101906101409190611048565b6103d7565b60405161015291906110a0565b60405180910390f35b6101636103f9565b60405161017091906110c8565b60405180910390f35b6101816103ff565b60405161018e91906110c8565b60405180910390f35b6101b160048036038101906101ac91906110e1565b610408565b6040516101be91906110a0565b60405180910390f35b6101cf610436565b6040516101dc919061114c565b60405180910390f35b6101ff60048036038101906101fa9190611048565b61043e565b005b61021b60048036038101906102169190611165565b610454565b60405161022891906110c8565b60405180910390f35b610239610499565b005b6102436104ac565b604051610250919061119f565b60405180910390f35b6102616104d4565b60405161026e9190610f97565b60405180910390f35b610291600480360381019061028c9190611048565b610564565b005b6102ad60048036038101906102a89190611048565b61057a565b6040516102ba91906110a0565b60405180910390f35b6102dd60048036038101906102d891906111b8565b61059c565b005b6102f960048036038101906102f491906111e3565b6105a9565b60405161030691906110c8565b60405180910390f35b61032960048036038101906103249190611165565b61062b565b005b610345600480360381019061034091906111b8565b6106af565b005b6060600380546103569061124e565b80601f01602080910402602001604051908101604052809291908181526020018280546103829061124e565b80156103cd5780601f106103a4576101008083540402835291602001916103cd565b820191905f5260205f20905b8154815290600101906020018083116103b057829003601f168201915b5050505050905090565b5f5f6103e16106c1565b90506103ee8185856106c8565b600191505092915050565b60065481565b5f600254905090565b5f5f6104126106c1565b905061041f8582856106da565b61042a85858561076d565b60019150509392505050565b5f6012905090565b61044661085d565b61045082826108e4565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104a161085d565b6104aa5f610963565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104e39061124e565b80601f016020809104026020016040519081016040528092919081815260200182805461050f9061124e565b801561055a5780601f106105315761010080835404028352916020019161055a565b820191905f5260205f20905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b61056c61085d565b6105768282610a26565b5050565b5f5f6105846106c1565b905061059181858561076d565b600191505092915050565b6105a633826108e4565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063361085d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a3575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161069a919061119f565b60405180910390fd5b6106ac81610963565b50565b6106b7610aa5565b8060068190555050565b5f33905090565b6106d58383836001610ae5565b505050565b5f6106e584846105a9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107675781811015610758578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161074f9392919061127e565b60405180910390fd5b61076684848484035f610ae5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107dd575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107d4919061119f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084d575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610844919061119f565b60405180910390fd5b610858838383610cb4565b505050565b6108656106c1565b73ffffffffffffffffffffffffffffffffffffffff166108836104ac565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576108a66106c1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d9919061119f565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610954575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161094b919061119f565b60405180910390fd5b61095f5f8383610cb4565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a96575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a8d919061119f565b60405180910390fd5b610aa1825f83610cb4565b5050565b610aad610ecd565b610ae3576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4c919061119f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bbc919061119f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cae578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca591906110c8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d04578060025f828254610cf891906112e0565b92505081905550610dd2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d849392919061127e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e19578060025f8282540392505081905550610e63565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec091906110c8565b60405180910390a3505050565b5f610ed6610eeb565b5f0160089054906101000a900460ff16905090565b5f5f610ef5610efe565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6982610f27565b610f738185610f31565b9350610f83818560208601610f41565b610f8c81610f4f565b840191505092915050565b5f6020820190508181035f830152610faf8184610f5f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fe482610fbb565b9050919050565b610ff481610fda565b8114610ffe575f5ffd5b50565b5f8135905061100f81610feb565b92915050565b5f819050919050565b61102781611015565b8114611031575f5ffd5b50565b5f813590506110428161101e565b92915050565b5f5f6040838503121561105e5761105d610fb7565b5b5f61106b85828601611001565b925050602061107c85828601611034565b9150509250929050565b5f8115159050919050565b61109a81611086565b82525050565b5f6020820190506110b35f830184611091565b92915050565b6110c281611015565b82525050565b5f6020820190506110db5f8301846110b9565b92915050565b5f5f5f606084860312156110f8576110f7610fb7565b5b5f61110586828701611001565b935050602061111686828701611001565b925050604061112786828701611034565b9150509250925092565b5f60ff82169050919050565b61114681611131565b82525050565b5f60208201905061115f5f83018461113d565b92915050565b5f6020828403121561117a57611179610fb7565b5b5f61118784828501611001565b91505092915050565b61119981610fda565b82525050565b5f6020820190506111b25f830184611190565b92915050565b5f602082840312156111cd576111cc610fb7565b5b5f6111da84828501611034565b91505092915050565b5f5f604083850312156111f9576111f8610fb7565b5b5f61120685828601611001565b925050602061121785828601611001565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061126557607f821691505b60208210810361127857611277611221565b5b50919050565b5f6060820190506112915f830186611190565b61129e60208301856110b9565b6112ab60408301846110b9565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112ea82611015565b91506112f583611015565b925082820190508082111561130d5761130c6112b3565b5b9291505056fea2646970667358221220903dca19e44ba7d1c4fbb475778a305a9b4640cd9c4f8eb4f8c31f0689ed215164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x54B JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x21E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2D7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x2E1 DUP7 DUP4 PUSH2 0x29C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x325 PUSH2 0x320 PUSH2 0x31B DUP5 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E DUP4 PUSH2 0x30B JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34A DUP3 PUSH2 0x32C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x369 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x374 DUP2 DUP5 DUP5 PUSH2 0x335 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH2 0x38C PUSH0 DUP3 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3AD DUP2 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x3B6 DUP5 PUSH2 0x28D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3D9 PUSH2 0x3D1 DUP6 PUSH2 0x28D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x379 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x414 DUP4 DUP4 PUSH2 0x3ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42D DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x1F1 JUMP JUMPDEST JUMPDEST PUSH2 0x450 DUP3 SLOAD PUSH2 0x24B JUMP JUMPDEST PUSH2 0x45B DUP3 DUP3 DUP6 PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x48C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x47A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x484 DUP6 DUP3 PUSH2 0x409 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x49A DUP7 PUSH2 0x27B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4DE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4DA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51C DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x512 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1349 DUP1 PUSH2 0x558 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xD9E63BB1 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x32B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x277 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E1 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3EE DUP2 DUP6 DUP6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x412 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP6 DUP3 DUP6 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x42A DUP6 DUP6 DUP6 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x450 DUP3 DUP3 PUSH2 0x8E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4AA PUSH0 PUSH2 0x963 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50F SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x531 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x85D JUMP JUMPDEST PUSH2 0x576 DUP3 DUP3 PUSH2 0xA26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x584 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP2 DUP6 DUP6 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A6 CALLER DUP3 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x633 PUSH2 0x85D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x963 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B7 PUSH2 0xAA5 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E5 DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x858 DUP4 DUP4 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0x6C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x4AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x954 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95F PUSH0 DUP4 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA1 DUP3 PUSH0 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAAD PUSH2 0xECD JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD04 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE19 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE63 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED6 PUSH2 0xEEB JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xEF5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF69 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xF73 DUP2 DUP6 PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP PUSH2 0xF83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAF DUP2 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF4 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100F DUP2 PUSH2 0xFEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1027 DUP2 PUSH2 0x1015 JUMP JUMPDEST DUP2 EQ PUSH2 0x1031 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1042 DUP2 PUSH2 0x101E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x106B DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x107C DUP6 DUP3 DUP7 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C2 DUP2 PUSH2 0x1015 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DB PUSH0 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1105 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1116 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1127 DUP7 DUP3 DUP8 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1146 DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH0 DUP4 ADD DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1187 DUP5 DUP3 DUP6 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1199 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DA DUP5 DUP3 DUP6 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F9 JUMPI PUSH2 0x11F8 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1206 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1217 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1265 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1278 JUMPI PUSH2 0x1277 PUSH2 0x1221 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH0 DUP4 ADD DUP7 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x129E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x12AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12EA DUP3 PUSH2 0x1015 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F5 DUP4 PUSH2 0x1015 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130C PUSH2 0x12B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 RETURNDATASIZE 0xCA NOT RETF 0x4B 0xA7 DATALOADN 0xC4FB 0xB4 PUSH22 0x778A305A9B4640CD9C4F8EB4F8C31F0689ED21516473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "452:627:8:-:0;;;764:102;;;;;;;;;;826:10;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;452:627:8;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;452:627:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1018": {
									"entryPoint": 2789,
									"id": 1018,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_958": {
									"entryPoint": 1736,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_940": {
									"entryPoint": 2598,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_175": {
									"entryPoint": 2725,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_352": {
									"entryPoint": 2141,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_266": {
									"entryPoint": 3819,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": 3838,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_243": {
									"entryPoint": 3789,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_907": {
									"entryPoint": 2276,
									"id": 907,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1183": {
									"entryPoint": 1729,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1066": {
									"entryPoint": 1754,
									"id": 1066,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_414": {
									"entryPoint": 2403,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_797": {
									"entryPoint": 1901,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_874": {
									"entryPoint": 3252,
									"id": 874,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_694": {
									"entryPoint": 1449,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_718": {
									"entryPoint": 983,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_653": {
									"entryPoint": 1108,
									"id": 653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1575": {
									"entryPoint": 1380,
									"id": 1575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_631": {
									"entryPoint": 1078,
									"id": 631,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initializeSupply_1533": {
									"entryPoint": 1436,
									"id": 1533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1521": {
									"entryPoint": 1711,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mint_1560": {
									"entryPoint": 1086,
									"id": 1560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_613": {
									"entryPoint": 839,
									"id": 613,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_335": {
									"entryPoint": 1196,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_366": {
									"entryPoint": 1177,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_622": {
									"entryPoint": 1236,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_640": {
									"entryPoint": 1023,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_750": {
									"entryPoint": 1032,
									"id": 750,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_394": {
									"entryPoint": 1579,
									"id": 394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_677": {
									"entryPoint": 1402,
									"id": 677,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@x_1509": {
									"entryPoint": 1017,
									"id": 1509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:10",
										"nodeType": "YulBlock",
										"src": "0:7588:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4359:43:10",
													"nodeType": "YulBlock",
													"src": "4359:43:10",
													"statements": [
														{
															"nativeSrc": "4369:27:10",
															"nodeType": "YulAssignment",
															"src": "4369:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:10"
																},
																"nativeSrc": "4380:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:10",
														"nodeType": "YulTypedName",
														"src": "4341:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:10",
														"nodeType": "YulTypedName",
														"src": "4351:7:10",
														"type": ""
													}
												],
												"src": "4316:86:10"
											},
											{
												"body": {
													"nativeSrc": "4469:51:10",
													"nodeType": "YulBlock",
													"src": "4469:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:10"
																		},
																		"nativeSrc": "4491:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:10"
																},
																"nativeSrc": "4479:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:10"
															},
															"nativeSrc": "4479:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:10",
														"nodeType": "YulTypedName",
														"src": "4457:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:10",
														"nodeType": "YulTypedName",
														"src": "4464:3:10",
														"type": ""
													}
												],
												"src": "4408:112:10"
											},
											{
												"body": {
													"nativeSrc": "4620:120:10",
													"nodeType": "YulBlock",
													"src": "4620:120:10",
													"statements": [
														{
															"nativeSrc": "4630:26:10",
															"nodeType": "YulAssignment",
															"src": "4630:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:10"
																},
																"nativeSrc": "4638:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:10"
																		},
																		"nativeSrc": "4715:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:10"
																},
																"nativeSrc": "4666:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:10"
															},
															"nativeSrc": "4666:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:10",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:10",
														"nodeType": "YulTypedName",
														"src": "4604:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:10",
														"nodeType": "YulTypedName",
														"src": "4615:4:10",
														"type": ""
													}
												],
												"src": "4526:214:10"
											},
											{
												"body": {
													"nativeSrc": "4812:263:10",
													"nodeType": "YulBlock",
													"src": "4812:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:10",
																"nodeType": "YulBlock",
																"src": "4858:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:10"
																			},
																			"nativeSrc": "4860:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:10"
																		},
																		"nativeSrc": "4860:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nativeSrc": "4829:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:10"
																},
																"nativeSrc": "4825:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:10"
															},
															"nativeSrc": "4822:119:10",
															"nodeType": "YulIf",
															"src": "4822:119:10"
														},
														{
															"nativeSrc": "4951:117:10",
															"nodeType": "YulBlock",
															"src": "4951:117:10",
															"statements": [
																{
																	"nativeSrc": "4966:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:10"
																				},
																				"nativeSrc": "5026:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:10"
																		},
																		"nativeSrc": "5005:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:10",
														"nodeType": "YulTypedName",
														"src": "4782:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:10",
														"nodeType": "YulTypedName",
														"src": "4793:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:10",
														"nodeType": "YulTypedName",
														"src": "4805:6:10",
														"type": ""
													}
												],
												"src": "4746:329:10"
											},
											{
												"body": {
													"nativeSrc": "5146:53:10",
													"nodeType": "YulBlock",
													"src": "5146:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:10"
																		},
																		"nativeSrc": "5168:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:10"
																},
																"nativeSrc": "5156:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:10"
															},
															"nativeSrc": "5156:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:10",
														"nodeType": "YulTypedName",
														"src": "5134:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:10",
														"nodeType": "YulTypedName",
														"src": "5141:3:10",
														"type": ""
													}
												],
												"src": "5081:118:10"
											},
											{
												"body": {
													"nativeSrc": "5303:124:10",
													"nodeType": "YulBlock",
													"src": "5303:124:10",
													"statements": [
														{
															"nativeSrc": "5313:26:10",
															"nodeType": "YulAssignment",
															"src": "5313:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:10"
																},
																"nativeSrc": "5321:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:10"
																		},
																		"nativeSrc": "5402:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:10"
																},
																"nativeSrc": "5349:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:10"
															},
															"nativeSrc": "5349:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:10",
														"nodeType": "YulTypedName",
														"src": "5275:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:10",
														"nodeType": "YulTypedName",
														"src": "5287:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:10",
														"nodeType": "YulTypedName",
														"src": "5298:4:10",
														"type": ""
													}
												],
												"src": "5205:222:10"
											},
											{
												"body": {
													"nativeSrc": "5499:263:10",
													"nodeType": "YulBlock",
													"src": "5499:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:10",
																"nodeType": "YulBlock",
																"src": "5545:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:10"
																			},
																			"nativeSrc": "5547:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:10"
																		},
																		"nativeSrc": "5547:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:10"
																		},
																		"nativeSrc": "5516:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:10"
																},
																"nativeSrc": "5512:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:10"
															},
															"nativeSrc": "5509:119:10",
															"nodeType": "YulIf",
															"src": "5509:119:10"
														},
														{
															"nativeSrc": "5638:117:10",
															"nodeType": "YulBlock",
															"src": "5638:117:10",
															"statements": [
																{
																	"nativeSrc": "5653:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:10"
																				},
																				"nativeSrc": "5713:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:10"
																		},
																		"nativeSrc": "5692:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:10",
														"nodeType": "YulTypedName",
														"src": "5469:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:10",
														"nodeType": "YulTypedName",
														"src": "5480:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:10",
														"nodeType": "YulTypedName",
														"src": "5492:6:10",
														"type": ""
													}
												],
												"src": "5433:329:10"
											},
											{
												"body": {
													"nativeSrc": "5851:391:10",
													"nodeType": "YulBlock",
													"src": "5851:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:10",
																"nodeType": "YulBlock",
																"src": "5897:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:10"
																			},
																			"nativeSrc": "5899:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:10"
																		},
																		"nativeSrc": "5899:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:10"
																		},
																		"nativeSrc": "5868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:10"
																},
																"nativeSrc": "5864:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:10"
															},
															"nativeSrc": "5861:119:10",
															"nodeType": "YulIf",
															"src": "5861:119:10"
														},
														{
															"nativeSrc": "5990:117:10",
															"nodeType": "YulBlock",
															"src": "5990:117:10",
															"statements": [
																{
																	"nativeSrc": "6005:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:10"
																				},
																				"nativeSrc": "6065:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:10"
																		},
																		"nativeSrc": "6044:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:10",
															"nodeType": "YulBlock",
															"src": "6117:118:10",
															"statements": [
																{
																	"nativeSrc": "6132:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:10"
																				},
																				"nativeSrc": "6193:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:10"
																		},
																		"nativeSrc": "6172:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:10",
														"nodeType": "YulTypedName",
														"src": "5813:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:10",
														"nodeType": "YulTypedName",
														"src": "5824:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:10",
														"nodeType": "YulTypedName",
														"src": "5836:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:10",
														"nodeType": "YulTypedName",
														"src": "5844:6:10",
														"type": ""
													}
												],
												"src": "5768:474:10"
											},
											{
												"body": {
													"nativeSrc": "6276:152:10",
													"nodeType": "YulBlock",
													"src": "6276:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:10"
																},
																"nativeSrc": "6286:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:10"
															},
															"nativeSrc": "6286:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:10"
																},
																"nativeSrc": "6383:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:10"
															},
															"nativeSrc": "6383:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:10"
																},
																"nativeSrc": "6407:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:10"
															},
															"nativeSrc": "6407:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:10"
											},
											{
												"body": {
													"nativeSrc": "6485:269:10",
													"nodeType": "YulBlock",
													"src": "6485:269:10",
													"statements": [
														{
															"nativeSrc": "6495:22:10",
															"nodeType": "YulAssignment",
															"src": "6495:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:10"
																},
																"nativeSrc": "6505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:10"
																}
															]
														},
														{
															"nativeSrc": "6526:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:10"
																},
																"nativeSrc": "6552:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:10",
																"nodeType": "YulBlock",
																"src": "6603:51:10",
																"statements": [
																	{
																		"nativeSrc": "6617:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:10"
																			},
																			"nativeSrc": "6627:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:10"
																},
																"nativeSrc": "6576:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:10"
															},
															"nativeSrc": "6573:81:10",
															"nodeType": "YulIf",
															"src": "6573:81:10"
														},
														{
															"body": {
																"nativeSrc": "6706:42:10",
																"nodeType": "YulBlock",
																"src": "6706:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:10"
																			},
																			"nativeSrc": "6720:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:10"
																		},
																		"nativeSrc": "6720:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:10"
																		},
																		"nativeSrc": "6690:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:10"
																},
																"nativeSrc": "6667:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:10"
															},
															"nativeSrc": "6664:84:10",
															"nodeType": "YulIf",
															"src": "6664:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:10",
														"nodeType": "YulTypedName",
														"src": "6469:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:10",
														"nodeType": "YulTypedName",
														"src": "6478:6:10",
														"type": ""
													}
												],
												"src": "6434:320:10"
											},
											{
												"body": {
													"nativeSrc": "6914:288:10",
													"nodeType": "YulBlock",
													"src": "6914:288:10",
													"statements": [
														{
															"nativeSrc": "6924:26:10",
															"nodeType": "YulAssignment",
															"src": "6924:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6932:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:10"
																},
																"nativeSrc": "6932:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6932:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6924:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7004:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7004:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7017:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7028:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7028:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7013:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:10"
																		},
																		"nativeSrc": "7013:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6960:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6960:43:10"
																},
																"nativeSrc": "6960:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6960:71:10"
															},
															"nativeSrc": "6960:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6960:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7085:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:10"
																		},
																		"nativeSrc": "7094:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7041:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7041:43:10"
																},
																"nativeSrc": "7041:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7041:72:10"
															},
															"nativeSrc": "7041:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7041:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7167:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7167:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7180:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7180:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7191:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:10"
																		},
																		"nativeSrc": "7176:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7123:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7123:43:10"
																},
																"nativeSrc": "7123:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7123:72:10"
															},
															"nativeSrc": "7123:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7123:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6760:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:10",
														"nodeType": "YulTypedName",
														"src": "6870:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6882:6:10",
														"nodeType": "YulTypedName",
														"src": "6882:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6890:6:10",
														"nodeType": "YulTypedName",
														"src": "6890:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6898:6:10",
														"nodeType": "YulTypedName",
														"src": "6898:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6909:4:10",
														"nodeType": "YulTypedName",
														"src": "6909:4:10",
														"type": ""
													}
												],
												"src": "6760:442:10"
											},
											{
												"body": {
													"nativeSrc": "7236:152:10",
													"nodeType": "YulBlock",
													"src": "7236:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:10"
																},
																"nativeSrc": "7246:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:10"
															},
															"nativeSrc": "7246:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:10"
																},
																"nativeSrc": "7343:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:10"
															},
															"nativeSrc": "7343:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:10"
																},
																"nativeSrc": "7367:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:10"
															},
															"nativeSrc": "7367:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:10"
											},
											{
												"body": {
													"nativeSrc": "7438:147:10",
													"nodeType": "YulBlock",
													"src": "7438:147:10",
													"statements": [
														{
															"nativeSrc": "7448:25:10",
															"nodeType": "YulAssignment",
															"src": "7448:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:10"
																},
																"nativeSrc": "7453:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:10"
																}
															]
														},
														{
															"nativeSrc": "7482:25:10",
															"nodeType": "YulAssignment",
															"src": "7482:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:10"
																},
																"nativeSrc": "7487:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:10"
																}
															]
														},
														{
															"nativeSrc": "7516:16:10",
															"nodeType": "YulAssignment",
															"src": "7516:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:10"
																},
																"nativeSrc": "7523:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:10",
																"nodeType": "YulBlock",
																"src": "7556:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:10"
																			},
																			"nativeSrc": "7558:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:10"
																		},
																		"nativeSrc": "7558:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:10"
																},
																"nativeSrc": "7545:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:10"
															},
															"nativeSrc": "7542:36:10",
															"nodeType": "YulIf",
															"src": "7542:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:10",
														"nodeType": "YulTypedName",
														"src": "7425:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:10",
														"nodeType": "YulTypedName",
														"src": "7428:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:10",
														"nodeType": "YulTypedName",
														"src": "7434:3:10",
														"type": ""
													}
												],
												"src": "7394:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c8063715018a6116100a0578063a9059cbb1161006f578063a9059cbb14610293578063d9e63bb1146102c3578063dd62ed3e146102df578063f2fde38b1461030f578063fe4b84df1461032b57610109565b8063715018a6146102315780638da5cb5b1461023b57806395d89b41146102595780639dc29fac1461027757610109565b806323b872dd116100dc57806323b872dd14610197578063313ce567146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b5780630c55699c1461015b57806318160ddd14610179575b5f5ffd5b610115610347565b6040516101229190610f97565b60405180910390f35b61014560048036038101906101409190611048565b6103d7565b60405161015291906110a0565b60405180910390f35b6101636103f9565b60405161017091906110c8565b60405180910390f35b6101816103ff565b60405161018e91906110c8565b60405180910390f35b6101b160048036038101906101ac91906110e1565b610408565b6040516101be91906110a0565b60405180910390f35b6101cf610436565b6040516101dc919061114c565b60405180910390f35b6101ff60048036038101906101fa9190611048565b61043e565b005b61021b60048036038101906102169190611165565b610454565b60405161022891906110c8565b60405180910390f35b610239610499565b005b6102436104ac565b604051610250919061119f565b60405180910390f35b6102616104d4565b60405161026e9190610f97565b60405180910390f35b610291600480360381019061028c9190611048565b610564565b005b6102ad60048036038101906102a89190611048565b61057a565b6040516102ba91906110a0565b60405180910390f35b6102dd60048036038101906102d891906111b8565b61059c565b005b6102f960048036038101906102f491906111e3565b6105a9565b60405161030691906110c8565b60405180910390f35b61032960048036038101906103249190611165565b61062b565b005b610345600480360381019061034091906111b8565b6106af565b005b6060600380546103569061124e565b80601f01602080910402602001604051908101604052809291908181526020018280546103829061124e565b80156103cd5780601f106103a4576101008083540402835291602001916103cd565b820191905f5260205f20905b8154815290600101906020018083116103b057829003601f168201915b5050505050905090565b5f5f6103e16106c1565b90506103ee8185856106c8565b600191505092915050565b60065481565b5f600254905090565b5f5f6104126106c1565b905061041f8582856106da565b61042a85858561076d565b60019150509392505050565b5f6012905090565b61044661085d565b61045082826108e4565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104a161085d565b6104aa5f610963565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104e39061124e565b80601f016020809104026020016040519081016040528092919081815260200182805461050f9061124e565b801561055a5780601f106105315761010080835404028352916020019161055a565b820191905f5260205f20905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b61056c61085d565b6105768282610a26565b5050565b5f5f6105846106c1565b905061059181858561076d565b600191505092915050565b6105a633826108e4565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063361085d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a3575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161069a919061119f565b60405180910390fd5b6106ac81610963565b50565b6106b7610aa5565b8060068190555050565b5f33905090565b6106d58383836001610ae5565b505050565b5f6106e584846105a9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107675781811015610758578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161074f9392919061127e565b60405180910390fd5b61076684848484035f610ae5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107dd575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107d4919061119f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084d575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610844919061119f565b60405180910390fd5b610858838383610cb4565b505050565b6108656106c1565b73ffffffffffffffffffffffffffffffffffffffff166108836104ac565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576108a66106c1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d9919061119f565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610954575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161094b919061119f565b60405180910390fd5b61095f5f8383610cb4565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a96575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a8d919061119f565b60405180910390fd5b610aa1825f83610cb4565b5050565b610aad610ecd565b610ae3576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4c919061119f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bbc919061119f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cae578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca591906110c8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d04578060025f828254610cf891906112e0565b92505081905550610dd2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d849392919061127e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e19578060025f8282540392505081905550610e63565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec091906110c8565b60405180910390a3505050565b5f610ed6610eeb565b5f0160089054906101000a900460ff16905090565b5f5f610ef5610efe565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6982610f27565b610f738185610f31565b9350610f83818560208601610f41565b610f8c81610f4f565b840191505092915050565b5f6020820190508181035f830152610faf8184610f5f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fe482610fbb565b9050919050565b610ff481610fda565b8114610ffe575f5ffd5b50565b5f8135905061100f81610feb565b92915050565b5f819050919050565b61102781611015565b8114611031575f5ffd5b50565b5f813590506110428161101e565b92915050565b5f5f6040838503121561105e5761105d610fb7565b5b5f61106b85828601611001565b925050602061107c85828601611034565b9150509250929050565b5f8115159050919050565b61109a81611086565b82525050565b5f6020820190506110b35f830184611091565b92915050565b6110c281611015565b82525050565b5f6020820190506110db5f8301846110b9565b92915050565b5f5f5f606084860312156110f8576110f7610fb7565b5b5f61110586828701611001565b935050602061111686828701611001565b925050604061112786828701611034565b9150509250925092565b5f60ff82169050919050565b61114681611131565b82525050565b5f60208201905061115f5f83018461113d565b92915050565b5f6020828403121561117a57611179610fb7565b5b5f61118784828501611001565b91505092915050565b61119981610fda565b82525050565b5f6020820190506111b25f830184611190565b92915050565b5f602082840312156111cd576111cc610fb7565b5b5f6111da84828501611034565b91505092915050565b5f5f604083850312156111f9576111f8610fb7565b5b5f61120685828601611001565b925050602061121785828601611001565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061126557607f821691505b60208210810361127857611277611221565b5b50919050565b5f6060820190506112915f830186611190565b61129e60208301856110b9565b6112ab60408301846110b9565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112ea82611015565b91506112f583611015565b925082820190508082111561130d5761130c6112b3565b5b9291505056fea2646970667358221220903dca19e44ba7d1c4fbb475778a305a9b4640cd9c4f8eb4f8c31f0689ed215164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xD9E63BB1 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x32B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x277 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E1 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3EE DUP2 DUP6 DUP6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x412 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F DUP6 DUP3 DUP6 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x42A DUP6 DUP6 DUP6 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x450 DUP3 DUP3 PUSH2 0x8E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4AA PUSH0 PUSH2 0x963 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50F SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x531 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x85D JUMP JUMPDEST PUSH2 0x576 DUP3 DUP3 PUSH2 0xA26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x584 PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP2 DUP6 DUP6 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A6 CALLER DUP3 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x633 PUSH2 0x85D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x963 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B7 PUSH2 0xAA5 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E5 DUP5 DUP5 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x858 DUP4 DUP4 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0x6C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x4AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x954 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95F PUSH0 DUP4 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA1 DUP3 PUSH0 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAAD PUSH2 0xECD JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD04 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE19 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE63 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED6 PUSH2 0xEEB JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xEF5 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF69 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xF73 DUP2 DUP6 PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP PUSH2 0xF83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF4F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAF DUP2 DUP5 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF4 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100F DUP2 PUSH2 0xFEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1027 DUP2 PUSH2 0x1015 JUMP JUMPDEST DUP2 EQ PUSH2 0x1031 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1042 DUP2 PUSH2 0x101E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x106B DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x107C DUP6 DUP3 DUP7 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C2 DUP2 PUSH2 0x1015 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DB PUSH0 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1105 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1116 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1127 DUP7 DUP3 DUP8 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1146 DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH0 DUP4 ADD DUP5 PUSH2 0x113D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1187 DUP5 DUP3 DUP6 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1199 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DA DUP5 DUP3 DUP6 ADD PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F9 JUMPI PUSH2 0x11F8 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1206 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1217 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1265 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1278 JUMPI PUSH2 0x1277 PUSH2 0x1221 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH0 DUP4 ADD DUP7 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x129E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x12AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12EA DUP3 PUSH2 0x1015 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F5 DUP4 PUSH2 0x1015 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130C PUSH2 0x12B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 RETURNDATASIZE 0xCA NOT RETF 0x4B 0xA7 DATALOADN 0xC4FB 0xB4 PUSH22 0x778A305A9B4640CD9C4F8EB4F8C31F0689ED21516473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "452:627:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;509:16:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:95:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;977:99:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;623:107:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3532:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:81:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;509:16:8:-;;;;:::o;2830:97:3:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;874:95:8:-;1531:13:1;:11;:13::i;:::-;944:17:8::1;950:2;954:6;944:5;:17::i;:::-;874:95:::0;;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;977:99:8:-;1531:13:1;:11;:13::i;:::-;1049:19:8::1;1055:4;1061:6;1049:5;:19::i;:::-;977:99:::0;;:::o;3296:178:3:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;623:107:8:-;690:32;696:10;708:13;690:5;:32::i;:::-;623:107;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;534:81:8:-;6929:20:0;:18;:20::i;:::-;605:2:8::1;601:1;:6;;;;534:81:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:3:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:3:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;7082:141:0:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;9682:432:3:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;8485:120:0:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;9071:205::-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:442::-;6909:4;6947:2;6936:9;6932:18;6924:26;;6960:71;7028:1;7017:9;7013:17;7004:6;6960:71;:::i;:::-;7041:72;7109:2;7098:9;7094:18;7085:6;7041:72;:::i;:::-;7123;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;6760:442;;;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "987400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"burn(address,uint256)": "infinite",
								"decimals()": "383",
								"initialize(uint256)": "24976",
								"initializeSupply(uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"x()": "2493"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 866,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 866,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 866,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 764,
									"end": 866,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 836,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 1079,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220903dca19e44ba7d1c4fbb475778a305a9b4640cd9c4f8eb4f8c31f0689ed215164736f6c634300081e0033",
									".code": [
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "D9E63BB1"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "FE4B84DF"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "9DC29FAC"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "C55699C"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 1079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 950,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 954,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 944,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 944,
											"end": 961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1055,
											"end": 1059,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1049,
											"end": 1068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 690,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 708,
											"end": 721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 690,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 690,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7013,
											"end": 7030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6960,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7041,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7123,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contract/DividendLogic.sol",
								"contract/MyToken.sol",
								"contract/MyToken2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"initialize(uint256)": "fe4b84df",
							"initializeSupply(uint256)": "d9e63bb1",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initializeSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contract/MyToken.sol\":{\"keccak256\":\"0xc9dcc8596a50454646e9931c0665d2607b79bb08b4ee0a4951329dc338386a32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a105f88bc7f0c13392833f0ef6bb166eb618069fcaf8350c3bc0b772fc31e08\",\"dweb:/ipfs/QmWb9ckjLq9LtNTVAxhJhPYsFxSRjC24yAfaD8D63quy4h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 575,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 581,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 583,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 585,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 587,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 276,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1509,
								"contract": "contract/MyToken.sol:MyToken",
								"label": "x",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/MyToken2.sol": {
				"MyToken2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DividendClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "DividendDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addBatchDividendsUsers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addDividendsUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "distributeDividends",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "dividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimableDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "holders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializeDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"name": "initializeSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDividendTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "updateContractStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyToken2.sol\":214:766  contract MyToken2 is MyToken, DividendLogic {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contract/MyToken.sol\":826:836  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contract/MyToken2.sol\":214:766  contract MyToken2 is MyToken, DividendLogic {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract/MyToken2.sol\":214:766  contract MyToken2 is MyToken, DividendLogic {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/MyToken2.sol\":214:766  contract MyToken2 is MyToken, DividendLogic {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7dfb3383\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd9e63bb1\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd9e63bb1\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x9dc29fac\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xad9e7611\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc7e772ed\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x997664d7\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x998aa465\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x7dfb3383\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8284ce3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8ad0aaef\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x2a11ced0\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x6264786c\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x6264786c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x68306e43\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x2a11ced0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2eb21b22\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x0d8e6e2c\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x213a852f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0c55699c\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":509:525  uint256 public x */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken2.sol\":651:736  function getVersion() public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":1573:2715  function distributeDividends(address token) external payable onlyOwner {... */\n    tag_7:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":464:488  address[] public holders */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":419:455  uint256 public lastDividendTimestamp */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contract/DividendLogic.sol\":1098:1460  function addBatchDividendsUsers(address[] memory users, uint256[] memory amounts) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contract/DividendLogic.sol\":272:316  mapping(address => uint256) public dividends */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      revert(0x00, 0x00)\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      revert(0x00, 0x00)\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contract/DividendLogic.sol\":325:376  mapping(address => uint256) public claimedDividends */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":3399:3517  function getClaimableDividends(address user) external view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":853:1057  function addDividendsUser(address user, uint256 amount) external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      revert(0x00, 0x00)\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":383:412  uint256 public totalDividends */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      revert(0x00, 0x00)\n    tag_134:\n      pop\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyToken2.sol\":553:643  function updateContractStatus(uint256 _x) public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      revert(0x00, 0x00)\n    tag_138:\n      pop\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      revert(0x00, 0x00)\n    tag_142:\n      pop\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      revert(0x00, 0x00)\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/DividendLogic.sol\":695:818  function initializeDividends() external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      revert(0x00, 0x00)\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contract/DividendLogic.sol\":2744:3361  function claimDividends(address user) external {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      revert(0x00, 0x00)\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      revert(0x00, 0x00)\n    tag_158:\n      pop\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      revert(0x00, 0x00)\n    tag_162:\n      pop\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      tag_166\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      revert(0x00, 0x00)\n    tag_168:\n      pop\n      tag_169\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n    tag_169:\n      stop\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      revert(0x00, 0x00)\n    tag_172:\n      pop\n      tag_173\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n    tag_173:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_178\n      jump\t// in\n    tag_179:\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_181\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_180)\n    tag_181:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_182:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_182\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":509:525  uint256 public x */\n    tag_53:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contract/MyToken2.sol\":651:736  function getVersion() public view returns(uint256){... */\n    tag_58:\n        /* \"contract/MyToken2.sol\":693:700  uint256 */\n      0x00\n        /* \"contract/MyToken2.sol\":719:728  MyToken.x */\n      sload(0x06)\n        /* \"contract/MyToken2.sol\":712:728  return MyToken.x */\n      swap1\n      pop\n        /* \"contract/MyToken2.sol\":651:736  function getVersion() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":1573:2715  function distributeDividends(address token) external payable onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contract/DividendLogic.sol\":1724:1725  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":1712:1721  msg.value */\n      callvalue\n        /* \"contract/DividendLogic.sol\":1712:1725  msg.value > 0 */\n      gt\n        /* \"contract/DividendLogic.sol\":1704:1755  require(msg.value > 0, \"No ETH sent for dividends\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contract/DividendLogic.sol\":1847:1848  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":1824:1829  token */\n      dup2\n        /* \"contract/DividendLogic.sol\":1817:1842  IERC20(token).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contract/DividendLogic.sol\":1817:1844  IERC20(token).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contract/DividendLogic.sol\":1817:1848  IERC20(token).totalSupply() > 0 */\n      gt\n        /* \"contract/DividendLogic.sol\":1809:1869  require(IERC20(token).totalSupply() > 0, \"No tokens issued\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contract/DividendLogic.sol\":1940:1949  msg.value */\n      callvalue\n        /* \"contract/DividendLogic.sol\":1922:1936  totalDividends */\n      0x09\n      0x00\n        /* \"contract/DividendLogic.sol\":1922:1949  totalDividends += msg.value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":1984:1999  block.timestamp */\n      timestamp\n        /* \"contract/DividendLogic.sol\":1960:1981  lastDividendTimestamp */\n      0x0a\n        /* \"contract/DividendLogic.sol\":1960:1999  lastDividendTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":2078:2097  uint256 totalTokens */\n      0x00\n        /* \"contract/DividendLogic.sol\":2107:2112  token */\n      dup2\n        /* \"contract/DividendLogic.sol\":2100:2125  IERC20(token).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contract/DividendLogic.sol\":2100:2127  IERC20(token).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_208:\n        /* \"contract/DividendLogic.sol\":2078:2127  uint256 totalTokens = IERC20(token).totalSupply() */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2221:2230  uint256 i */\n      0x00\n        /* \"contract/DividendLogic.sol\":2233:2234  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":2221:2234  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2216:2643  for (uint256 i = 0; i < holders.length; i++) {... */\n    tag_209:\n        /* \"contract/DividendLogic.sol\":2240:2247  holders */\n      0x0b\n        /* \"contract/DividendLogic.sol\":2240:2254  holders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2236:2237  i */\n      dup2\n        /* \"contract/DividendLogic.sol\":2236:2254  i < holders.length */\n      lt\n        /* \"contract/DividendLogic.sol\":2216:2643  for (uint256 i = 0; i < holders.length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contract/DividendLogic.sol\":2313:2327  address holder */\n      0x00\n        /* \"contract/DividendLogic.sol\":2330:2337  holders */\n      0x0b\n        /* \"contract/DividendLogic.sol\":2338:2339  i */\n      dup3\n        /* \"contract/DividendLogic.sol\":2330:2340  holders[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/DividendLogic.sol\":2313:2340  address holder = holders[i] */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2401:2416  uint256 balance */\n      0x00\n        /* \"contract/DividendLogic.sol\":2426:2431  token */\n      dup5\n        /* \"contract/DividendLogic.sol\":2419:2442  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contract/DividendLogic.sol\":2443:2449  holder */\n      dup4\n        /* \"contract/DividendLogic.sol\":2419:2450  IERC20(token).balanceOf(holder) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_219:\n        /* \"contract/DividendLogic.sol\":2401:2450  uint256 balance = IERC20(token).balanceOf(holder) */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2479:2480  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":2469:2476  balance */\n      dup2\n        /* \"contract/DividendLogic.sol\":2469:2480  balance > 0 */\n      gt\n        /* \"contract/DividendLogic.sol\":2465:2632  if (balance > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contract/DividendLogic.sol\":2605:2616  totalTokens */\n      dup4\n        /* \"contract/DividendLogic.sol\":2594:2601  balance */\n      dup2\n        /* \"contract/DividendLogic.sol\":2582:2591  msg.value */\n      callvalue\n        /* \"contract/DividendLogic.sol\":2582:2601  msg.value * balance */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contract/DividendLogic.sol\":2581:2616  (msg.value * balance) / totalTokens */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"contract/DividendLogic.sol\":2560:2569  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":2560:2577  dividends[holder] */\n      0x00\n        /* \"contract/DividendLogic.sol\":2570:2576  holder */\n      dup5\n        /* \"contract/DividendLogic.sol\":2560:2577  dividends[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/DividendLogic.sol\":2560:2616  dividends[holder] += (msg.value * balance) / totalTokens */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":2465:2632  if (balance > 0) {... */\n    tag_220:\n        /* \"contract/DividendLogic.sol\":2261:2643  {... */\n      pop\n      pop\n        /* \"contract/DividendLogic.sol\":2256:2259  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contract/DividendLogic.sol\":2216:2643  for (uint256 i = 0; i < holders.length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contract/DividendLogic.sol\":2660:2707  DividendDistributed(msg.value, block.timestamp) */\n      0x2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc5672352337871327\n        /* \"contract/DividendLogic.sol\":2680:2689  msg.value */\n      callvalue\n        /* \"contract/DividendLogic.sol\":2691:2706  block.timestamp */\n      timestamp\n        /* \"contract/DividendLogic.sol\":2660:2707  DividendDistributed(msg.value, block.timestamp) */\n      mload(0x40)\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contract/DividendLogic.sol\":1644:2715  {... */\n      pop\n        /* \"contract/DividendLogic.sol\":1573:2715  function distributeDividends(address token) external payable onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":464:488  address[] public holders */\n    tag_78:\n      0x0b\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":419:455  uint256 public lastDividendTimestamp */\n    tag_83:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"contract/MyToken.sol\":944:961  _mint(to, amount) */\n      tag_240\n        /* \"contract/MyToken.sol\":950:952  to */\n      dup3\n        /* \"contract/MyToken.sol\":954:960  amount */\n      dup3\n        /* \"contract/MyToken.sol\":944:949  _mint */\n      tag_241\n        /* \"contract/MyToken.sol\":944:961  _mint(to, amount) */\n      jump\t// in\n    tag_240:\n        /* \"contract/MyToken.sol\":874:969  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":1098:1460  function addBatchDividendsUsers(address[] memory users, uint256[] memory amounts) external onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_243:\n        /* \"contract/DividendLogic.sol\":1234:1241  amounts */\n      dup1\n        /* \"contract/DividendLogic.sol\":1234:1248  amounts.length */\n      mload\n        /* \"contract/DividendLogic.sol\":1218:1223  users */\n      dup3\n        /* \"contract/DividendLogic.sol\":1218:1230  users.length */\n      mload\n        /* \"contract/DividendLogic.sol\":1218:1248  users.length == amounts.length */\n      eq\n        /* \"contract/DividendLogic.sol\":1210:1275  require(users.length == amounts.length, \"Arrays length mismatch\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contract/DividendLogic.sol\":1291:1300  uint256 i */\n      0x00\n        /* \"contract/DividendLogic.sol\":1303:1304  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":1291:1304  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":1286:1453  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_248:\n        /* \"contract/DividendLogic.sol\":1310:1315  users */\n      dup3\n        /* \"contract/DividendLogic.sol\":1310:1322  users.length */\n      mload\n        /* \"contract/DividendLogic.sol\":1306:1307  i */\n      dup2\n        /* \"contract/DividendLogic.sol\":1306:1322  i < users.length */\n      lt\n        /* \"contract/DividendLogic.sol\":1286:1453  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contract/DividendLogic.sol\":1372:1373  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":1352:1374  users[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/DividendLogic.sol\":1352:1357  users */\n      dup4\n        /* \"contract/DividendLogic.sol\":1358:1359  i */\n      dup3\n        /* \"contract/DividendLogic.sol\":1352:1360  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_214\n      jump\t// in\n    tag_252:\n    tag_251:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contract/DividendLogic.sol\":1352:1374  users[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/DividendLogic.sol\":1344:1394  require(users[i] != address(0), \"Invalid address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contract/DividendLogic.sol\":1431:1438  amounts */\n      dup2\n        /* \"contract/DividendLogic.sol\":1439:1440  i */\n      dup2\n        /* \"contract/DividendLogic.sol\":1431:1441  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_257\n      tag_214\n      jump\t// in\n    tag_257:\n    tag_256:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contract/DividendLogic.sol\":1409:1418  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":1409:1428  dividends[users[i]] */\n      0x00\n        /* \"contract/DividendLogic.sol\":1419:1424  users */\n      dup6\n        /* \"contract/DividendLogic.sol\":1425:1426  i */\n      dup5\n        /* \"contract/DividendLogic.sol\":1419:1427  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_259\n      tag_214\n      jump\t// in\n    tag_259:\n    tag_258:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contract/DividendLogic.sol\":1409:1428  dividends[users[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/DividendLogic.sol\":1409:1441  dividends[users[i]] = amounts[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":1324:1327  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contract/DividendLogic.sol\":1286:1453  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"contract/DividendLogic.sol\":1098:1460  function addBatchDividendsUsers(address[] memory users, uint256[] memory amounts) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":272:316  mapping(address => uint256) public dividends */\n    tag_102:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":325:376  mapping(address => uint256) public claimedDividends */\n    tag_115:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":3399:3517  function getClaimableDividends(address user) external view returns (uint256) {... */\n    tag_120:\n        /* \"contract/DividendLogic.sol\":3467:3474  uint256 */\n      0x00\n        /* \"contract/DividendLogic.sol\":3494:3503  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":3494:3509  dividends[user] */\n      0x00\n        /* \"contract/DividendLogic.sol\":3504:3508  user */\n      dup4\n        /* \"contract/DividendLogic.sol\":3494:3509  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/DividendLogic.sol\":3487:3509  return dividends[user] */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":3399:3517  function getClaimableDividends(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":853:1057  function addDividendsUser(address user, uint256 amount) external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_268:\n        /* \"contract/DividendLogic.sol\":963:964  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":947:965  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/DividendLogic.sol\":947:951  user */\n      dup3\n        /* \"contract/DividendLogic.sol\":947:965  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/DividendLogic.sol\":939:985  require(user != address(0), \"Invalid address\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_255\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contract/DividendLogic.sol\":1014:1020  amount */\n      dup1\n        /* \"contract/DividendLogic.sol\":996:1005  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":996:1011  dividends[user] */\n      0x00\n        /* \"contract/DividendLogic.sol\":1006:1010  user */\n      dup5\n        /* \"contract/DividendLogic.sol\":996:1011  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/DividendLogic.sol\":996:1020  dividends[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":1031:1038  holders */\n      0x0b\n        /* \"contract/DividendLogic.sol\":1044:1048  user */\n      dup3\n        /* \"contract/DividendLogic.sol\":1031:1049  holders.push(user) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":853:1057  function addDividendsUser(address user, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_275\n      swap1\n      tag_178\n      jump\t// in\n    tag_275:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_276\n      swap1\n      tag_178\n      jump\t// in\n    tag_276:\n      dup1\n      iszero\n      tag_277\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_278\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_277)\n    tag_278:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_279:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_279\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":383:412  uint256 public totalDividends */\n    tag_136:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contract/MyToken2.sol\":553:643  function updateContractStatus(uint256 _x) public {... */\n    tag_141:\n        /* \"contract/MyToken2.sol\":613:635  MyToken.initialize(_x) */\n      tag_281\n        /* \"contract/MyToken2.sol\":632:634  _x */\n      dup2\n        /* \"contract/MyToken2.sol\":613:631  MyToken.initialize */\n      tag_175\n        /* \"contract/MyToken2.sol\":613:635  MyToken.initialize(_x) */\n      jump\t// in\n    tag_281:\n        /* \"contract/MyToken2.sol\":553:643  function updateContractStatus(uint256 _x) public {... */\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"contract/MyToken.sol\":1049:1068  _burn(from, amount) */\n      tag_285\n        /* \"contract/MyToken.sol\":1055:1059  from */\n      dup3\n        /* \"contract/MyToken.sol\":1061:1067  amount */\n      dup3\n        /* \"contract/MyToken.sol\":1049:1054  _burn */\n      tag_286\n        /* \"contract/MyToken.sol\":1049:1068  _burn(from, amount) */\n      jump\t// in\n    tag_285:\n        /* \"contract/MyToken.sol\":977:1076  function burn(address from, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":695:818  function initializeDividends() external onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"contract/DividendLogic.sol\":773:774  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":756:770  totalDividends */\n      0x09\n        /* \"contract/DividendLogic.sol\":756:774  totalDividends = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":809:810  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":785:806  lastDividendTimestamp */\n      0x0a\n        /* \"contract/DividendLogic.sol\":785:810  lastDividendTimestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":695:818  function initializeDividends() external onlyOwner {... */\n      jump\t// out\n        /* \"contract/DividendLogic.sol\":2744:3361  function claimDividends(address user) external {... */\n    tag_157:\n        /* \"contract/DividendLogic.sol\":2854:2868  uint256 amount */\n      0x00\n        /* \"contract/DividendLogic.sol\":2871:2880  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":2871:2886  dividends[user] */\n      0x00\n        /* \"contract/DividendLogic.sol\":2881:2885  user */\n      dup4\n        /* \"contract/DividendLogic.sol\":2871:2886  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/DividendLogic.sol\":2854:2886  uint256 amount = dividends[user] */\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":2914:2915  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":2905:2911  amount */\n      dup2\n        /* \"contract/DividendLogic.sol\":2905:2915  amount > 0 */\n      gt\n        /* \"contract/DividendLogic.sol\":2897:2941  require(amount > 0, \"No dividends to claim\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"contract/DividendLogic.sol\":3031:3032  0 */\n      0x00\n        /* \"contract/DividendLogic.sol\":3013:3022  dividends */\n      0x07\n        /* \"contract/DividendLogic.sol\":3013:3028  dividends[user] */\n      0x00\n        /* \"contract/DividendLogic.sol\":3023:3027  user */\n      dup5\n        /* \"contract/DividendLogic.sol\":3013:3028  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/DividendLogic.sol\":3013:3032  dividends[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":3124:3130  amount */\n      dup1\n        /* \"contract/DividendLogic.sol\":3098:3114  claimedDividends */\n      0x08\n        /* \"contract/DividendLogic.sol\":3098:3120  claimedDividends[user] */\n      0x00\n        /* \"contract/DividendLogic.sol\":3115:3119  user */\n      dup5\n        /* \"contract/DividendLogic.sol\":3098:3120  claimedDividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/DividendLogic.sol\":3098:3130  claimedDividends[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_297\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_297:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/DividendLogic.sol\":3217:3226  bool sent */\n      0x00\n        /* \"contract/DividendLogic.sol\":3232:3236  user */\n      dup3\n        /* \"contract/DividendLogic.sol\":3232:3241  user.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/DividendLogic.sol\":3249:3255  amount */\n      dup3\n        /* \"contract/DividendLogic.sol\":3232:3260  user.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_302\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_301)\n    tag_302:\n      0x60\n      swap2\n      pop\n    tag_301:\n      pop\n        /* \"contract/DividendLogic.sol\":3216:3260  (bool sent, ) = user.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contract/DividendLogic.sol\":3279:3283  sent */\n      dup1\n        /* \"contract/DividendLogic.sol\":3271:3306  require(sent, \"Failed to send ETH\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"contract/DividendLogic.sol\":3340:3344  user */\n      dup3\n        /* \"contract/DividendLogic.sol\":3324:3353  DividendClaimed(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56\n        /* \"contract/DividendLogic.sol\":3346:3352  amount */\n      dup4\n        /* \"contract/DividendLogic.sol\":3324:3353  DividendClaimed(user, amount) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/DividendLogic.sol\":2791:3361  {... */\n      pop\n      pop\n        /* \"contract/DividendLogic.sol\":2744:3361  function claimDividends(address user) external {... */\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n    tag_161:\n        /* \"contract/MyToken.sol\":690:722  _mint(msg.sender, initialSupply) */\n      tag_308\n        /* \"contract/MyToken.sol\":696:706  msg.sender */\n      caller\n        /* \"contract/MyToken.sol\":708:721  initialSupply */\n      dup3\n        /* \"contract/MyToken.sol\":690:695  _mint */\n      tag_241\n        /* \"contract/MyToken.sol\":690:722  _mint(msg.sender, initialSupply) */\n      jump\t// in\n    tag_308:\n        /* \"contract/MyToken.sol\":623:730  function initializeSupply(uint256 initialSupply) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_315\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_317:\n        /* \"contract/MyToken.sol\":605:607  _x */\n      dup1\n        /* \"contract/MyToken.sol\":601:602  x */\n      0x06\n        /* \"contract/MyToken.sol\":601:607  x = _x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyToken.sol\":534:615  function initialize(uint256 _x) public onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_326\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_328\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_363\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_366\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_366:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_367)\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_371)\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_372\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_380:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_381:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_382:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_383:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_384:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_437\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_380\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":711:782   */\n      tag_438\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_381\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_439\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_382\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":881:910   */\n      tag_440\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_383\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_43:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_442\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_384\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_385:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_386:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_387:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_388:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_389:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_448\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_388\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_390:\n        /* \"#utility.yul\":1876:1900   */\n      tag_450\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_389\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_451:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_391:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_453\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_390\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_392:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_393:\n        /* \"#utility.yul\":2232:2256   */\n      tag_456\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_392\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_457:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_394:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_459\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_393\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_47:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_462\n      tag_386\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2525:2644   */\n    tag_461:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_463\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_391\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_464\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_394\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_395:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_396:\n        /* \"#utility.yul\":3089:3110   */\n      tag_467\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_395\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_50:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_469\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_396\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_397:\n        /* \"#utility.yul\":3426:3450   */\n      tag_471\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_392\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_55:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_473\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_397\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_66:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_476\n      tag_386\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3767:3886   */\n    tag_475:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_477\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_391\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_71:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_480\n      tag_386\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4136:4255   */\n    tag_479:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_481\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_391\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_482\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_391\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_483\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_394\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4980   */\n    tag_77:\n        /* \"#utility.yul\":4710:4716   */\n      0x00\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4747:4756   */\n      dup3\n        /* \"#utility.yul\":4738:4745   */\n      dup5\n        /* \"#utility.yul\":4734:4757   */\n      sub\n        /* \"#utility.yul\":4730:4762   */\n      slt\n        /* \"#utility.yul\":4727:4846   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4765:4844   */\n      tag_486\n      tag_386\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":4727:4846   */\n    tag_485:\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4910:4963   */\n      tag_487\n        /* \"#utility.yul\":4955:4962   */\n      dup5\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4935:4944   */\n      dup6\n        /* \"#utility.yul\":4931:4953   */\n      add\n        /* \"#utility.yul\":4910:4963   */\n      tag_394\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4900:4963   */\n      swap2\n      pop\n        /* \"#utility.yul\":4856:4973   */\n      pop\n        /* \"#utility.yul\":4651:4980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4986:5104   */\n    tag_398:\n        /* \"#utility.yul\":5073:5097   */\n      tag_489\n        /* \"#utility.yul\":5091:5096   */\n      dup2\n        /* \"#utility.yul\":5073:5097   */\n      tag_389\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5068:5071   */\n      dup3\n        /* \"#utility.yul\":5061:5098   */\n      mstore\n        /* \"#utility.yul\":4986:5104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5332   */\n    tag_80:\n        /* \"#utility.yul\":5203:5207   */\n      0x00\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"#utility.yul\":5230:5239   */\n      dup3\n        /* \"#utility.yul\":5226:5244   */\n      add\n        /* \"#utility.yul\":5218:5244   */\n      swap1\n      pop\n        /* \"#utility.yul\":5254:5325   */\n      tag_491\n        /* \"#utility.yul\":5322:5323   */\n      0x00\n        /* \"#utility.yul\":5311:5320   */\n      dup4\n        /* \"#utility.yul\":5307:5324   */\n      add\n        /* \"#utility.yul\":5298:5304   */\n      dup5\n        /* \"#utility.yul\":5254:5325   */\n      tag_398\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5110:5332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5338:5424   */\n    tag_399:\n        /* \"#utility.yul\":5373:5380   */\n      0x00\n        /* \"#utility.yul\":5413:5417   */\n      0xff\n        /* \"#utility.yul\":5406:5411   */\n      dup3\n        /* \"#utility.yul\":5402:5418   */\n      and\n        /* \"#utility.yul\":5391:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_400:\n        /* \"#utility.yul\":5513:5535   */\n      tag_494\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_399\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5762   */\n    tag_89:\n        /* \"#utility.yul\":5637:5641   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5664:5673   */\n      dup3\n        /* \"#utility.yul\":5660:5678   */\n      add\n        /* \"#utility.yul\":5652:5678   */\n      swap1\n      pop\n        /* \"#utility.yul\":5688:5755   */\n      tag_496\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5688:5755   */\n      tag_400\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":5548:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5885   */\n    tag_401:\n        /* \"#utility.yul\":5877:5878   */\n      0x00\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5867:5879   */\n      revert\n        /* \"#utility.yul\":5891:6071   */\n    tag_402:\n        /* \"#utility.yul\":5939:6016   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5929:6017   */\n      mstore\n        /* \"#utility.yul\":6036:6040   */\n      0x41\n        /* \"#utility.yul\":6033:6034   */\n      0x04\n        /* \"#utility.yul\":6026:6041   */\n      mstore\n        /* \"#utility.yul\":6060:6064   */\n      0x24\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6050:6065   */\n      revert\n        /* \"#utility.yul\":6077:6358   */\n    tag_403:\n        /* \"#utility.yul\":6160:6187   */\n      tag_500\n        /* \"#utility.yul\":6182:6186   */\n      dup3\n        /* \"#utility.yul\":6160:6187   */\n      tag_383\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6152:6158   */\n      dup2\n        /* \"#utility.yul\":6148:6188   */\n      add\n        /* \"#utility.yul\":6290:6296   */\n      dup2\n        /* \"#utility.yul\":6278:6288   */\n      dup2\n        /* \"#utility.yul\":6275:6297   */\n      lt\n        /* \"#utility.yul\":6254:6272   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6242:6252   */\n      dup3\n        /* \"#utility.yul\":6239:6273   */\n      gt\n        /* \"#utility.yul\":6236:6298   */\n      or\n        /* \"#utility.yul\":6233:6321   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":6301:6319   */\n      tag_502\n      tag_402\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6233:6321   */\n    tag_501:\n        /* \"#utility.yul\":6341:6351   */\n      dup1\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6330:6352   */\n      mstore\n        /* \"#utility.yul\":6120:6358   */\n      pop\n        /* \"#utility.yul\":6077:6358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6493   */\n    tag_404:\n        /* \"#utility.yul\":6398:6404   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_504\n      tag_385\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":6415:6445   */\n      swap1\n      pop\n        /* \"#utility.yul\":6454:6487   */\n      tag_505\n        /* \"#utility.yul\":6482:6486   */\n      dup3\n        /* \"#utility.yul\":6474:6480   */\n      dup3\n        /* \"#utility.yul\":6454:6487   */\n      tag_403\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6364:6493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6499:6810   */\n    tag_405:\n        /* \"#utility.yul\":6576:6580   */\n      0x00\n        /* \"#utility.yul\":6666:6684   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6658:6664   */\n      dup3\n        /* \"#utility.yul\":6655:6685   */\n      gt\n        /* \"#utility.yul\":6652:6708   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":6688:6706   */\n      tag_508\n      tag_402\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6652:6708   */\n    tag_507:\n        /* \"#utility.yul\":6738:6742   */\n      0x20\n        /* \"#utility.yul\":6730:6736   */\n      dup3\n        /* \"#utility.yul\":6726:6743   */\n      mul\n        /* \"#utility.yul\":6718:6743   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6802   */\n      0x20\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6788:6803   */\n      add\n        /* \"#utility.yul\":6780:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6499:6810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6933   */\n    tag_406:\n        /* \"#utility.yul\":6925:6926   */\n      0x00\n        /* \"#utility.yul\":6922:6923   */\n      0x00\n        /* \"#utility.yul\":6915:6927   */\n      revert\n        /* \"#utility.yul\":6956:7666   */\n    tag_407:\n        /* \"#utility.yul\":7052:7057   */\n      0x00\n        /* \"#utility.yul\":7077:7158   */\n      tag_511\n        /* \"#utility.yul\":7093:7157   */\n      tag_512\n        /* \"#utility.yul\":7150:7156   */\n      dup5\n        /* \"#utility.yul\":7093:7157   */\n      tag_405\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":7077:7158   */\n      tag_404\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":7068:7158   */\n      swap1\n      pop\n        /* \"#utility.yul\":7178:7183   */\n      dup1\n        /* \"#utility.yul\":7207:7213   */\n      dup4\n        /* \"#utility.yul\":7200:7205   */\n      dup3\n        /* \"#utility.yul\":7193:7214   */\n      mstore\n        /* \"#utility.yul\":7241:7245   */\n      0x20\n        /* \"#utility.yul\":7234:7239   */\n      dup3\n        /* \"#utility.yul\":7230:7246   */\n      add\n        /* \"#utility.yul\":7223:7246   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7298   */\n      0x20\n        /* \"#utility.yul\":7286:7292   */\n      dup5\n        /* \"#utility.yul\":7282:7299   */\n      mul\n        /* \"#utility.yul\":7274:7280   */\n      dup4\n        /* \"#utility.yul\":7270:7300   */\n      add\n        /* \"#utility.yul\":7323:7326   */\n      dup6\n        /* \"#utility.yul\":7315:7321   */\n      dup2\n        /* \"#utility.yul\":7312:7327   */\n      gt\n        /* \"#utility.yul\":7309:7431   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":7342:7421   */\n      tag_514\n      tag_406\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":7309:7431   */\n    tag_513:\n        /* \"#utility.yul\":7457:7463   */\n      dup4\n        /* \"#utility.yul\":7440:7660   */\n    tag_515:\n        /* \"#utility.yul\":7474:7480   */\n      dup2\n        /* \"#utility.yul\":7469:7472   */\n      dup2\n        /* \"#utility.yul\":7466:7481   */\n      lt\n        /* \"#utility.yul\":7440:7660   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":7549:7552   */\n      dup1\n        /* \"#utility.yul\":7578:7615   */\n      tag_518\n        /* \"#utility.yul\":7611:7614   */\n      dup9\n        /* \"#utility.yul\":7599:7609   */\n      dup3\n        /* \"#utility.yul\":7578:7615   */\n      tag_391\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":7573:7576   */\n      dup5\n        /* \"#utility.yul\":7566:7616   */\n      mstore\n        /* \"#utility.yul\":7645:7649   */\n      0x20\n        /* \"#utility.yul\":7640:7643   */\n      dup5\n        /* \"#utility.yul\":7636:7650   */\n      add\n        /* \"#utility.yul\":7629:7650   */\n      swap4\n      pop\n        /* \"#utility.yul\":7516:7660   */\n      pop\n        /* \"#utility.yul\":7500:7504   */\n      0x20\n        /* \"#utility.yul\":7495:7498   */\n      dup2\n        /* \"#utility.yul\":7491:7505   */\n      add\n        /* \"#utility.yul\":7484:7505   */\n      swap1\n      pop\n        /* \"#utility.yul\":7440:7660   */\n      jump(tag_515)\n    tag_517:\n        /* \"#utility.yul\":7444:7465   */\n      pop\n        /* \"#utility.yul\":7058:7666   */\n      pop\n      pop\n        /* \"#utility.yul\":6956:7666   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7689:8059   */\n    tag_408:\n        /* \"#utility.yul\":7760:7765   */\n      0x00\n        /* \"#utility.yul\":7809:7812   */\n      dup3\n        /* \"#utility.yul\":7802:7806   */\n      0x1f\n        /* \"#utility.yul\":7794:7800   */\n      dup4\n        /* \"#utility.yul\":7790:7807   */\n      add\n        /* \"#utility.yul\":7786:7813   */\n      slt\n        /* \"#utility.yul\":7776:7898   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7817:7896   */\n      tag_521\n      tag_401\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7776:7898   */\n    tag_520:\n        /* \"#utility.yul\":7934:7940   */\n      dup2\n        /* \"#utility.yul\":7921:7941   */\n      calldataload\n        /* \"#utility.yul\":7959:8053   */\n      tag_522\n        /* \"#utility.yul\":8049:8052   */\n      dup5\n        /* \"#utility.yul\":8041:8047   */\n      dup3\n        /* \"#utility.yul\":8034:8038   */\n      0x20\n        /* \"#utility.yul\":8026:8032   */\n      dup7\n        /* \"#utility.yul\":8022:8039   */\n      add\n        /* \"#utility.yul\":7959:8053   */\n      tag_407\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":7950:8053   */\n      swap2\n      pop\n        /* \"#utility.yul\":7766:8059   */\n      pop\n        /* \"#utility.yul\":7689:8059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8065:8376   */\n    tag_409:\n        /* \"#utility.yul\":8142:8146   */\n      0x00\n        /* \"#utility.yul\":8232:8250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8221:8251   */\n      gt\n        /* \"#utility.yul\":8218:8274   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":8254:8272   */\n      tag_525\n      tag_402\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":8218:8274   */\n    tag_524:\n        /* \"#utility.yul\":8304:8308   */\n      0x20\n        /* \"#utility.yul\":8296:8302   */\n      dup3\n        /* \"#utility.yul\":8292:8309   */\n      mul\n        /* \"#utility.yul\":8284:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":8364:8368   */\n      0x20\n        /* \"#utility.yul\":8358:8362   */\n      dup2\n        /* \"#utility.yul\":8354:8369   */\n      add\n        /* \"#utility.yul\":8346:8369   */\n      swap1\n      pop\n        /* \"#utility.yul\":8065:8376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8399:9109   */\n    tag_410:\n        /* \"#utility.yul\":8495:8500   */\n      0x00\n        /* \"#utility.yul\":8520:8601   */\n      tag_527\n        /* \"#utility.yul\":8536:8600   */\n      tag_528\n        /* \"#utility.yul\":8593:8599   */\n      dup5\n        /* \"#utility.yul\":8536:8600   */\n      tag_409\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8520:8601   */\n      tag_404\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":8511:8601   */\n      swap1\n      pop\n        /* \"#utility.yul\":8621:8626   */\n      dup1\n        /* \"#utility.yul\":8650:8656   */\n      dup4\n        /* \"#utility.yul\":8643:8648   */\n      dup3\n        /* \"#utility.yul\":8636:8657   */\n      mstore\n        /* \"#utility.yul\":8684:8688   */\n      0x20\n        /* \"#utility.yul\":8677:8682   */\n      dup3\n        /* \"#utility.yul\":8673:8689   */\n      add\n        /* \"#utility.yul\":8666:8689   */\n      swap1\n      pop\n        /* \"#utility.yul\":8737:8741   */\n      0x20\n        /* \"#utility.yul\":8729:8735   */\n      dup5\n        /* \"#utility.yul\":8725:8742   */\n      mul\n        /* \"#utility.yul\":8717:8723   */\n      dup4\n        /* \"#utility.yul\":8713:8743   */\n      add\n        /* \"#utility.yul\":8766:8769   */\n      dup6\n        /* \"#utility.yul\":8758:8764   */\n      dup2\n        /* \"#utility.yul\":8755:8770   */\n      gt\n        /* \"#utility.yul\":8752:8874   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":8785:8864   */\n      tag_530\n      tag_406\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8752:8874   */\n    tag_529:\n        /* \"#utility.yul\":8900:8906   */\n      dup4\n        /* \"#utility.yul\":8883:9103   */\n    tag_531:\n        /* \"#utility.yul\":8917:8923   */\n      dup2\n        /* \"#utility.yul\":8912:8915   */\n      dup2\n        /* \"#utility.yul\":8909:8924   */\n      lt\n        /* \"#utility.yul\":8883:9103   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":8992:8995   */\n      dup1\n        /* \"#utility.yul\":9021:9058   */\n      tag_534\n        /* \"#utility.yul\":9054:9057   */\n      dup9\n        /* \"#utility.yul\":9042:9052   */\n      dup3\n        /* \"#utility.yul\":9021:9058   */\n      tag_394\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9016:9019   */\n      dup5\n        /* \"#utility.yul\":9009:9059   */\n      mstore\n        /* \"#utility.yul\":9088:9092   */\n      0x20\n        /* \"#utility.yul\":9083:9086   */\n      dup5\n        /* \"#utility.yul\":9079:9093   */\n      add\n        /* \"#utility.yul\":9072:9093   */\n      swap4\n      pop\n        /* \"#utility.yul\":8959:9103   */\n      pop\n        /* \"#utility.yul\":8943:8947   */\n      0x20\n        /* \"#utility.yul\":8938:8941   */\n      dup2\n        /* \"#utility.yul\":8934:8948   */\n      add\n        /* \"#utility.yul\":8927:8948   */\n      swap1\n      pop\n        /* \"#utility.yul\":8883:9103   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":8887:8908   */\n      pop\n        /* \"#utility.yul\":8501:9109   */\n      pop\n      pop\n        /* \"#utility.yul\":8399:9109   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:9502   */\n    tag_411:\n        /* \"#utility.yul\":9203:9208   */\n      0x00\n        /* \"#utility.yul\":9252:9255   */\n      dup3\n        /* \"#utility.yul\":9245:9249   */\n      0x1f\n        /* \"#utility.yul\":9237:9243   */\n      dup4\n        /* \"#utility.yul\":9233:9250   */\n      add\n        /* \"#utility.yul\":9229:9256   */\n      slt\n        /* \"#utility.yul\":9219:9341   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_537\n      tag_401\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":9219:9341   */\n    tag_536:\n        /* \"#utility.yul\":9377:9383   */\n      dup2\n        /* \"#utility.yul\":9364:9384   */\n      calldataload\n        /* \"#utility.yul\":9402:9496   */\n      tag_538\n        /* \"#utility.yul\":9492:9495   */\n      dup5\n        /* \"#utility.yul\":9484:9490   */\n      dup3\n        /* \"#utility.yul\":9477:9481   */\n      0x20\n        /* \"#utility.yul\":9469:9475   */\n      dup7\n        /* \"#utility.yul\":9465:9482   */\n      add\n        /* \"#utility.yul\":9402:9496   */\n      tag_410\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":9393:9496   */\n      swap2\n      pop\n        /* \"#utility.yul\":9209:9502   */\n      pop\n        /* \"#utility.yul\":9132:9502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9508:10402   */\n    tag_97:\n        /* \"#utility.yul\":9626:9632   */\n      0x00\n        /* \"#utility.yul\":9634:9640   */\n      0x00\n        /* \"#utility.yul\":9683:9685   */\n      0x40\n        /* \"#utility.yul\":9671:9680   */\n      dup4\n        /* \"#utility.yul\":9662:9669   */\n      dup6\n        /* \"#utility.yul\":9658:9681   */\n      sub\n        /* \"#utility.yul\":9654:9686   */\n      slt\n        /* \"#utility.yul\":9651:9770   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":9689:9768   */\n      tag_541\n      tag_386\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9651:9770   */\n    tag_540:\n        /* \"#utility.yul\":9837:9838   */\n      0x00\n        /* \"#utility.yul\":9826:9835   */\n      dup4\n        /* \"#utility.yul\":9822:9839   */\n      add\n        /* \"#utility.yul\":9809:9840   */\n      calldataload\n        /* \"#utility.yul\":9867:9885   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9859:9865   */\n      dup2\n        /* \"#utility.yul\":9856:9886   */\n      gt\n        /* \"#utility.yul\":9853:9970   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":9889:9968   */\n      tag_543\n      tag_387\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9853:9970   */\n    tag_542:\n        /* \"#utility.yul\":9994:10072   */\n      tag_544\n        /* \"#utility.yul\":10064:10071   */\n      dup6\n        /* \"#utility.yul\":10055:10061   */\n      dup3\n        /* \"#utility.yul\":10044:10053   */\n      dup7\n        /* \"#utility.yul\":10040:10062   */\n      add\n        /* \"#utility.yul\":9994:10072   */\n      tag_408\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9984:10072   */\n      swap3\n      pop\n        /* \"#utility.yul\":9780:10082   */\n      pop\n        /* \"#utility.yul\":10149:10151   */\n      0x20\n        /* \"#utility.yul\":10138:10147   */\n      dup4\n        /* \"#utility.yul\":10134:10152   */\n      add\n        /* \"#utility.yul\":10121:10153   */\n      calldataload\n        /* \"#utility.yul\":10180:10198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10172:10178   */\n      dup2\n        /* \"#utility.yul\":10169:10199   */\n      gt\n        /* \"#utility.yul\":10166:10283   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":10202:10281   */\n      tag_546\n      tag_387\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10166:10283   */\n    tag_545:\n        /* \"#utility.yul\":10307:10385   */\n      tag_547\n        /* \"#utility.yul\":10377:10384   */\n      dup6\n        /* \"#utility.yul\":10368:10374   */\n      dup3\n        /* \"#utility.yul\":10357:10366   */\n      dup7\n        /* \"#utility.yul\":10353:10375   */\n      add\n        /* \"#utility.yul\":10307:10385   */\n      tag_411\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":10297:10385   */\n      swap2\n      pop\n        /* \"#utility.yul\":10092:10395   */\n      pop\n        /* \"#utility.yul\":9508:10402   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10408:10882   */\n    tag_165:\n        /* \"#utility.yul\":10476:10482   */\n      0x00\n        /* \"#utility.yul\":10484:10490   */\n      0x00\n        /* \"#utility.yul\":10533:10535   */\n      0x40\n        /* \"#utility.yul\":10521:10530   */\n      dup4\n        /* \"#utility.yul\":10512:10519   */\n      dup6\n        /* \"#utility.yul\":10508:10531   */\n      sub\n        /* \"#utility.yul\":10504:10536   */\n      slt\n        /* \"#utility.yul\":10501:10620   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":10539:10618   */\n      tag_550\n      tag_386\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10501:10620   */\n    tag_549:\n        /* \"#utility.yul\":10659:10660   */\n      0x00\n        /* \"#utility.yul\":10684:10737   */\n      tag_551\n        /* \"#utility.yul\":10729:10736   */\n      dup6\n        /* \"#utility.yul\":10720:10726   */\n      dup3\n        /* \"#utility.yul\":10709:10718   */\n      dup7\n        /* \"#utility.yul\":10705:10727   */\n      add\n        /* \"#utility.yul\":10684:10737   */\n      tag_391\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":10674:10737   */\n      swap3\n      pop\n        /* \"#utility.yul\":10630:10747   */\n      pop\n        /* \"#utility.yul\":10786:10788   */\n      0x20\n        /* \"#utility.yul\":10812:10865   */\n      tag_552\n        /* \"#utility.yul\":10857:10864   */\n      dup6\n        /* \"#utility.yul\":10848:10854   */\n      dup3\n        /* \"#utility.yul\":10837:10846   */\n      dup7\n        /* \"#utility.yul\":10833:10855   */\n      add\n        /* \"#utility.yul\":10812:10865   */\n      tag_391\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10802:10865   */\n      swap2\n      pop\n        /* \"#utility.yul\":10757:10875   */\n      pop\n        /* \"#utility.yul\":10408:10882   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10888:11068   */\n    tag_412:\n        /* \"#utility.yul\":10936:11013   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10934   */\n      0x00\n        /* \"#utility.yul\":10926:11014   */\n      mstore\n        /* \"#utility.yul\":11033:11037   */\n      0x22\n        /* \"#utility.yul\":11030:11031   */\n      0x04\n        /* \"#utility.yul\":11023:11038   */\n      mstore\n        /* \"#utility.yul\":11057:11061   */\n      0x24\n        /* \"#utility.yul\":11054:11055   */\n      0x00\n        /* \"#utility.yul\":11047:11062   */\n      revert\n        /* \"#utility.yul\":11074:11394   */\n    tag_178:\n        /* \"#utility.yul\":11118:11124   */\n      0x00\n        /* \"#utility.yul\":11155:11156   */\n      0x02\n        /* \"#utility.yul\":11149:11153   */\n      dup3\n        /* \"#utility.yul\":11145:11157   */\n      div\n        /* \"#utility.yul\":11135:11157   */\n      swap1\n      pop\n        /* \"#utility.yul\":11202:11203   */\n      0x01\n        /* \"#utility.yul\":11196:11200   */\n      dup3\n        /* \"#utility.yul\":11192:11204   */\n      and\n        /* \"#utility.yul\":11223:11241   */\n      dup1\n        /* \"#utility.yul\":11213:11294   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":11279:11283   */\n      0x7f\n        /* \"#utility.yul\":11271:11277   */\n      dup3\n        /* \"#utility.yul\":11267:11284   */\n      and\n        /* \"#utility.yul\":11257:11284   */\n      swap2\n      pop\n        /* \"#utility.yul\":11213:11294   */\n    tag_555:\n        /* \"#utility.yul\":11341:11343   */\n      0x20\n        /* \"#utility.yul\":11333:11339   */\n      dup3\n        /* \"#utility.yul\":11330:11344   */\n      lt\n        /* \"#utility.yul\":11310:11328   */\n      dup2\n        /* \"#utility.yul\":11307:11345   */\n      sub\n        /* \"#utility.yul\":11304:11388   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":11360:11378   */\n      tag_557\n      tag_412\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11304:11388   */\n    tag_556:\n        /* \"#utility.yul\":11125:11394   */\n      pop\n        /* \"#utility.yul\":11074:11394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11400:11575   */\n    tag_413:\n        /* \"#utility.yul\":11540:11567   */\n      0x4e6f204554482073656e7420666f72206469766964656e647300000000000000\n        /* \"#utility.yul\":11536:11537   */\n      0x00\n        /* \"#utility.yul\":11528:11534   */\n      dup3\n        /* \"#utility.yul\":11524:11538   */\n      add\n        /* \"#utility.yul\":11517:11568   */\n      mstore\n        /* \"#utility.yul\":11400:11575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:11947   */\n    tag_414:\n        /* \"#utility.yul\":11723:11726   */\n      0x00\n        /* \"#utility.yul\":11744:11811   */\n      tag_560\n        /* \"#utility.yul\":11808:11810   */\n      0x19\n        /* \"#utility.yul\":11803:11806   */\n      dup4\n        /* \"#utility.yul\":11744:11811   */\n      tag_381\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":11737:11811   */\n      swap2\n      pop\n        /* \"#utility.yul\":11820:11913   */\n      tag_561\n        /* \"#utility.yul\":11909:11912   */\n      dup3\n        /* \"#utility.yul\":11820:11913   */\n      tag_413\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11938:11940   */\n      0x20\n        /* \"#utility.yul\":11933:11936   */\n      dup3\n        /* \"#utility.yul\":11929:11941   */\n      add\n        /* \"#utility.yul\":11922:11941   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:11947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11953:12372   */\n    tag_196:\n        /* \"#utility.yul\":12119:12123   */\n      0x00\n        /* \"#utility.yul\":12157:12159   */\n      0x20\n        /* \"#utility.yul\":12146:12155   */\n      dup3\n        /* \"#utility.yul\":12142:12160   */\n      add\n        /* \"#utility.yul\":12134:12160   */\n      swap1\n      pop\n        /* \"#utility.yul\":12206:12215   */\n      dup2\n        /* \"#utility.yul\":12200:12204   */\n      dup2\n        /* \"#utility.yul\":12196:12216   */\n      sub\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12181:12190   */\n      dup4\n        /* \"#utility.yul\":12177:12194   */\n      add\n        /* \"#utility.yul\":12170:12217   */\n      mstore\n        /* \"#utility.yul\":12234:12365   */\n      tag_563\n        /* \"#utility.yul\":12360:12364   */\n      dup2\n        /* \"#utility.yul\":12234:12365   */\n      tag_414\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":12226:12365   */\n      swap1\n      pop\n        /* \"#utility.yul\":11953:12372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12378:12521   */\n    tag_415:\n        /* \"#utility.yul\":12435:12440   */\n      0x00\n        /* \"#utility.yul\":12466:12472   */\n      dup2\n        /* \"#utility.yul\":12460:12473   */\n      mload\n        /* \"#utility.yul\":12451:12473   */\n      swap1\n      pop\n        /* \"#utility.yul\":12482:12515   */\n      tag_565\n        /* \"#utility.yul\":12509:12514   */\n      dup2\n        /* \"#utility.yul\":12482:12515   */\n      tag_393\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":12378:12521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12527:12878   */\n    tag_200:\n        /* \"#utility.yul\":12597:12603   */\n      0x00\n        /* \"#utility.yul\":12646:12648   */\n      0x20\n        /* \"#utility.yul\":12634:12643   */\n      dup3\n        /* \"#utility.yul\":12625:12632   */\n      dup5\n        /* \"#utility.yul\":12621:12644   */\n      sub\n        /* \"#utility.yul\":12617:12649   */\n      slt\n        /* \"#utility.yul\":12614:12733   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":12652:12731   */\n      tag_568\n      tag_386\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":12614:12733   */\n    tag_567:\n        /* \"#utility.yul\":12772:12773   */\n      0x00\n        /* \"#utility.yul\":12797:12861   */\n      tag_569\n        /* \"#utility.yul\":12853:12860   */\n      dup5\n        /* \"#utility.yul\":12844:12850   */\n      dup3\n        /* \"#utility.yul\":12833:12842   */\n      dup6\n        /* \"#utility.yul\":12829:12851   */\n      add\n        /* \"#utility.yul\":12797:12861   */\n      tag_415\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":12787:12861   */\n      swap2\n      pop\n        /* \"#utility.yul\":12743:12871   */\n      pop\n        /* \"#utility.yul\":12527:12878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12884:13050   */\n    tag_416:\n        /* \"#utility.yul\":13024:13042   */\n      0x4e6f20746f6b656e732069737375656400000000000000000000000000000000\n        /* \"#utility.yul\":13020:13021   */\n      0x00\n        /* \"#utility.yul\":13012:13018   */\n      dup3\n        /* \"#utility.yul\":13008:13022   */\n      add\n        /* \"#utility.yul\":13001:13043   */\n      mstore\n        /* \"#utility.yul\":12884:13050   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13056:13422   */\n    tag_417:\n        /* \"#utility.yul\":13198:13201   */\n      0x00\n        /* \"#utility.yul\":13219:13286   */\n      tag_572\n        /* \"#utility.yul\":13283:13285   */\n      0x10\n        /* \"#utility.yul\":13278:13281   */\n      dup4\n        /* \"#utility.yul\":13219:13286   */\n      tag_381\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13212:13286   */\n      swap2\n      pop\n        /* \"#utility.yul\":13295:13388   */\n      tag_573\n        /* \"#utility.yul\":13384:13387   */\n      dup3\n        /* \"#utility.yul\":13295:13388   */\n      tag_416\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":13413:13415   */\n      0x20\n        /* \"#utility.yul\":13408:13411   */\n      dup3\n        /* \"#utility.yul\":13404:13416   */\n      add\n        /* \"#utility.yul\":13397:13416   */\n      swap1\n      pop\n        /* \"#utility.yul\":13056:13422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13428:13847   */\n    tag_203:\n        /* \"#utility.yul\":13594:13598   */\n      0x00\n        /* \"#utility.yul\":13632:13634   */\n      0x20\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13617:13635   */\n      add\n        /* \"#utility.yul\":13609:13635   */\n      swap1\n      pop\n        /* \"#utility.yul\":13681:13690   */\n      dup2\n        /* \"#utility.yul\":13675:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13691   */\n      sub\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13656:13665   */\n      dup4\n        /* \"#utility.yul\":13652:13669   */\n      add\n        /* \"#utility.yul\":13645:13692   */\n      mstore\n        /* \"#utility.yul\":13709:13840   */\n      tag_575\n        /* \"#utility.yul\":13835:13839   */\n      dup2\n        /* \"#utility.yul\":13709:13840   */\n      tag_417\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":13701:13840   */\n      swap1\n      pop\n        /* \"#utility.yul\":13428:13847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13853:14033   */\n    tag_418:\n        /* \"#utility.yul\":13901:13978   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13898:13899   */\n      0x00\n        /* \"#utility.yul\":13891:13979   */\n      mstore\n        /* \"#utility.yul\":13998:14002   */\n      0x11\n        /* \"#utility.yul\":13995:13996   */\n      0x04\n        /* \"#utility.yul\":13988:14003   */\n      mstore\n        /* \"#utility.yul\":14022:14026   */\n      0x24\n        /* \"#utility.yul\":14019:14020   */\n      0x00\n        /* \"#utility.yul\":14012:14027   */\n      revert\n        /* \"#utility.yul\":14039:14230   */\n    tag_205:\n        /* \"#utility.yul\":14079:14082   */\n      0x00\n        /* \"#utility.yul\":14098:14118   */\n      tag_578\n        /* \"#utility.yul\":14116:14117   */\n      dup3\n        /* \"#utility.yul\":14098:14118   */\n      tag_392\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14093:14118   */\n      swap2\n      pop\n        /* \"#utility.yul\":14132:14152   */\n      tag_579\n        /* \"#utility.yul\":14150:14151   */\n      dup4\n        /* \"#utility.yul\":14132:14152   */\n      tag_392\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14127:14152   */\n      swap3\n      pop\n        /* \"#utility.yul\":14175:14176   */\n      dup3\n        /* \"#utility.yul\":14172:14173   */\n      dup3\n        /* \"#utility.yul\":14168:14177   */\n      add\n        /* \"#utility.yul\":14161:14177   */\n      swap1\n      pop\n        /* \"#utility.yul\":14196:14199   */\n      dup1\n        /* \"#utility.yul\":14193:14194   */\n      dup3\n        /* \"#utility.yul\":14190:14200   */\n      gt\n        /* \"#utility.yul\":14187:14223   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":14203:14221   */\n      tag_581\n      tag_418\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":14187:14223   */\n    tag_580:\n        /* \"#utility.yul\":14039:14230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14236:14416   */\n    tag_214:\n        /* \"#utility.yul\":14284:14361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14281:14282   */\n      0x00\n        /* \"#utility.yul\":14274:14362   */\n      mstore\n        /* \"#utility.yul\":14381:14385   */\n      0x32\n        /* \"#utility.yul\":14378:14379   */\n      0x04\n        /* \"#utility.yul\":14371:14386   */\n      mstore\n        /* \"#utility.yul\":14405:14409   */\n      0x24\n        /* \"#utility.yul\":14402:14403   */\n      0x00\n        /* \"#utility.yul\":14395:14410   */\n      revert\n        /* \"#utility.yul\":14422:14832   */\n    tag_222:\n        /* \"#utility.yul\":14462:14469   */\n      0x00\n        /* \"#utility.yul\":14485:14505   */\n      tag_584\n        /* \"#utility.yul\":14503:14504   */\n      dup3\n        /* \"#utility.yul\":14485:14505   */\n      tag_392\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":14480:14505   */\n      swap2\n      pop\n        /* \"#utility.yul\":14519:14539   */\n      tag_585\n        /* \"#utility.yul\":14537:14538   */\n      dup4\n        /* \"#utility.yul\":14519:14539   */\n      tag_392\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":14514:14539   */\n      swap3\n      pop\n        /* \"#utility.yul\":14574:14575   */\n      dup3\n        /* \"#utility.yul\":14571:14572   */\n      dup3\n        /* \"#utility.yul\":14567:14576   */\n      mul\n        /* \"#utility.yul\":14596:14626   */\n      tag_586\n        /* \"#utility.yul\":14614:14625   */\n      dup2\n        /* \"#utility.yul\":14596:14626   */\n      tag_392\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14585:14626   */\n      swap2\n      pop\n        /* \"#utility.yul\":14775:14776   */\n      dup3\n        /* \"#utility.yul\":14766:14773   */\n      dup3\n        /* \"#utility.yul\":14762:14777   */\n      div\n        /* \"#utility.yul\":14759:14760   */\n      dup5\n        /* \"#utility.yul\":14756:14778   */\n      eq\n        /* \"#utility.yul\":14736:14737   */\n      dup4\n        /* \"#utility.yul\":14729:14738   */\n      iszero\n        /* \"#utility.yul\":14709:14792   */\n      or\n        /* \"#utility.yul\":14686:14825   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":14805:14823   */\n      tag_588\n      tag_418\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14686:14825   */\n    tag_587:\n        /* \"#utility.yul\":14470:14832   */\n      pop\n        /* \"#utility.yul\":14422:14832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:15018   */\n    tag_419:\n        /* \"#utility.yul\":14886:14963   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14876:14964   */\n      mstore\n        /* \"#utility.yul\":14983:14987   */\n      0x12\n        /* \"#utility.yul\":14980:14981   */\n      0x04\n        /* \"#utility.yul\":14973:14988   */\n      mstore\n        /* \"#utility.yul\":15007:15011   */\n      0x24\n        /* \"#utility.yul\":15004:15005   */\n      0x00\n        /* \"#utility.yul\":14997:15012   */\n      revert\n        /* \"#utility.yul\":15024:15209   */\n    tag_224:\n        /* \"#utility.yul\":15064:15065   */\n      0x00\n        /* \"#utility.yul\":15081:15101   */\n      tag_591\n        /* \"#utility.yul\":15099:15100   */\n      dup3\n        /* \"#utility.yul\":15081:15101   */\n      tag_392\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":15076:15101   */\n      swap2\n      pop\n        /* \"#utility.yul\":15115:15135   */\n      tag_592\n        /* \"#utility.yul\":15133:15134   */\n      dup4\n        /* \"#utility.yul\":15115:15135   */\n      tag_392\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15110:15135   */\n      swap3\n      pop\n        /* \"#utility.yul\":15154:15155   */\n      dup3\n        /* \"#utility.yul\":15144:15179   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":15159:15177   */\n      tag_594\n      tag_419\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15144:15179   */\n    tag_593:\n        /* \"#utility.yul\":15201:15202   */\n      dup3\n        /* \"#utility.yul\":15198:15199   */\n      dup3\n        /* \"#utility.yul\":15194:15203   */\n      div\n        /* \"#utility.yul\":15189:15203   */\n      swap1\n      pop\n        /* \"#utility.yul\":15024:15209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15215:15547   */\n    tag_227:\n        /* \"#utility.yul\":15336:15340   */\n      0x00\n        /* \"#utility.yul\":15374:15376   */\n      0x40\n        /* \"#utility.yul\":15363:15372   */\n      dup3\n        /* \"#utility.yul\":15359:15377   */\n      add\n        /* \"#utility.yul\":15351:15377   */\n      swap1\n      pop\n        /* \"#utility.yul\":15387:15458   */\n      tag_596\n        /* \"#utility.yul\":15455:15456   */\n      0x00\n        /* \"#utility.yul\":15444:15453   */\n      dup4\n        /* \"#utility.yul\":15440:15457   */\n      add\n        /* \"#utility.yul\":15431:15437   */\n      dup6\n        /* \"#utility.yul\":15387:15458   */\n      tag_397\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15468:15540   */\n      tag_597\n        /* \"#utility.yul\":15536:15538   */\n      0x20\n        /* \"#utility.yul\":15525:15534   */\n      dup4\n        /* \"#utility.yul\":15521:15539   */\n      add\n        /* \"#utility.yul\":15512:15518   */\n      dup5\n        /* \"#utility.yul\":15468:15540   */\n      tag_397\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":15215:15547   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15553:15725   */\n    tag_420:\n        /* \"#utility.yul\":15693:15717   */\n      0x417272617973206c656e677468206d69736d6174636800000000000000000000\n        /* \"#utility.yul\":15689:15690   */\n      0x00\n        /* \"#utility.yul\":15681:15687   */\n      dup3\n        /* \"#utility.yul\":15677:15691   */\n      add\n        /* \"#utility.yul\":15670:15718   */\n      mstore\n        /* \"#utility.yul\":15553:15725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15731:16097   */\n    tag_421:\n        /* \"#utility.yul\":15873:15876   */\n      0x00\n        /* \"#utility.yul\":15894:15961   */\n      tag_600\n        /* \"#utility.yul\":15958:15960   */\n      0x16\n        /* \"#utility.yul\":15953:15956   */\n      dup4\n        /* \"#utility.yul\":15894:15961   */\n      tag_381\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15887:15961   */\n      swap2\n      pop\n        /* \"#utility.yul\":15970:16063   */\n      tag_601\n        /* \"#utility.yul\":16059:16062   */\n      dup3\n        /* \"#utility.yul\":15970:16063   */\n      tag_420\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16088:16090   */\n      0x20\n        /* \"#utility.yul\":16083:16086   */\n      dup3\n        /* \"#utility.yul\":16079:16091   */\n      add\n        /* \"#utility.yul\":16072:16091   */\n      swap1\n      pop\n        /* \"#utility.yul\":15731:16097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16103:16522   */\n    tag_247:\n        /* \"#utility.yul\":16269:16273   */\n      0x00\n        /* \"#utility.yul\":16307:16309   */\n      0x20\n        /* \"#utility.yul\":16296:16305   */\n      dup3\n        /* \"#utility.yul\":16292:16310   */\n      add\n        /* \"#utility.yul\":16284:16310   */\n      swap1\n      pop\n        /* \"#utility.yul\":16356:16365   */\n      dup2\n        /* \"#utility.yul\":16350:16354   */\n      dup2\n        /* \"#utility.yul\":16346:16366   */\n      sub\n        /* \"#utility.yul\":16342:16343   */\n      0x00\n        /* \"#utility.yul\":16331:16340   */\n      dup4\n        /* \"#utility.yul\":16327:16344   */\n      add\n        /* \"#utility.yul\":16320:16367   */\n      mstore\n        /* \"#utility.yul\":16384:16515   */\n      tag_603\n        /* \"#utility.yul\":16510:16514   */\n      dup2\n        /* \"#utility.yul\":16384:16515   */\n      tag_421\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16376:16515   */\n      swap1\n      pop\n        /* \"#utility.yul\":16103:16522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16528:16693   */\n    tag_422:\n        /* \"#utility.yul\":16668:16685   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":16664:16665   */\n      0x00\n        /* \"#utility.yul\":16656:16662   */\n      dup3\n        /* \"#utility.yul\":16652:16666   */\n      add\n        /* \"#utility.yul\":16645:16686   */\n      mstore\n        /* \"#utility.yul\":16528:16693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16699:17065   */\n    tag_423:\n        /* \"#utility.yul\":16841:16844   */\n      0x00\n        /* \"#utility.yul\":16862:16929   */\n      tag_606\n        /* \"#utility.yul\":16926:16928   */\n      0x0f\n        /* \"#utility.yul\":16921:16924   */\n      dup4\n        /* \"#utility.yul\":16862:16929   */\n      tag_381\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":16855:16929   */\n      swap2\n      pop\n        /* \"#utility.yul\":16938:17031   */\n      tag_607\n        /* \"#utility.yul\":17027:17030   */\n      dup3\n        /* \"#utility.yul\":16938:17031   */\n      tag_422\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17056:17058   */\n      0x20\n        /* \"#utility.yul\":17051:17054   */\n      dup3\n        /* \"#utility.yul\":17047:17059   */\n      add\n        /* \"#utility.yul\":17040:17059   */\n      swap1\n      pop\n        /* \"#utility.yul\":16699:17065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17071:17490   */\n    tag_255:\n        /* \"#utility.yul\":17237:17241   */\n      0x00\n        /* \"#utility.yul\":17275:17277   */\n      0x20\n        /* \"#utility.yul\":17264:17273   */\n      dup3\n        /* \"#utility.yul\":17260:17278   */\n      add\n        /* \"#utility.yul\":17252:17278   */\n      swap1\n      pop\n        /* \"#utility.yul\":17324:17333   */\n      dup2\n        /* \"#utility.yul\":17318:17322   */\n      dup2\n        /* \"#utility.yul\":17314:17334   */\n      sub\n        /* \"#utility.yul\":17310:17311   */\n      0x00\n        /* \"#utility.yul\":17299:17308   */\n      dup4\n        /* \"#utility.yul\":17295:17312   */\n      add\n        /* \"#utility.yul\":17288:17335   */\n      mstore\n        /* \"#utility.yul\":17352:17483   */\n      tag_609\n        /* \"#utility.yul\":17478:17482   */\n      dup2\n        /* \"#utility.yul\":17352:17483   */\n      tag_423\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17344:17483   */\n      swap1\n      pop\n        /* \"#utility.yul\":17071:17490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17496:17667   */\n    tag_424:\n        /* \"#utility.yul\":17636:17659   */\n      0x4e6f206469766964656e647320746f20636c61696d0000000000000000000000\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17624:17630   */\n      dup3\n        /* \"#utility.yul\":17620:17634   */\n      add\n        /* \"#utility.yul\":17613:17660   */\n      mstore\n        /* \"#utility.yul\":17496:17667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17673:18039   */\n    tag_425:\n        /* \"#utility.yul\":17815:17818   */\n      0x00\n        /* \"#utility.yul\":17836:17903   */\n      tag_612\n        /* \"#utility.yul\":17900:17902   */\n      0x15\n        /* \"#utility.yul\":17895:17898   */\n      dup4\n        /* \"#utility.yul\":17836:17903   */\n      tag_381\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17829:17903   */\n      swap2\n      pop\n        /* \"#utility.yul\":17912:18005   */\n      tag_613\n        /* \"#utility.yul\":18001:18004   */\n      dup3\n        /* \"#utility.yul\":17912:18005   */\n      tag_424\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18030:18032   */\n      0x20\n        /* \"#utility.yul\":18025:18028   */\n      dup3\n        /* \"#utility.yul\":18021:18033   */\n      add\n        /* \"#utility.yul\":18014:18033   */\n      swap1\n      pop\n        /* \"#utility.yul\":17673:18039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18045:18464   */\n    tag_296:\n        /* \"#utility.yul\":18211:18215   */\n      0x00\n        /* \"#utility.yul\":18249:18251   */\n      0x20\n        /* \"#utility.yul\":18238:18247   */\n      dup3\n        /* \"#utility.yul\":18234:18252   */\n      add\n        /* \"#utility.yul\":18226:18252   */\n      swap1\n      pop\n        /* \"#utility.yul\":18298:18307   */\n      dup2\n        /* \"#utility.yul\":18292:18296   */\n      dup2\n        /* \"#utility.yul\":18288:18308   */\n      sub\n        /* \"#utility.yul\":18284:18285   */\n      0x00\n        /* \"#utility.yul\":18273:18282   */\n      dup4\n        /* \"#utility.yul\":18269:18286   */\n      add\n        /* \"#utility.yul\":18262:18309   */\n      mstore\n        /* \"#utility.yul\":18326:18457   */\n      tag_615\n        /* \"#utility.yul\":18452:18456   */\n      dup2\n        /* \"#utility.yul\":18326:18457   */\n      tag_425\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18318:18457   */\n      swap1\n      pop\n        /* \"#utility.yul\":18045:18464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18470:18617   */\n    tag_426:\n        /* \"#utility.yul\":18571:18582   */\n      0x00\n        /* \"#utility.yul\":18608:18611   */\n      dup2\n        /* \"#utility.yul\":18593:18611   */\n      swap1\n      pop\n        /* \"#utility.yul\":18470:18617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18623:18737   */\n    tag_427:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18743:19141   */\n    tag_428:\n        /* \"#utility.yul\":18902:18905   */\n      0x00\n        /* \"#utility.yul\":18923:19006   */\n      tag_619\n        /* \"#utility.yul\":19004:19005   */\n      0x00\n        /* \"#utility.yul\":18999:19002   */\n      dup4\n        /* \"#utility.yul\":18923:19006   */\n      tag_426\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18916:19006   */\n      swap2\n      pop\n        /* \"#utility.yul\":19015:19108   */\n      tag_620\n        /* \"#utility.yul\":19104:19107   */\n      dup3\n        /* \"#utility.yul\":19015:19108   */\n      tag_427\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":19133:19134   */\n      0x00\n        /* \"#utility.yul\":19128:19131   */\n      dup3\n        /* \"#utility.yul\":19124:19135   */\n      add\n        /* \"#utility.yul\":19117:19135   */\n      swap1\n      pop\n        /* \"#utility.yul\":18743:19141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19147:19526   */\n    tag_299:\n        /* \"#utility.yul\":19331:19334   */\n      0x00\n        /* \"#utility.yul\":19353:19500   */\n      tag_622\n        /* \"#utility.yul\":19496:19499   */\n      dup3\n        /* \"#utility.yul\":19353:19500   */\n      tag_428\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":19346:19500   */\n      swap2\n      pop\n        /* \"#utility.yul\":19517:19520   */\n      dup2\n        /* \"#utility.yul\":19510:19520   */\n      swap1\n      pop\n        /* \"#utility.yul\":19147:19526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19532:19700   */\n    tag_429:\n        /* \"#utility.yul\":19672:19692   */\n      0x4661696c656420746f2073656e64204554480000000000000000000000000000\n        /* \"#utility.yul\":19668:19669   */\n      0x00\n        /* \"#utility.yul\":19660:19666   */\n      dup3\n        /* \"#utility.yul\":19656:19670   */\n      add\n        /* \"#utility.yul\":19649:19693   */\n      mstore\n        /* \"#utility.yul\":19532:19700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19706:20072   */\n    tag_430:\n        /* \"#utility.yul\":19848:19851   */\n      0x00\n        /* \"#utility.yul\":19869:19936   */\n      tag_625\n        /* \"#utility.yul\":19933:19935   */\n      0x12\n        /* \"#utility.yul\":19928:19931   */\n      dup4\n        /* \"#utility.yul\":19869:19936   */\n      tag_381\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":19862:19936   */\n      swap2\n      pop\n        /* \"#utility.yul\":19945:20038   */\n      tag_626\n        /* \"#utility.yul\":20034:20037   */\n      dup3\n        /* \"#utility.yul\":19945:20038   */\n      tag_429\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20063:20065   */\n      0x20\n        /* \"#utility.yul\":20058:20061   */\n      dup3\n        /* \"#utility.yul\":20054:20066   */\n      add\n        /* \"#utility.yul\":20047:20066   */\n      swap1\n      pop\n        /* \"#utility.yul\":19706:20072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20078:20497   */\n    tag_305:\n        /* \"#utility.yul\":20244:20248   */\n      0x00\n        /* \"#utility.yul\":20282:20284   */\n      0x20\n        /* \"#utility.yul\":20271:20280   */\n      dup3\n        /* \"#utility.yul\":20267:20285   */\n      add\n        /* \"#utility.yul\":20259:20285   */\n      swap1\n      pop\n        /* \"#utility.yul\":20331:20340   */\n      dup2\n        /* \"#utility.yul\":20325:20329   */\n      dup2\n        /* \"#utility.yul\":20321:20341   */\n      sub\n        /* \"#utility.yul\":20317:20318   */\n      0x00\n        /* \"#utility.yul\":20306:20315   */\n      dup4\n        /* \"#utility.yul\":20302:20319   */\n      add\n        /* \"#utility.yul\":20295:20342   */\n      mstore\n        /* \"#utility.yul\":20359:20490   */\n      tag_628\n        /* \"#utility.yul\":20485:20489   */\n      dup2\n        /* \"#utility.yul\":20359:20490   */\n      tag_430\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":20351:20490   */\n      swap1\n      pop\n        /* \"#utility.yul\":20078:20497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20503:20945   */\n    tag_335:\n        /* \"#utility.yul\":20652:20656   */\n      0x00\n        /* \"#utility.yul\":20690:20692   */\n      0x60\n        /* \"#utility.yul\":20679:20688   */\n      dup3\n        /* \"#utility.yul\":20675:20693   */\n      add\n        /* \"#utility.yul\":20667:20693   */\n      swap1\n      pop\n        /* \"#utility.yul\":20703:20774   */\n      tag_630\n        /* \"#utility.yul\":20771:20772   */\n      0x00\n        /* \"#utility.yul\":20760:20769   */\n      dup4\n        /* \"#utility.yul\":20756:20773   */\n      add\n        /* \"#utility.yul\":20747:20753   */\n      dup7\n        /* \"#utility.yul\":20703:20774   */\n      tag_398\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20784:20856   */\n      tag_631\n        /* \"#utility.yul\":20852:20854   */\n      0x20\n        /* \"#utility.yul\":20841:20850   */\n      dup4\n        /* \"#utility.yul\":20837:20855   */\n      add\n        /* \"#utility.yul\":20828:20834   */\n      dup6\n        /* \"#utility.yul\":20784:20856   */\n      tag_397\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20866:20938   */\n      tag_632\n        /* \"#utility.yul\":20934:20936   */\n      0x40\n        /* \"#utility.yul\":20923:20932   */\n      dup4\n        /* \"#utility.yul\":20919:20937   */\n      add\n        /* \"#utility.yul\":20910:20916   */\n      dup5\n        /* \"#utility.yul\":20866:20938   */\n      tag_397\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20503:20945   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ef73d2a01161a355df3368b44f3400223085337db85082a6ac64f70f0910c54c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1545": {
									"entryPoint": null,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_604": {
									"entryPoint": null,
									"id": 604,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_414": {
									"entryPoint": 292,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:10",
										"nodeType": "YulBlock",
										"src": "0:5817:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nativeSrc": "5279:81:10",
													"nodeType": "YulBlock",
													"src": "5279:81:10",
													"statements": [
														{
															"nativeSrc": "5289:65:10",
															"nodeType": "YulAssignment",
															"src": "5289:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:10",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nativeSrc": "5300:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:10",
														"nodeType": "YulTypedName",
														"src": "5261:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:10",
														"nodeType": "YulTypedName",
														"src": "5271:7:10",
														"type": ""
													}
												],
												"src": "5234:126:10"
											},
											{
												"body": {
													"nativeSrc": "5411:51:10",
													"nodeType": "YulBlock",
													"src": "5411:51:10",
													"statements": [
														{
															"nativeSrc": "5421:35:10",
															"nodeType": "YulAssignment",
															"src": "5421:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:10"
																},
																"nativeSrc": "5432:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:10",
														"nodeType": "YulTypedName",
														"src": "5393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:10",
														"nodeType": "YulTypedName",
														"src": "5403:7:10",
														"type": ""
													}
												],
												"src": "5366:96:10"
											},
											{
												"body": {
													"nativeSrc": "5533:53:10",
													"nodeType": "YulBlock",
													"src": "5533:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:10"
																		},
																		"nativeSrc": "5555:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:10"
																},
																"nativeSrc": "5543:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:10"
															},
															"nativeSrc": "5543:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:10",
														"nodeType": "YulTypedName",
														"src": "5521:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:10",
														"nodeType": "YulTypedName",
														"src": "5528:3:10",
														"type": ""
													}
												],
												"src": "5468:118:10"
											},
											{
												"body": {
													"nativeSrc": "5690:124:10",
													"nodeType": "YulBlock",
													"src": "5690:124:10",
													"statements": [
														{
															"nativeSrc": "5700:26:10",
															"nodeType": "YulAssignment",
															"src": "5700:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:10"
																},
																"nativeSrc": "5708:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:10"
																		},
																		"nativeSrc": "5789:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:10"
																},
																"nativeSrc": "5736:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:10"
															},
															"nativeSrc": "5736:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:10",
														"nodeType": "YulTypedName",
														"src": "5662:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:10",
														"nodeType": "YulTypedName",
														"src": "5674:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:10",
														"nodeType": "YulTypedName",
														"src": "5685:4:10",
														"type": ""
													}
												],
												"src": "5592:222:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250816003908161008c9190610424565b50806004908161009c9190610424565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610532565b60405180910390fd5b61011e8161012460201b60201c565b5061054b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026257607f821691505b6020821081036102755761027461021e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261029c565b6102e1868361029c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032561032061031b846102f9565b610302565b6102f9565b9050919050565b5f819050919050565b61033e8361030b565b61035261034a8261032c565b8484546102a8565b825550505050565b5f5f905090565b61036961035a565b610374818484610335565b505050565b5b818110156103975761038c5f82610361565b60018101905061037a565b5050565b601f8211156103dc576103ad8161027b565b6103b68461028d565b810160208510156103c5578190505b6103d96103d18561028d565b830182610379565b50505b505050565b5f82821c905092915050565b5f6103fc5f19846008026103e1565b1980831691505092915050565b5f61041483836103ed565b9150826002028217905092915050565b61042d826101e7565b67ffffffffffffffff811115610446576104456101f1565b5b610450825461024b565b61045b82828561039b565b5f60209050601f83116001811461048c575f841561047a578287015190505b6104848582610409565b8655506104eb565b601f19841661049a8661027b565b5f5b828110156104c15784890151825560018201915060208501945060208101905061049c565b868310156104de57848901516104da601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051c826104f3565b9050919050565b61052c81610512565b82525050565b5f6020820190506105455f830184610523565b92915050565b61260c806105585f395ff3fe6080604052600436106101cc575f3560e01c80637dfb3383116100f65780639dc29fac11610094578063d9e63bb111610063578063d9e63bb114610662578063dd62ed3e1461068a578063f2fde38b146106c6578063fe4b84df146106ee576101cc565b80639dc29fac146105c0578063a9059cbb146105e8578063ad9e761114610624578063c7e772ed1461063a576101cc565b80638da5cb5b116100d05780638da5cb5b1461051a57806395d89b4114610544578063997664d71461056e578063998aa46514610598576101cc565b80637dfb33831461047a5780638284ce3e146104b65780638ad0aaef146104f2576101cc565b80632a11ced01161016e5780636264786c1161013d5780636264786c146103c457806368306e43146103ec57806370a0823114610428578063715018a614610464576101cc565b80632a11ced01461030c5780632eb21b2214610348578063313ce5671461037257806340c10f191461039c576101cc565b80630d8e6e2c116101aa5780630d8e6e2c1461026057806318160ddd1461028a578063213a852f146102b457806323b872dd146102d0576101cc565b806306fdde03146101d0578063095ea7b3146101fa5780630c55699c14610236575b5f5ffd5b3480156101db575f5ffd5b506101e4610716565b6040516101f19190611bf5565b60405180910390f35b348015610205575f5ffd5b50610220600480360381019061021b9190611cb3565b6107a6565b60405161022d9190611d0b565b60405180910390f35b348015610241575f5ffd5b5061024a6107c8565b6040516102579190611d33565b60405180910390f35b34801561026b575f5ffd5b506102746107ce565b6040516102819190611d33565b60405180910390f35b348015610295575f5ffd5b5061029e6107d7565b6040516102ab9190611d33565b60405180910390f35b6102ce60048036038101906102c99190611d4c565b6107e0565b005b3480156102db575f5ffd5b506102f660048036038101906102f19190611d77565b610af2565b6040516103039190611d0b565b60405180910390f35b348015610317575f5ffd5b50610332600480360381019061032d9190611dc7565b610b20565b60405161033f9190611e01565b60405180910390f35b348015610353575f5ffd5b5061035c610b5b565b6040516103699190611d33565b60405180910390f35b34801561037d575f5ffd5b50610386610b61565b6040516103939190611e35565b60405180910390f35b3480156103a7575f5ffd5b506103c260048036038101906103bd9190611cb3565b610b69565b005b3480156103cf575f5ffd5b506103ea60048036038101906103e5919061204e565b610b7f565b005b3480156103f7575f5ffd5b50610412600480360381019061040d9190611d4c565b610ce9565b60405161041f9190611d33565b60405180910390f35b348015610433575f5ffd5b5061044e60048036038101906104499190611d4c565b610cfe565b60405161045b9190611d33565b60405180910390f35b34801561046f575f5ffd5b50610478610d43565b005b348015610485575f5ffd5b506104a0600480360381019061049b9190611d4c565b610d56565b6040516104ad9190611d33565b60405180910390f35b3480156104c1575f5ffd5b506104dc60048036038101906104d79190611d4c565b610d6b565b6040516104e99190611d33565b60405180910390f35b3480156104fd575f5ffd5b5061051860048036038101906105139190611cb3565b610db1565b005b348015610525575f5ffd5b5061052e610ecd565b60405161053b9190611e01565b60405180910390f35b34801561054f575f5ffd5b50610558610ef5565b6040516105659190611bf5565b60405180910390f35b348015610579575f5ffd5b50610582610f85565b60405161058f9190611d33565b60405180910390f35b3480156105a3575f5ffd5b506105be60048036038101906105b99190611dc7565b610f8b565b005b3480156105cb575f5ffd5b506105e660048036038101906105e19190611cb3565b610f97565b005b3480156105f3575f5ffd5b5061060e60048036038101906106099190611cb3565b610fad565b60405161061b9190611d0b565b60405180910390f35b34801561062f575f5ffd5b50610638610fcf565b005b348015610645575f5ffd5b50610660600480360381019061065b9190611d4c565b610fe7565b005b34801561066d575f5ffd5b5061068860048036038101906106839190611dc7565b6111fa565b005b348015610695575f5ffd5b506106b060048036038101906106ab91906120c4565b611207565b6040516106bd9190611d33565b60405180910390f35b3480156106d1575f5ffd5b506106ec60048036038101906106e79190611d4c565b611289565b005b3480156106f9575f5ffd5b50610714600480360381019061070f9190611dc7565b61130d565b005b6060600380546107259061212f565b80601f01602080910402602001604051908101604052809291908181526020018280546107519061212f565b801561079c5780601f106107735761010080835404028352916020019161079c565b820191905f5260205f20905b81548152906001019060200180831161077f57829003601f168201915b5050505050905090565b5f5f6107b061131f565b90506107bd818585611326565b600191505092915050565b60065481565b5f600654905090565b5f600254905090565b6107e8611338565b5f341161082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906121a9565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610874573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089891906121db565b116108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90612250565b60405180910390fd5b3460095f8282546108e9919061229b565b9250508190555042600a819055505f8173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610941573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096591906121db565b90505f5f90505b600b80549050811015610ab4575f600b828154811061098e5761098d6122ce565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8473ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016109f29190611e01565b602060405180830381865afa158015610a0d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3191906121db565b90505f811115610aa557838134610a4891906122fb565b610a529190612369565b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a9d919061229b565b925050819055505b5050808060010191505061096c565b507f2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc56723523378713273442604051610ae6929190612399565b60405180910390a15050565b5f5f610afc61131f565b9050610b098582856113bf565b610b14858585611452565b60019150509392505050565b600b8181548110610b2f575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b5f6012905090565b610b71611338565b610b7b8282611542565b5050565b610b87611338565b8051825114610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc29061240a565b60405180910390fd5b5f5f90505b8251811015610ce4575f73ffffffffffffffffffffffffffffffffffffffff16838281518110610c0357610c026122ce565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890612472565b60405180910390fd5b818181518110610c7457610c736122ce565b5b602002602001015160075f858481518110610c9257610c916122ce565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508080600101915050610bd0565b505050565b6007602052805f5260405f205f915090505481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d4b611338565b610d545f6115c1565b565b6008602052805f5260405f205f915090505481565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610db9611338565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e90612472565b60405180910390fd5b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600b82908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f049061212f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f309061212f565b8015610f7b5780601f10610f5257610100808354040283529160200191610f7b565b820191905f5260205f20905b815481529060010190602001808311610f5e57829003601f168201915b5050505050905090565b60095481565b610f948161130d565b50565b610f9f611338565b610fa98282611684565b5050565b5f5f610fb761131f565b9050610fc4818585611452565b600191505092915050565b610fd7611338565b5f6009819055505f600a81905550565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811161106a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611061906124da565b60405180910390fd5b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110f8919061229b565b925050819055505f8273ffffffffffffffffffffffffffffffffffffffff168260405161112490612525565b5f6040518083038185875af1925050503d805f811461115e576040519150601f19603f3d011682016040523d82523d5f602084013e611163565b606091505b50509050806111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612583565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56836040516111ed9190611d33565b60405180910390a2505050565b6112043382611542565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611291611338565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611301575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112f89190611e01565b60405180910390fd5b61130a816115c1565b50565b611315611703565b8060068190555050565b5f33905090565b6113338383836001611743565b505050565b61134061131f565b73ffffffffffffffffffffffffffffffffffffffff1661135e610ecd565b73ffffffffffffffffffffffffffffffffffffffff16146113bd5761138161131f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113b49190611e01565b60405180910390fd5b565b5f6113ca8484611207565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561144c578181101561143d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611434939291906125a1565b60405180910390fd5b61144b84848484035f611743565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114c2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114b99190611e01565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611532575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115299190611e01565b60405180910390fd5b61153d838383611912565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115b2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115a99190611e01565b60405180910390fd5b6115bd5f8383611912565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116eb9190611e01565b60405180910390fd5b6116ff825f83611912565b5050565b61170b611b2b565b611741576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117b3575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117aa9190611e01565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611823575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161181a9190611e01565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561190c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119039190611d33565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611962578060025f828254611956919061229b565b92505081905550611a30565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156119eb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119e2939291906125a1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a77578060025f8282540392505081905550611ac1565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b1e9190611d33565b60405180910390a3505050565b5f611b34611b49565b5f0160089054906101000a900460ff16905090565b5f5f611b53611b5c565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611bc782611b85565b611bd18185611b8f565b9350611be1818560208601611b9f565b611bea81611bad565b840191505092915050565b5f6020820190508181035f830152611c0d8184611bbd565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c4f82611c26565b9050919050565b611c5f81611c45565b8114611c69575f5ffd5b50565b5f81359050611c7a81611c56565b92915050565b5f819050919050565b611c9281611c80565b8114611c9c575f5ffd5b50565b5f81359050611cad81611c89565b92915050565b5f5f60408385031215611cc957611cc8611c1e565b5b5f611cd685828601611c6c565b9250506020611ce785828601611c9f565b9150509250929050565b5f8115159050919050565b611d0581611cf1565b82525050565b5f602082019050611d1e5f830184611cfc565b92915050565b611d2d81611c80565b82525050565b5f602082019050611d465f830184611d24565b92915050565b5f60208284031215611d6157611d60611c1e565b5b5f611d6e84828501611c6c565b91505092915050565b5f5f5f60608486031215611d8e57611d8d611c1e565b5b5f611d9b86828701611c6c565b9350506020611dac86828701611c6c565b9250506040611dbd86828701611c9f565b9150509250925092565b5f60208284031215611ddc57611ddb611c1e565b5b5f611de984828501611c9f565b91505092915050565b611dfb81611c45565b82525050565b5f602082019050611e145f830184611df2565b92915050565b5f60ff82169050919050565b611e2f81611e1a565b82525050565b5f602082019050611e485f830184611e26565b92915050565b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e8882611bad565b810181811067ffffffffffffffff82111715611ea757611ea6611e52565b5b80604052505050565b5f611eb9611c15565b9050611ec58282611e7f565b919050565b5f67ffffffffffffffff821115611ee457611ee3611e52565b5b602082029050602081019050919050565b5f5ffd5b5f611f0b611f0684611eca565b611eb0565b90508083825260208201905060208402830185811115611f2e57611f2d611ef5565b5b835b81811015611f575780611f438882611c6c565b845260208401935050602081019050611f30565b5050509392505050565b5f82601f830112611f7557611f74611e4e565b5b8135611f85848260208601611ef9565b91505092915050565b5f67ffffffffffffffff821115611fa857611fa7611e52565b5b602082029050602081019050919050565b5f611fcb611fc684611f8e565b611eb0565b90508083825260208201905060208402830185811115611fee57611fed611ef5565b5b835b8181101561201757806120038882611c9f565b845260208401935050602081019050611ff0565b5050509392505050565b5f82601f83011261203557612034611e4e565b5b8135612045848260208601611fb9565b91505092915050565b5f5f6040838503121561206457612063611c1e565b5b5f83013567ffffffffffffffff81111561208157612080611c22565b5b61208d85828601611f61565b925050602083013567ffffffffffffffff8111156120ae576120ad611c22565b5b6120ba85828601612021565b9150509250929050565b5f5f604083850312156120da576120d9611c1e565b5b5f6120e785828601611c6c565b92505060206120f885828601611c6c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061214657607f821691505b60208210810361215957612158612102565b5b50919050565b7f4e6f204554482073656e7420666f72206469766964656e6473000000000000005f82015250565b5f612193601983611b8f565b915061219e8261215f565b602082019050919050565b5f6020820190508181035f8301526121c081612187565b9050919050565b5f815190506121d581611c89565b92915050565b5f602082840312156121f0576121ef611c1e565b5b5f6121fd848285016121c7565b91505092915050565b7f4e6f20746f6b656e7320697373756564000000000000000000000000000000005f82015250565b5f61223a601083611b8f565b915061224582612206565b602082019050919050565b5f6020820190508181035f8301526122678161222e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a582611c80565b91506122b083611c80565b92508282019050808211156122c8576122c761226e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61230582611c80565b915061231083611c80565b925082820261231e81611c80565b915082820484148315176123355761233461226e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61237382611c80565b915061237e83611c80565b92508261238e5761238d61233c565b5b828204905092915050565b5f6040820190506123ac5f830185611d24565b6123b96020830184611d24565b9392505050565b7f417272617973206c656e677468206d69736d61746368000000000000000000005f82015250565b5f6123f4601683611b8f565b91506123ff826123c0565b602082019050919050565b5f6020820190508181035f830152612421816123e8565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61245c600f83611b8f565b915061246782612428565b602082019050919050565b5f6020820190508181035f83015261248981612450565b9050919050565b7f4e6f206469766964656e647320746f20636c61696d00000000000000000000005f82015250565b5f6124c4601583611b8f565b91506124cf82612490565b602082019050919050565b5f6020820190508181035f8301526124f1816124b8565b9050919050565b5f81905092915050565b50565b5f6125105f836124f8565b915061251b82612502565b5f82019050919050565b5f61252f82612505565b9150819050919050565b7f4661696c656420746f2073656e642045544800000000000000000000000000005f82015250565b5f61256d601283611b8f565b915061257882612539565b602082019050919050565b5f6020820190508181035f83015261259a81612561565b9050919050565b5f6060820190506125b45f830186611df2565b6125c16020830185611d24565b6125ce6040830184611d24565b94935050505056fea2646970667358221220ef73d2a01161a355df3368b44f3400223085337db85082a6ac64f70f0910c54c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x54B JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x21E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2D7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x2E1 DUP7 DUP4 PUSH2 0x29C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x325 PUSH2 0x320 PUSH2 0x31B DUP5 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E DUP4 PUSH2 0x30B JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34A DUP3 PUSH2 0x32C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x369 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x374 DUP2 DUP5 DUP5 PUSH2 0x335 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH2 0x38C PUSH0 DUP3 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3AD DUP2 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x3B6 DUP5 PUSH2 0x28D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3D9 PUSH2 0x3D1 DUP6 PUSH2 0x28D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x379 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x414 DUP4 DUP4 PUSH2 0x3ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42D DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x1F1 JUMP JUMPDEST JUMPDEST PUSH2 0x450 DUP3 SLOAD PUSH2 0x24B JUMP JUMPDEST PUSH2 0x45B DUP3 DUP3 DUP6 PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x48C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x47A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x484 DUP6 DUP3 PUSH2 0x409 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x49A DUP7 PUSH2 0x27B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4DE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4DA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51C DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x512 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x260C DUP1 PUSH2 0x558 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DFB3383 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xD9E63BB1 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD9E63BB1 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x6EE JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAD9E7611 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xC7E772ED EQ PUSH2 0x63A JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x998AA465 EQ PUSH2 0x598 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x7DFB3383 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8284CE3E EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x8AD0AAEF EQ PUSH2 0x4F2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2A11CED0 GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x6264786C GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x6264786C EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x68306E43 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x464 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2A11CED0 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x2EB21B22 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x39C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xD8E6E2C GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x213A852F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xD43 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52E PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x558 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x582 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0xFCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xFE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x688 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1289 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x714 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x725 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x773 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7B0 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0x7BD DUP2 DUP6 DUP6 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x1338 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST GT PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x941 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xB DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAB4 JUMPI PUSH0 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x22CE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI DUP4 DUP2 CALLVALUE PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96C JUMP JUMPDEST POP PUSH32 0x2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFC PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0xB09 DUP6 DUP3 DUP6 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0xB14 DUP6 DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xB7B DUP3 DUP3 PUSH2 0x1542 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB87 PUSH2 0x1338 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xD54 PUSH0 PUSH2 0x15C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF04 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF30 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF52 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0x130D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xFA9 DUP3 DUP3 PUSH2 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFB7 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0xFC4 DUP2 DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFD7 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1061 SWAP1 PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1204 CALLER DUP3 PUSH2 0x1542 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1301 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130A DUP2 PUSH2 0x15C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1703 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1333 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x131F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x135E PUSH2 0xECD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13BD JUMPI PUSH2 0x1381 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13CA DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x144C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x143D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x144B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1532 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153D DUP4 DUP4 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BD PUSH0 DUP4 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16FF DUP3 PUSH0 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x170B PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1741 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AA SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1823 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181A SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x190C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1962 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1956 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A30 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19EB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A77 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AC1 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 PUSH2 0x1B49 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1B53 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 DUP3 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x1BD1 DUP2 DUP6 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1BE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x1BAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0D DUP2 DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4F DUP3 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5F DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C69 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C92 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAD DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D05 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2D DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D46 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D60 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6E DUP5 DUP3 DUP6 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9B DUP7 DUP3 DUP8 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DAC DUP7 DUP3 DUP8 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DBD DUP7 DUP3 DUP8 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFB DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E14 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2F DUP2 PUSH2 0x1E1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E88 DUP3 PUSH2 0x1BAD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB9 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC5 DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0B PUSH2 0x1F06 DUP5 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F2E JUMPI PUSH2 0x1F2D PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F57 JUMPI DUP1 PUSH2 0x1F43 DUP9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F30 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F85 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCB PUSH2 0x1FC6 DUP5 PUSH2 0x1F8E JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FEE JUMPI PUSH2 0x1FED PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2017 JUMPI DUP1 PUSH2 0x2003 DUP9 DUP3 PUSH2 0x1C9F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2045 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2063 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x208D DUP6 DUP3 DUP7 ADD PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP6 DUP3 DUP7 ADD PUSH2 0x2021 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2146 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204554482073656E7420666F72206469766964656E647300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 PUSH1 0x19 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C0 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D5 DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E732069737375656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223A PUSH1 0x10 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP3 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A5 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B0 DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22C8 JUMPI PUSH2 0x22C7 PUSH2 0x226E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2305 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x231E DUP2 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x226E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2373 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x237E DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x238E JUMPI PUSH2 0x238D PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x23B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23F4 PUSH1 0x16 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x23FF DUP3 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2421 DUP2 PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x245C PUSH1 0xF DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2467 DUP3 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2489 DUP2 PUSH2 0x2450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206469766964656E647320746F20636C61696D0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C4 PUSH1 0x15 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x24CF DUP3 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F1 DUP2 PUSH2 0x24B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2510 PUSH0 DUP4 PUSH2 0x24F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x251B DUP3 PUSH2 0x2502 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x252F DUP3 PUSH2 0x2505 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204554480000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x256D PUSH1 0x12 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP3 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x259A DUP2 PUSH2 0x2561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF PUSH20 0xD2A01161A355DF3368B44F3400223085337DB850 DUP3 0xA6 0xAC PUSH5 0xF70F0910C5 0x4C PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "214:552:9:-:0;;;;;;;;;;;;;826:10:8;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;214:552:9;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;214:552:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1018": {
									"entryPoint": 5955,
									"id": 1018,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_958": {
									"entryPoint": 4902,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_940": {
									"entryPoint": 5764,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_175": {
									"entryPoint": 5891,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_352": {
									"entryPoint": 4920,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_266": {
									"entryPoint": 6985,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": 7004,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_243": {
									"entryPoint": 6955,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_907": {
									"entryPoint": 5442,
									"id": 907,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1183": {
									"entryPoint": 4895,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1066": {
									"entryPoint": 5055,
									"id": 1066,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_414": {
									"entryPoint": 5569,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_797": {
									"entryPoint": 5202,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_874": {
									"entryPoint": 6418,
									"id": 874,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBatchDividendsUsers_1336": {
									"entryPoint": 2943,
									"id": 1336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addDividendsUser_1280": {
									"entryPoint": 3505,
									"id": 1280,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_694": {
									"entryPoint": 4615,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_718": {
									"entryPoint": 1958,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_653": {
									"entryPoint": 3326,
									"id": 653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1575": {
									"entryPoint": 3991,
									"id": 1575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimDividends_1483": {
									"entryPoint": 4071,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimedDividends_1215": {
									"entryPoint": 3414,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_631": {
									"entryPoint": 2913,
									"id": 631,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeDividends_1433": {
									"entryPoint": 2016,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dividends_1211": {
									"entryPoint": 3305,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClaimableDividends_1495": {
									"entryPoint": 3435,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getVersion_1605": {
									"entryPoint": 1998,
									"id": 1605,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@holders_1222": {
									"entryPoint": 2848,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initializeDividends_1248": {
									"entryPoint": 4047,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initializeSupply_1533": {
									"entryPoint": 4602,
									"id": 1533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1521": {
									"entryPoint": 4877,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lastDividendTimestamp_1219": {
									"entryPoint": 2907,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1560": {
									"entryPoint": 2921,
									"id": 1560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_613": {
									"entryPoint": 1814,
									"id": 613,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_335": {
									"entryPoint": 3789,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_366": {
									"entryPoint": 3395,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_622": {
									"entryPoint": 3829,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalDividends_1217": {
									"entryPoint": 3973,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_640": {
									"entryPoint": 2007,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_750": {
									"entryPoint": 2802,
									"id": 750,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_394": {
									"entryPoint": 4745,
									"id": 394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_677": {
									"entryPoint": 4013,
									"id": 677,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateContractStatus_1596": {
									"entryPoint": 3979,
									"id": 1596,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@x_1509": {
									"entryPoint": 1992,
									"id": 1509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 9256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20948:10",
										"nodeType": "YulBlock",
										"src": "0:20948:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3757:263:10",
													"nodeType": "YulBlock",
													"src": "3757:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:10",
																"nodeType": "YulBlock",
																"src": "3803:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:10"
																			},
																			"nativeSrc": "3805:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:10"
																		},
																		"nativeSrc": "3805:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:10"
																		},
																		"nativeSrc": "3774:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:10"
																},
																"nativeSrc": "3770:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:10"
															},
															"nativeSrc": "3767:119:10",
															"nodeType": "YulIf",
															"src": "3767:119:10"
														},
														{
															"nativeSrc": "3896:117:10",
															"nodeType": "YulBlock",
															"src": "3896:117:10",
															"statements": [
																{
																	"nativeSrc": "3911:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:10"
																				},
																				"nativeSrc": "3971:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:10"
																		},
																		"nativeSrc": "3950:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:10",
														"nodeType": "YulTypedName",
														"src": "3727:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:10",
														"nodeType": "YulTypedName",
														"src": "3738:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:10",
														"nodeType": "YulTypedName",
														"src": "3750:6:10",
														"type": ""
													}
												],
												"src": "3691:329:10"
											},
											{
												"body": {
													"nativeSrc": "4126:519:10",
													"nodeType": "YulBlock",
													"src": "4126:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:10",
																"nodeType": "YulBlock",
																"src": "4172:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:10"
																			},
																			"nativeSrc": "4174:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:10"
																		},
																		"nativeSrc": "4174:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:10"
																		},
																		"nativeSrc": "4143:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:10"
																},
																"nativeSrc": "4139:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:10"
															},
															"nativeSrc": "4136:119:10",
															"nodeType": "YulIf",
															"src": "4136:119:10"
														},
														{
															"nativeSrc": "4265:117:10",
															"nodeType": "YulBlock",
															"src": "4265:117:10",
															"statements": [
																{
																	"nativeSrc": "4280:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:10"
																				},
																				"nativeSrc": "4340:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:10"
																		},
																		"nativeSrc": "4319:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:10",
															"nodeType": "YulBlock",
															"src": "4392:118:10",
															"statements": [
																{
																	"nativeSrc": "4407:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:10"
																				},
																				"nativeSrc": "4468:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:10"
																		},
																		"nativeSrc": "4447:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:10",
															"nodeType": "YulBlock",
															"src": "4520:118:10",
															"statements": [
																{
																	"nativeSrc": "4535:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:10"
																				},
																				"nativeSrc": "4596:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:10"
																		},
																		"nativeSrc": "4575:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:10",
														"nodeType": "YulTypedName",
														"src": "4080:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:10",
														"nodeType": "YulTypedName",
														"src": "4091:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:10",
														"nodeType": "YulTypedName",
														"src": "4103:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:10",
														"nodeType": "YulTypedName",
														"src": "4111:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:10",
														"nodeType": "YulTypedName",
														"src": "4119:6:10",
														"type": ""
													}
												],
												"src": "4026:619:10"
											},
											{
												"body": {
													"nativeSrc": "4717:263:10",
													"nodeType": "YulBlock",
													"src": "4717:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4763:83:10",
																"nodeType": "YulBlock",
																"src": "4763:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4765:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4765:77:10"
																			},
																			"nativeSrc": "4765:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4765:79:10"
																		},
																		"nativeSrc": "4765:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4738:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4738:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4747:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:10"
																		},
																		"nativeSrc": "4734:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:10"
																},
																"nativeSrc": "4730:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4730:32:10"
															},
															"nativeSrc": "4727:119:10",
															"nodeType": "YulIf",
															"src": "4727:119:10"
														},
														{
															"nativeSrc": "4856:117:10",
															"nodeType": "YulBlock",
															"src": "4856:117:10",
															"statements": [
																{
																	"nativeSrc": "4871:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4871:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4885:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4885:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4875:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4875:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4900:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4900:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4935:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4935:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4946:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4946:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4931:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:10"
																				},
																				"nativeSrc": "4931:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4955:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4955:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4910:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4910:20:10"
																		},
																		"nativeSrc": "4910:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4900:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4900:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4651:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:10",
														"nodeType": "YulTypedName",
														"src": "4687:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4698:7:10",
														"nodeType": "YulTypedName",
														"src": "4698:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4710:6:10",
														"nodeType": "YulTypedName",
														"src": "4710:6:10",
														"type": ""
													}
												],
												"src": "4651:329:10"
											},
											{
												"body": {
													"nativeSrc": "5051:53:10",
													"nodeType": "YulBlock",
													"src": "5051:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5068:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5068:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5091:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5091:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5073:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5073:17:10"
																		},
																		"nativeSrc": "5073:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5061:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:10"
																},
																"nativeSrc": "5061:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5061:37:10"
															},
															"nativeSrc": "5061:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5061:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4986:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5039:5:10",
														"nodeType": "YulTypedName",
														"src": "5039:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5046:3:10",
														"nodeType": "YulTypedName",
														"src": "5046:3:10",
														"type": ""
													}
												],
												"src": "4986:118:10"
											},
											{
												"body": {
													"nativeSrc": "5208:124:10",
													"nodeType": "YulBlock",
													"src": "5208:124:10",
													"statements": [
														{
															"nativeSrc": "5218:26:10",
															"nodeType": "YulAssignment",
															"src": "5218:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5230:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5226:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:10"
																},
																"nativeSrc": "5226:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5226:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5218:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5298:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5298:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5311:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5311:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5322:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5322:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5307:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:10"
																		},
																		"nativeSrc": "5307:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5254:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5254:43:10"
																},
																"nativeSrc": "5254:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5254:71:10"
															},
															"nativeSrc": "5254:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5254:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5110:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5180:9:10",
														"nodeType": "YulTypedName",
														"src": "5180:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5192:6:10",
														"nodeType": "YulTypedName",
														"src": "5192:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5203:4:10",
														"nodeType": "YulTypedName",
														"src": "5203:4:10",
														"type": ""
													}
												],
												"src": "5110:222:10"
											},
											{
												"body": {
													"nativeSrc": "5381:43:10",
													"nodeType": "YulBlock",
													"src": "5381:43:10",
													"statements": [
														{
															"nativeSrc": "5391:27:10",
															"nodeType": "YulAssignment",
															"src": "5391:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5406:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5406:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5413:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:10"
																},
																"nativeSrc": "5402:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5402:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5391:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5391:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5338:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5363:5:10",
														"nodeType": "YulTypedName",
														"src": "5363:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5373:7:10",
														"nodeType": "YulTypedName",
														"src": "5373:7:10",
														"type": ""
													}
												],
												"src": "5338:86:10"
											},
											{
												"body": {
													"nativeSrc": "5491:51:10",
													"nodeType": "YulBlock",
													"src": "5491:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5508:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5529:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5513:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:10"
																		},
																		"nativeSrc": "5513:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:10"
																},
																"nativeSrc": "5501:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5501:35:10"
															},
															"nativeSrc": "5501:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5430:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5479:5:10",
														"nodeType": "YulTypedName",
														"src": "5479:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5486:3:10",
														"nodeType": "YulTypedName",
														"src": "5486:3:10",
														"type": ""
													}
												],
												"src": "5430:112:10"
											},
											{
												"body": {
													"nativeSrc": "5642:120:10",
													"nodeType": "YulBlock",
													"src": "5642:120:10",
													"statements": [
														{
															"nativeSrc": "5652:26:10",
															"nodeType": "YulAssignment",
															"src": "5652:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5660:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:10"
																},
																"nativeSrc": "5660:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5660:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5652:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5652:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:10"
																		},
																		"nativeSrc": "5737:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5688:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5688:39:10"
																},
																"nativeSrc": "5688:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5688:67:10"
															},
															"nativeSrc": "5688:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5688:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5548:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5614:9:10",
														"nodeType": "YulTypedName",
														"src": "5614:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5626:6:10",
														"nodeType": "YulTypedName",
														"src": "5626:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5637:4:10",
														"nodeType": "YulTypedName",
														"src": "5637:4:10",
														"type": ""
													}
												],
												"src": "5548:214:10"
											},
											{
												"body": {
													"nativeSrc": "5857:28:10",
													"nodeType": "YulBlock",
													"src": "5857:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5874:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5874:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5877:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:10"
																},
																"nativeSrc": "5867:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5867:12:10"
															},
															"nativeSrc": "5867:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "5867:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5768:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5768:117:10"
											},
											{
												"body": {
													"nativeSrc": "5919:152:10",
													"nodeType": "YulBlock",
													"src": "5919:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5939:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5939:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5929:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5929:6:10"
																},
																"nativeSrc": "5929:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5929:88:10"
															},
															"nativeSrc": "5929:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5929:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6033:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6033:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6036:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6036:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6026:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:10"
																},
																"nativeSrc": "6026:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6026:15:10"
															},
															"nativeSrc": "6026:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6026:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6057:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6060:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6060:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:10"
																},
																"nativeSrc": "6050:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6050:15:10"
															},
															"nativeSrc": "6050:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6050:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5891:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5891:180:10"
											},
											{
												"body": {
													"nativeSrc": "6120:238:10",
													"nodeType": "YulBlock",
													"src": "6120:238:10",
													"statements": [
														{
															"nativeSrc": "6130:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6130:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6152:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6152:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6182:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6182:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6160:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "6160:21:10"
																		},
																		"nativeSrc": "6160:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6148:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6148:3:10"
																},
																"nativeSrc": "6148:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6134:10:10",
																	"nodeType": "YulTypedName",
																	"src": "6134:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6299:22:10",
																"nodeType": "YulBlock",
																"src": "6299:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6301:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6301:16:10"
																			},
																			"nativeSrc": "6301:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6301:18:10"
																		},
																		"nativeSrc": "6301:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6301:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6242:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "6242:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6254:18:10",
																				"nodeType": "YulLiteral",
																				"src": "6254:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6239:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6239:2:10"
																		},
																		"nativeSrc": "6239:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6278:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "6278:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6290:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6290:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6275:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6275:2:10"
																		},
																		"nativeSrc": "6275:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6275:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6236:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6236:2:10"
																},
																"nativeSrc": "6236:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6236:62:10"
															},
															"nativeSrc": "6233:88:10",
															"nodeType": "YulIf",
															"src": "6233:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6341:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "6341:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:10"
																},
																"nativeSrc": "6330:22:10",
																"nodeType": "YulFunctionCall",
																"src": "6330:22:10"
															},
															"nativeSrc": "6330:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "6330:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6077:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6106:6:10",
														"nodeType": "YulTypedName",
														"src": "6106:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6114:4:10",
														"nodeType": "YulTypedName",
														"src": "6114:4:10",
														"type": ""
													}
												],
												"src": "6077:281:10"
											},
											{
												"body": {
													"nativeSrc": "6405:88:10",
													"nodeType": "YulBlock",
													"src": "6405:88:10",
													"statements": [
														{
															"nativeSrc": "6415:30:10",
															"nodeType": "YulAssignment",
															"src": "6415:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6425:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "6425:18:10"
																},
																"nativeSrc": "6425:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6425:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6415:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6474:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6474:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6482:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6482:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6454:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "6454:19:10"
																},
																"nativeSrc": "6454:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6454:33:10"
															},
															"nativeSrc": "6454:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "6454:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6364:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6389:4:10",
														"nodeType": "YulTypedName",
														"src": "6389:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6398:6:10",
														"nodeType": "YulTypedName",
														"src": "6398:6:10",
														"type": ""
													}
												],
												"src": "6364:129:10"
											},
											{
												"body": {
													"nativeSrc": "6581:229:10",
													"nodeType": "YulBlock",
													"src": "6581:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6686:22:10",
																"nodeType": "YulBlock",
																"src": "6686:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6688:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6688:16:10"
																			},
																			"nativeSrc": "6688:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6688:18:10"
																		},
																		"nativeSrc": "6688:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6658:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6666:18:10",
																		"nodeType": "YulLiteral",
																		"src": "6666:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6655:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6655:2:10"
																},
																"nativeSrc": "6655:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6655:30:10"
															},
															"nativeSrc": "6652:56:10",
															"nodeType": "YulIf",
															"src": "6652:56:10"
														},
														{
															"nativeSrc": "6718:25:10",
															"nodeType": "YulAssignment",
															"src": "6718:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6730:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6730:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6738:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6738:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6726:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:10"
																},
																"nativeSrc": "6726:17:10",
																"nodeType": "YulFunctionCall",
																"src": "6726:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6718:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6718:4:10"
																}
															]
														},
														{
															"nativeSrc": "6780:23:10",
															"nodeType": "YulAssignment",
															"src": "6780:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6792:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6798:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6788:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:10"
																},
																"nativeSrc": "6788:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6788:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6780:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6499:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6565:6:10",
														"nodeType": "YulTypedName",
														"src": "6565:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6576:4:10",
														"nodeType": "YulTypedName",
														"src": "6576:4:10",
														"type": ""
													}
												],
												"src": "6499:311:10"
											},
											{
												"body": {
													"nativeSrc": "6905:28:10",
													"nodeType": "YulBlock",
													"src": "6905:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6922:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6922:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6925:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6925:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:10"
																},
																"nativeSrc": "6915:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6915:12:10"
															},
															"nativeSrc": "6915:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "6915:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6816:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6816:117:10"
											},
											{
												"body": {
													"nativeSrc": "7058:608:10",
													"nodeType": "YulBlock",
													"src": "7058:608:10",
													"statements": [
														{
															"nativeSrc": "7068:90:10",
															"nodeType": "YulAssignment",
															"src": "7068:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7150:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7150:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "7093:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "7093:56:10"
																		},
																		"nativeSrc": "7093:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7093:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7077:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "7077:15:10"
																},
																"nativeSrc": "7077:81:10",
																"nodeType": "YulFunctionCall",
																"src": "7077:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7068:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7068:5:10"
																}
															]
														},
														{
															"nativeSrc": "7167:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7167:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "7178:5:10",
																"nodeType": "YulIdentifier",
																"src": "7178:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7171:3:10",
																	"nodeType": "YulTypedName",
																	"src": "7171:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7200:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7200:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7207:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7207:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7193:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7193:6:10"
																},
																"nativeSrc": "7193:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7193:21:10"
															},
															"nativeSrc": "7193:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7193:21:10"
														},
														{
															"nativeSrc": "7223:23:10",
															"nodeType": "YulAssignment",
															"src": "7223:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7234:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7234:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7241:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7230:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7230:3:10"
																},
																"nativeSrc": "7230:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7230:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7223:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7223:3:10"
																}
															]
														},
														{
															"nativeSrc": "7256:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7256:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7274:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7286:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7286:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7294:4:10",
																				"nodeType": "YulLiteral",
																				"src": "7294:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7282:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:10"
																		},
																		"nativeSrc": "7282:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7270:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7270:3:10"
																},
																"nativeSrc": "7270:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7270:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7260:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7260:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:103:10",
																"nodeType": "YulBlock",
																"src": "7328:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7342:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7342:77:10"
																			},
																			"nativeSrc": "7342:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7342:79:10"
																		},
																		"nativeSrc": "7342:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7342:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7315:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7315:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7312:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7312:2:10"
																},
																"nativeSrc": "7312:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7312:15:10"
															},
															"nativeSrc": "7309:122:10",
															"nodeType": "YulIf",
															"src": "7309:122:10"
														},
														{
															"body": {
																"nativeSrc": "7516:144:10",
																"nodeType": "YulBlock",
																"src": "7516:144:10",
																"statements": [
																	{
																		"nativeSrc": "7531:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7531:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7549:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7535:10:10",
																				"nodeType": "YulTypedName",
																				"src": "7535:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7573:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7573:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7599:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "7599:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7611:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7611:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "7578:20:10",
																						"nodeType": "YulIdentifier",
																						"src": "7578:20:10"
																					},
																					"nativeSrc": "7578:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7578:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7566:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7566:6:10"
																			},
																			"nativeSrc": "7566:50:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7566:50:10"
																		},
																		"nativeSrc": "7566:50:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7566:50:10"
																	},
																	{
																		"nativeSrc": "7629:21:10",
																		"nodeType": "YulAssignment",
																		"src": "7629:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7640:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7640:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7645:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7645:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7636:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7636:3:10"
																			},
																			"nativeSrc": "7636:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7636:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7629:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7629:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7469:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7469:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7474:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7474:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7466:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7466:2:10"
																},
																"nativeSrc": "7466:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7466:15:10"
															},
															"nativeSrc": "7440:220:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7482:25:10",
																"nodeType": "YulBlock",
																"src": "7482:25:10",
																"statements": [
																	{
																		"nativeSrc": "7484:21:10",
																		"nodeType": "YulAssignment",
																		"src": "7484:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7495:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7495:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7500:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7500:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7491:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7491:3:10"
																			},
																			"nativeSrc": "7491:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7491:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7484:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7484:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7444:21:10",
																"nodeType": "YulBlock",
																"src": "7444:21:10",
																"statements": [
																	{
																		"nativeSrc": "7446:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7446:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7457:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7457:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7450:3:10",
																				"nodeType": "YulTypedName",
																				"src": "7450:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7440:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6956:710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7028:6:10",
														"nodeType": "YulTypedName",
														"src": "7028:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7036:6:10",
														"nodeType": "YulTypedName",
														"src": "7036:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7044:3:10",
														"nodeType": "YulTypedName",
														"src": "7044:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7052:5:10",
														"nodeType": "YulTypedName",
														"src": "7052:5:10",
														"type": ""
													}
												],
												"src": "6956:710:10"
											},
											{
												"body": {
													"nativeSrc": "7766:293:10",
													"nodeType": "YulBlock",
													"src": "7766:293:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7815:83:10",
																"nodeType": "YulBlock",
																"src": "7815:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7817:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7817:77:10"
																			},
																			"nativeSrc": "7817:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7817:79:10"
																		},
																		"nativeSrc": "7817:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7817:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7794:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7794:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7802:4:10",
																						"nodeType": "YulLiteral",
																						"src": "7802:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7790:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7790:3:10"
																				},
																				"nativeSrc": "7790:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7790:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7809:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7809:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7786:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7786:3:10"
																		},
																		"nativeSrc": "7786:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7786:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7779:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7779:6:10"
																},
																"nativeSrc": "7779:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7779:35:10"
															},
															"nativeSrc": "7776:122:10",
															"nodeType": "YulIf",
															"src": "7776:122:10"
														},
														{
															"nativeSrc": "7907:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7907:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7934:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7921:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7921:12:10"
																},
																"nativeSrc": "7921:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7921:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7911:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7911:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7950:103:10",
															"nodeType": "YulAssignment",
															"src": "7950:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8026:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8026:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8034:4:10",
																				"nodeType": "YulLiteral",
																				"src": "8034:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8022:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8022:3:10"
																		},
																		"nativeSrc": "8022:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8022:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8041:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8041:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8049:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8049:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7959:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "7959:62:10"
																},
																"nativeSrc": "7959:94:10",
																"nodeType": "YulFunctionCall",
																"src": "7959:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7950:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7950:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7689:370:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7744:6:10",
														"nodeType": "YulTypedName",
														"src": "7744:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7752:3:10",
														"nodeType": "YulTypedName",
														"src": "7752:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7760:5:10",
														"nodeType": "YulTypedName",
														"src": "7760:5:10",
														"type": ""
													}
												],
												"src": "7689:370:10"
											},
											{
												"body": {
													"nativeSrc": "8147:229:10",
													"nodeType": "YulBlock",
													"src": "8147:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8252:22:10",
																"nodeType": "YulBlock",
																"src": "8252:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8254:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8254:16:10"
																			},
																			"nativeSrc": "8254:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8254:18:10"
																		},
																		"nativeSrc": "8254:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8254:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8224:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8232:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8232:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8221:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8221:2:10"
																},
																"nativeSrc": "8221:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8221:30:10"
															},
															"nativeSrc": "8218:56:10",
															"nodeType": "YulIf",
															"src": "8218:56:10"
														},
														{
															"nativeSrc": "8284:25:10",
															"nodeType": "YulAssignment",
															"src": "8284:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8296:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8296:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8304:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8304:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8292:3:10"
																},
																"nativeSrc": "8292:17:10",
																"nodeType": "YulFunctionCall",
																"src": "8292:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8284:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8284:4:10"
																}
															]
														},
														{
															"nativeSrc": "8346:23:10",
															"nodeType": "YulAssignment",
															"src": "8346:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8358:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8358:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8364:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8364:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8354:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:10"
																},
																"nativeSrc": "8354:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8354:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8346:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8346:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8065:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8131:6:10",
														"nodeType": "YulTypedName",
														"src": "8131:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8142:4:10",
														"nodeType": "YulTypedName",
														"src": "8142:4:10",
														"type": ""
													}
												],
												"src": "8065:311:10"
											},
											{
												"body": {
													"nativeSrc": "8501:608:10",
													"nodeType": "YulBlock",
													"src": "8501:608:10",
													"statements": [
														{
															"nativeSrc": "8511:90:10",
															"nodeType": "YulAssignment",
															"src": "8511:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8593:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8536:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "8536:56:10"
																		},
																		"nativeSrc": "8536:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8536:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8520:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "8520:15:10"
																},
																"nativeSrc": "8520:81:10",
																"nodeType": "YulFunctionCall",
																"src": "8520:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8511:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8511:5:10"
																}
															]
														},
														{
															"nativeSrc": "8610:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8610:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "8621:5:10",
																"nodeType": "YulIdentifier",
																"src": "8621:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8614:3:10",
																	"nodeType": "YulTypedName",
																	"src": "8614:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8643:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8643:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8650:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8650:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8636:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:10"
																},
																"nativeSrc": "8636:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8636:21:10"
															},
															"nativeSrc": "8636:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8636:21:10"
														},
														{
															"nativeSrc": "8666:23:10",
															"nodeType": "YulAssignment",
															"src": "8666:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8677:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8677:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8684:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8673:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8673:3:10"
																},
																"nativeSrc": "8673:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8673:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8666:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8666:3:10"
																}
															]
														},
														{
															"nativeSrc": "8699:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8699:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8717:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8717:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8729:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8729:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8737:4:10",
																				"nodeType": "YulLiteral",
																				"src": "8737:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8725:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:10"
																		},
																		"nativeSrc": "8725:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8725:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8713:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8713:3:10"
																},
																"nativeSrc": "8713:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8713:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8703:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8703:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8771:103:10",
																"nodeType": "YulBlock",
																"src": "8771:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8785:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8785:77:10"
																			},
																			"nativeSrc": "8785:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8785:79:10"
																		},
																		"nativeSrc": "8785:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8785:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8758:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8758:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8766:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8766:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8755:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8755:2:10"
																},
																"nativeSrc": "8755:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8755:15:10"
															},
															"nativeSrc": "8752:122:10",
															"nodeType": "YulIf",
															"src": "8752:122:10"
														},
														{
															"body": {
																"nativeSrc": "8959:144:10",
																"nodeType": "YulBlock",
																"src": "8959:144:10",
																"statements": [
																	{
																		"nativeSrc": "8974:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8992:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8978:10:10",
																				"nodeType": "YulTypedName",
																				"src": "8978:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9016:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9016:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "9042:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "9042:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9054:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9054:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "9021:20:10",
																						"nodeType": "YulIdentifier",
																						"src": "9021:20:10"
																					},
																					"nativeSrc": "9021:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9021:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9009:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9009:6:10"
																			},
																			"nativeSrc": "9009:50:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9009:50:10"
																		},
																		"nativeSrc": "9009:50:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9009:50:10"
																	},
																	{
																		"nativeSrc": "9072:21:10",
																		"nodeType": "YulAssignment",
																		"src": "9072:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9083:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9083:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9088:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9088:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9079:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9079:3:10"
																			},
																			"nativeSrc": "9079:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9079:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "9072:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9072:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8912:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8912:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8917:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8917:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8909:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8909:2:10"
																},
																"nativeSrc": "8909:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8909:15:10"
															},
															"nativeSrc": "8883:220:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8925:25:10",
																"nodeType": "YulBlock",
																"src": "8925:25:10",
																"statements": [
																	{
																		"nativeSrc": "8927:21:10",
																		"nodeType": "YulAssignment",
																		"src": "8927:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8938:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8938:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8943:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8943:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8934:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8934:3:10"
																			},
																			"nativeSrc": "8934:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8934:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8927:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8927:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8887:21:10",
																"nodeType": "YulBlock",
																"src": "8887:21:10",
																"statements": [
																	{
																		"nativeSrc": "8889:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8889:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8900:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8900:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8893:3:10",
																				"nodeType": "YulTypedName",
																				"src": "8893:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8883:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8399:710:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8471:6:10",
														"nodeType": "YulTypedName",
														"src": "8471:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8479:6:10",
														"nodeType": "YulTypedName",
														"src": "8479:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8487:3:10",
														"nodeType": "YulTypedName",
														"src": "8487:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8495:5:10",
														"nodeType": "YulTypedName",
														"src": "8495:5:10",
														"type": ""
													}
												],
												"src": "8399:710:10"
											},
											{
												"body": {
													"nativeSrc": "9209:293:10",
													"nodeType": "YulBlock",
													"src": "9209:293:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9258:83:10",
																"nodeType": "YulBlock",
																"src": "9258:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9260:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:10"
																			},
																			"nativeSrc": "9260:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:10"
																		},
																		"nativeSrc": "9260:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9237:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9237:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9245:4:10",
																						"nodeType": "YulLiteral",
																						"src": "9245:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9233:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9233:3:10"
																				},
																				"nativeSrc": "9233:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9233:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9252:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9252:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:10"
																		},
																		"nativeSrc": "9229:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9229:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9222:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:10"
																},
																"nativeSrc": "9222:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9222:35:10"
															},
															"nativeSrc": "9219:122:10",
															"nodeType": "YulIf",
															"src": "9219:122:10"
														},
														{
															"nativeSrc": "9350:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9350:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9377:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9377:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9364:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "9364:12:10"
																},
																"nativeSrc": "9364:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9364:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9354:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9354:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9393:103:10",
															"nodeType": "YulAssignment",
															"src": "9393:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9469:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9469:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9477:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9477:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9465:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9465:3:10"
																		},
																		"nativeSrc": "9465:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9465:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9484:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9484:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9492:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9492:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9402:62:10",
																	"nodeType": "YulIdentifier",
																	"src": "9402:62:10"
																},
																"nativeSrc": "9402:94:10",
																"nodeType": "YulFunctionCall",
																"src": "9402:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9393:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9393:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9132:370:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9187:6:10",
														"nodeType": "YulTypedName",
														"src": "9187:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9195:3:10",
														"nodeType": "YulTypedName",
														"src": "9195:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9203:5:10",
														"nodeType": "YulTypedName",
														"src": "9203:5:10",
														"type": ""
													}
												],
												"src": "9132:370:10"
											},
											{
												"body": {
													"nativeSrc": "9641:761:10",
													"nodeType": "YulBlock",
													"src": "9641:761:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9687:83:10",
																"nodeType": "YulBlock",
																"src": "9687:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9689:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9689:77:10"
																			},
																			"nativeSrc": "9689:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9689:79:10"
																		},
																		"nativeSrc": "9689:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9689:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9662:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9662:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9671:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9658:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9658:3:10"
																		},
																		"nativeSrc": "9658:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9683:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9683:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9654:3:10"
																},
																"nativeSrc": "9654:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9654:32:10"
															},
															"nativeSrc": "9651:119:10",
															"nodeType": "YulIf",
															"src": "9651:119:10"
														},
														{
															"nativeSrc": "9780:302:10",
															"nodeType": "YulBlock",
															"src": "9780:302:10",
															"statements": [
																{
																	"nativeSrc": "9795:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9795:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9826:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9826:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9837:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9837:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9822:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9822:3:10"
																				},
																				"nativeSrc": "9822:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9822:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9809:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "9809:12:10"
																		},
																		"nativeSrc": "9809:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9809:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9799:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9799:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9887:83:10",
																		"nodeType": "YulBlock",
																		"src": "9887:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9889:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "9889:77:10"
																					},
																					"nativeSrc": "9889:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9889:79:10"
																				},
																				"nativeSrc": "9889:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9889:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9859:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9859:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9867:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9867:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9856:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9856:2:10"
																		},
																		"nativeSrc": "9856:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9856:30:10"
																	},
																	"nativeSrc": "9853:117:10",
																	"nodeType": "YulIf",
																	"src": "9853:117:10"
																},
																{
																	"nativeSrc": "9984:88:10",
																	"nodeType": "YulAssignment",
																	"src": "9984:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10044:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10044:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10055:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10055:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10040:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10040:3:10"
																				},
																				"nativeSrc": "10040:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10040:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10064:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10064:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "9994:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "9994:45:10"
																		},
																		"nativeSrc": "9994:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9984:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9984:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10092:303:10",
															"nodeType": "YulBlock",
															"src": "10092:303:10",
															"statements": [
																{
																	"nativeSrc": "10107:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10107:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10138:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10138:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10149:2:10",
																						"nodeType": "YulLiteral",
																						"src": "10149:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10134:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10134:3:10"
																				},
																				"nativeSrc": "10134:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10134:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10121:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "10121:12:10"
																		},
																		"nativeSrc": "10121:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10121:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10111:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10111:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10200:83:10",
																		"nodeType": "YulBlock",
																		"src": "10200:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10202:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "10202:77:10"
																					},
																					"nativeSrc": "10202:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10202:79:10"
																				},
																				"nativeSrc": "10202:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "10202:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10172:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10172:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10180:18:10",
																				"nodeType": "YulLiteral",
																				"src": "10180:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10169:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10169:2:10"
																		},
																		"nativeSrc": "10169:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:30:10"
																	},
																	"nativeSrc": "10166:117:10",
																	"nodeType": "YulIf",
																	"src": "10166:117:10"
																},
																{
																	"nativeSrc": "10297:88:10",
																	"nodeType": "YulAssignment",
																	"src": "10297:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10357:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10357:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10368:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10368:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10353:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10353:3:10"
																				},
																				"nativeSrc": "10353:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10353:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10377:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10377:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10307:45:10",
																			"nodeType": "YulIdentifier",
																			"src": "10307:45:10"
																		},
																		"nativeSrc": "10307:78:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10307:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10297:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10297:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9508:894:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9603:9:10",
														"nodeType": "YulTypedName",
														"src": "9603:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9614:7:10",
														"nodeType": "YulTypedName",
														"src": "9614:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9626:6:10",
														"nodeType": "YulTypedName",
														"src": "9626:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9634:6:10",
														"nodeType": "YulTypedName",
														"src": "9634:6:10",
														"type": ""
													}
												],
												"src": "9508:894:10"
											},
											{
												"body": {
													"nativeSrc": "10491:391:10",
													"nodeType": "YulBlock",
													"src": "10491:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10537:83:10",
																"nodeType": "YulBlock",
																"src": "10537:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10539:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10539:77:10"
																			},
																			"nativeSrc": "10539:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10539:79:10"
																		},
																		"nativeSrc": "10539:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10539:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10512:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10512:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10521:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10521:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10508:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:10"
																		},
																		"nativeSrc": "10508:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10508:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10533:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10533:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10504:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10504:3:10"
																},
																"nativeSrc": "10504:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10504:32:10"
															},
															"nativeSrc": "10501:119:10",
															"nodeType": "YulIf",
															"src": "10501:119:10"
														},
														{
															"nativeSrc": "10630:117:10",
															"nodeType": "YulBlock",
															"src": "10630:117:10",
															"statements": [
																{
																	"nativeSrc": "10645:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10645:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10649:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10649:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10674:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10674:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10709:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10709:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10720:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10720:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10705:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10705:3:10"
																				},
																				"nativeSrc": "10705:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10705:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10729:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10729:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10684:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10684:20:10"
																		},
																		"nativeSrc": "10684:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10684:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10674:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10674:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10757:118:10",
															"nodeType": "YulBlock",
															"src": "10757:118:10",
															"statements": [
																{
																	"nativeSrc": "10772:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10772:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10786:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10776:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10776:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10802:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10802:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10837:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10837:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10848:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10848:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10833:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10833:3:10"
																				},
																				"nativeSrc": "10833:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10833:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10857:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10857:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10812:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10812:20:10"
																		},
																		"nativeSrc": "10812:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10812:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10802:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10802:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10408:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10453:9:10",
														"nodeType": "YulTypedName",
														"src": "10453:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10464:7:10",
														"nodeType": "YulTypedName",
														"src": "10464:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10476:6:10",
														"nodeType": "YulTypedName",
														"src": "10476:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10484:6:10",
														"nodeType": "YulTypedName",
														"src": "10484:6:10",
														"type": ""
													}
												],
												"src": "10408:474:10"
											},
											{
												"body": {
													"nativeSrc": "10916:152:10",
													"nodeType": "YulBlock",
													"src": "10916:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10933:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10933:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10936:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10936:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10926:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10926:6:10"
																},
																"nativeSrc": "10926:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10926:88:10"
															},
															"nativeSrc": "10926:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10926:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11030:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11030:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11033:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11033:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11023:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11023:6:10"
																},
																"nativeSrc": "11023:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11023:15:10"
															},
															"nativeSrc": "11023:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11023:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11054:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11054:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11057:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11057:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11047:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11047:6:10"
																},
																"nativeSrc": "11047:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11047:15:10"
															},
															"nativeSrc": "11047:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11047:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10888:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10888:180:10"
											},
											{
												"body": {
													"nativeSrc": "11125:269:10",
													"nodeType": "YulBlock",
													"src": "11125:269:10",
													"statements": [
														{
															"nativeSrc": "11135:22:10",
															"nodeType": "YulAssignment",
															"src": "11135:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11149:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11149:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11155:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11155:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11145:3:10"
																},
																"nativeSrc": "11145:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11145:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11135:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11135:6:10"
																}
															]
														},
														{
															"nativeSrc": "11166:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11166:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11196:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11196:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11202:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11202:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11192:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11192:3:10"
																},
																"nativeSrc": "11192:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11192:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11170:18:10",
																	"nodeType": "YulTypedName",
																	"src": "11170:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11243:51:10",
																"nodeType": "YulBlock",
																"src": "11243:51:10",
																"statements": [
																	{
																		"nativeSrc": "11257:27:10",
																		"nodeType": "YulAssignment",
																		"src": "11257:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11271:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11271:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11279:4:10",
																					"nodeType": "YulLiteral",
																					"src": "11279:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11267:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11267:3:10"
																			},
																			"nativeSrc": "11267:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11267:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11257:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11257:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11223:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "11223:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11216:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11216:6:10"
																},
																"nativeSrc": "11216:26:10",
																"nodeType": "YulFunctionCall",
																"src": "11216:26:10"
															},
															"nativeSrc": "11213:81:10",
															"nodeType": "YulIf",
															"src": "11213:81:10"
														},
														{
															"body": {
																"nativeSrc": "11346:42:10",
																"nodeType": "YulBlock",
																"src": "11346:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11360:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11360:16:10"
																			},
																			"nativeSrc": "11360:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11360:18:10"
																		},
																		"nativeSrc": "11360:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11360:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11310:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "11310:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11333:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11333:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11341:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11341:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11330:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11330:2:10"
																		},
																		"nativeSrc": "11330:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11330:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11307:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11307:2:10"
																},
																"nativeSrc": "11307:38:10",
																"nodeType": "YulFunctionCall",
																"src": "11307:38:10"
															},
															"nativeSrc": "11304:84:10",
															"nodeType": "YulIf",
															"src": "11304:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11074:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11109:4:10",
														"nodeType": "YulTypedName",
														"src": "11109:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11118:6:10",
														"nodeType": "YulTypedName",
														"src": "11118:6:10",
														"type": ""
													}
												],
												"src": "11074:320:10"
											},
											{
												"body": {
													"nativeSrc": "11506:69:10",
													"nodeType": "YulBlock",
													"src": "11506:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11528:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11528:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11536:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11536:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11524:3:10"
																		},
																		"nativeSrc": "11524:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11524:14:10"
																	},
																	{
																		"hexValue": "4e6f204554482073656e7420666f72206469766964656e6473",
																		"kind": "string",
																		"nativeSrc": "11540:27:10",
																		"nodeType": "YulLiteral",
																		"src": "11540:27:10",
																		"type": "",
																		"value": "No ETH sent for dividends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11517:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:10"
																},
																"nativeSrc": "11517:51:10",
																"nodeType": "YulFunctionCall",
																"src": "11517:51:10"
															},
															"nativeSrc": "11517:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "11517:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee",
												"nativeSrc": "11400:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11498:6:10",
														"nodeType": "YulTypedName",
														"src": "11498:6:10",
														"type": ""
													}
												],
												"src": "11400:175:10"
											},
											{
												"body": {
													"nativeSrc": "11727:220:10",
													"nodeType": "YulBlock",
													"src": "11727:220:10",
													"statements": [
														{
															"nativeSrc": "11737:74:10",
															"nodeType": "YulAssignment",
															"src": "11737:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11803:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11803:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11808:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11808:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11744:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11744:58:10"
																},
																"nativeSrc": "11744:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11744:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11737:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11737:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11909:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11909:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee",
																	"nativeSrc": "11820:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11820:88:10"
																},
																"nativeSrc": "11820:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11820:93:10"
															},
															"nativeSrc": "11820:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11820:93:10"
														},
														{
															"nativeSrc": "11922:19:10",
															"nodeType": "YulAssignment",
															"src": "11922:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11933:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11933:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11938:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11929:3:10"
																},
																"nativeSrc": "11929:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11929:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11922:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11581:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11715:3:10",
														"nodeType": "YulTypedName",
														"src": "11715:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11723:3:10",
														"nodeType": "YulTypedName",
														"src": "11723:3:10",
														"type": ""
													}
												],
												"src": "11581:366:10"
											},
											{
												"body": {
													"nativeSrc": "12124:248:10",
													"nodeType": "YulBlock",
													"src": "12124:248:10",
													"statements": [
														{
															"nativeSrc": "12134:26:10",
															"nodeType": "YulAssignment",
															"src": "12134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12146:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12146:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12142:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12142:3:10"
																},
																"nativeSrc": "12142:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12134:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12181:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12181:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12192:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12192:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12177:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12177:3:10"
																		},
																		"nativeSrc": "12177:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12177:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12200:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12200:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12206:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12196:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:10"
																		},
																		"nativeSrc": "12196:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12196:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12170:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:10"
																},
																"nativeSrc": "12170:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12170:47:10"
															},
															"nativeSrc": "12170:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12170:47:10"
														},
														{
															"nativeSrc": "12226:139:10",
															"nodeType": "YulAssignment",
															"src": "12226:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12360:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12360:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12234:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12234:124:10"
																},
																"nativeSrc": "12234:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12234:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12226:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12226:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11953:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12104:9:10",
														"nodeType": "YulTypedName",
														"src": "12104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12119:4:10",
														"nodeType": "YulTypedName",
														"src": "12119:4:10",
														"type": ""
													}
												],
												"src": "11953:419:10"
											},
											{
												"body": {
													"nativeSrc": "12441:80:10",
													"nodeType": "YulBlock",
													"src": "12441:80:10",
													"statements": [
														{
															"nativeSrc": "12451:22:10",
															"nodeType": "YulAssignment",
															"src": "12451:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12466:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12466:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12460:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12460:5:10"
																},
																"nativeSrc": "12460:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12460:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12451:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12451:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12509:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "12509:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12482:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "12482:26:10"
																},
																"nativeSrc": "12482:33:10",
																"nodeType": "YulFunctionCall",
																"src": "12482:33:10"
															},
															"nativeSrc": "12482:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "12482:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12378:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12419:6:10",
														"nodeType": "YulTypedName",
														"src": "12419:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12427:3:10",
														"nodeType": "YulTypedName",
														"src": "12427:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12435:5:10",
														"nodeType": "YulTypedName",
														"src": "12435:5:10",
														"type": ""
													}
												],
												"src": "12378:143:10"
											},
											{
												"body": {
													"nativeSrc": "12604:274:10",
													"nodeType": "YulBlock",
													"src": "12604:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12650:83:10",
																"nodeType": "YulBlock",
																"src": "12650:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12652:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "12652:77:10"
																			},
																			"nativeSrc": "12652:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12652:79:10"
																		},
																		"nativeSrc": "12652:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12652:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12625:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12625:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12634:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12634:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12621:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12621:3:10"
																		},
																		"nativeSrc": "12621:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12621:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12646:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12617:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12617:3:10"
																},
																"nativeSrc": "12617:32:10",
																"nodeType": "YulFunctionCall",
																"src": "12617:32:10"
															},
															"nativeSrc": "12614:119:10",
															"nodeType": "YulIf",
															"src": "12614:119:10"
														},
														{
															"nativeSrc": "12743:128:10",
															"nodeType": "YulBlock",
															"src": "12743:128:10",
															"statements": [
																{
																	"nativeSrc": "12758:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12758:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12772:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12772:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12762:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12762:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12787:74:10",
																	"nodeType": "YulAssignment",
																	"src": "12787:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12833:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12833:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12844:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12844:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12829:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12829:3:10"
																				},
																				"nativeSrc": "12829:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12829:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12853:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12853:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12797:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "12797:31:10"
																		},
																		"nativeSrc": "12797:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12797:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12787:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12787:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12527:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12574:9:10",
														"nodeType": "YulTypedName",
														"src": "12574:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12585:7:10",
														"nodeType": "YulTypedName",
														"src": "12585:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12597:6:10",
														"nodeType": "YulTypedName",
														"src": "12597:6:10",
														"type": ""
													}
												],
												"src": "12527:351:10"
											},
											{
												"body": {
													"nativeSrc": "12990:60:10",
													"nodeType": "YulBlock",
													"src": "12990:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13012:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13020:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13008:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13008:3:10"
																		},
																		"nativeSrc": "13008:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13008:14:10"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320697373756564",
																		"kind": "string",
																		"nativeSrc": "13024:18:10",
																		"nodeType": "YulLiteral",
																		"src": "13024:18:10",
																		"type": "",
																		"value": "No tokens issued"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:10"
																},
																"nativeSrc": "13001:42:10",
																"nodeType": "YulFunctionCall",
																"src": "13001:42:10"
															},
															"nativeSrc": "13001:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "13001:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
												"nativeSrc": "12884:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12982:6:10",
														"nodeType": "YulTypedName",
														"src": "12982:6:10",
														"type": ""
													}
												],
												"src": "12884:166:10"
											},
											{
												"body": {
													"nativeSrc": "13202:220:10",
													"nodeType": "YulBlock",
													"src": "13202:220:10",
													"statements": [
														{
															"nativeSrc": "13212:74:10",
															"nodeType": "YulAssignment",
															"src": "13212:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13278:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13278:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13283:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13283:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13219:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13219:58:10"
																},
																"nativeSrc": "13219:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13219:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13212:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13384:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13384:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																	"nativeSrc": "13295:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13295:88:10"
																},
																"nativeSrc": "13295:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13295:93:10"
															},
															"nativeSrc": "13295:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13295:93:10"
														},
														{
															"nativeSrc": "13397:19:10",
															"nodeType": "YulAssignment",
															"src": "13397:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13408:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13408:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13413:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13404:3:10"
																},
																"nativeSrc": "13404:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13404:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13397:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13397:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13056:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13190:3:10",
														"nodeType": "YulTypedName",
														"src": "13190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13198:3:10",
														"nodeType": "YulTypedName",
														"src": "13198:3:10",
														"type": ""
													}
												],
												"src": "13056:366:10"
											},
											{
												"body": {
													"nativeSrc": "13599:248:10",
													"nodeType": "YulBlock",
													"src": "13599:248:10",
													"statements": [
														{
															"nativeSrc": "13609:26:10",
															"nodeType": "YulAssignment",
															"src": "13609:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13621:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13632:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13632:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13617:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:10"
																},
																"nativeSrc": "13617:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13617:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13609:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13656:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13656:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13667:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13667:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13652:3:10"
																		},
																		"nativeSrc": "13652:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13652:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13675:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13675:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13681:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13681:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13671:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:10"
																		},
																		"nativeSrc": "13671:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13671:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13645:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13645:6:10"
																},
																"nativeSrc": "13645:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13645:47:10"
															},
															"nativeSrc": "13645:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13645:47:10"
														},
														{
															"nativeSrc": "13701:139:10",
															"nodeType": "YulAssignment",
															"src": "13701:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13835:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13835:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13709:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13709:124:10"
																},
																"nativeSrc": "13709:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13709:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13701:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13701:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13428:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13579:9:10",
														"nodeType": "YulTypedName",
														"src": "13579:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13594:4:10",
														"nodeType": "YulTypedName",
														"src": "13594:4:10",
														"type": ""
													}
												],
												"src": "13428:419:10"
											},
											{
												"body": {
													"nativeSrc": "13881:152:10",
													"nodeType": "YulBlock",
													"src": "13881:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13898:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13898:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13901:77:10",
																		"nodeType": "YulLiteral",
																		"src": "13901:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13891:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13891:6:10"
																},
																"nativeSrc": "13891:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13891:88:10"
															},
															"nativeSrc": "13891:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "13891:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13995:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13995:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13998:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13998:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13988:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13988:6:10"
																},
																"nativeSrc": "13988:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13988:15:10"
															},
															"nativeSrc": "13988:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13988:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14022:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14022:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14012:6:10"
																},
																"nativeSrc": "14012:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14012:15:10"
															},
															"nativeSrc": "14012:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14012:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13853:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "13853:180:10"
											},
											{
												"body": {
													"nativeSrc": "14083:147:10",
													"nodeType": "YulBlock",
													"src": "14083:147:10",
													"statements": [
														{
															"nativeSrc": "14093:25:10",
															"nodeType": "YulAssignment",
															"src": "14093:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14116:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14116:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14098:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14098:17:10"
																},
																"nativeSrc": "14098:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14098:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14093:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14093:1:10"
																}
															]
														},
														{
															"nativeSrc": "14127:25:10",
															"nodeType": "YulAssignment",
															"src": "14127:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14150:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14150:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14132:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14132:17:10"
																},
																"nativeSrc": "14132:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14132:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14127:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14127:1:10"
																}
															]
														},
														{
															"nativeSrc": "14161:16:10",
															"nodeType": "YulAssignment",
															"src": "14161:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14172:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14172:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14175:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14175:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14168:3:10"
																},
																"nativeSrc": "14168:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14168:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14161:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14161:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14201:22:10",
																"nodeType": "YulBlock",
																"src": "14201:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14203:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14203:16:10"
																			},
																			"nativeSrc": "14203:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14203:18:10"
																		},
																		"nativeSrc": "14203:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14203:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14193:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14193:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14196:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14190:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14190:2:10"
																},
																"nativeSrc": "14190:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14190:10:10"
															},
															"nativeSrc": "14187:36:10",
															"nodeType": "YulIf",
															"src": "14187:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14039:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14070:1:10",
														"nodeType": "YulTypedName",
														"src": "14070:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14073:1:10",
														"nodeType": "YulTypedName",
														"src": "14073:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14079:3:10",
														"nodeType": "YulTypedName",
														"src": "14079:3:10",
														"type": ""
													}
												],
												"src": "14039:191:10"
											},
											{
												"body": {
													"nativeSrc": "14264:152:10",
													"nodeType": "YulBlock",
													"src": "14264:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14281:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14281:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14284:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14284:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14274:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14274:6:10"
																},
																"nativeSrc": "14274:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14274:88:10"
															},
															"nativeSrc": "14274:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14274:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14378:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14378:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14381:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14381:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14371:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14371:6:10"
																},
																"nativeSrc": "14371:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14371:15:10"
															},
															"nativeSrc": "14371:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14371:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14402:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14402:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14405:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14405:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14395:6:10"
																},
																"nativeSrc": "14395:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14395:15:10"
															},
															"nativeSrc": "14395:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14395:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14236:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14236:180:10"
											},
											{
												"body": {
													"nativeSrc": "14470:362:10",
													"nodeType": "YulBlock",
													"src": "14470:362:10",
													"statements": [
														{
															"nativeSrc": "14480:25:10",
															"nodeType": "YulAssignment",
															"src": "14480:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14503:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14503:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14485:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14485:17:10"
																},
																"nativeSrc": "14485:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14485:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14480:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14480:1:10"
																}
															]
														},
														{
															"nativeSrc": "14514:25:10",
															"nodeType": "YulAssignment",
															"src": "14514:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14537:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14537:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14519:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14519:17:10"
																},
																"nativeSrc": "14519:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14519:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14514:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14514:1:10"
																}
															]
														},
														{
															"nativeSrc": "14548:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14548:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14571:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14571:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14574:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14574:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14567:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14567:3:10"
																},
																"nativeSrc": "14567:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14567:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14552:11:10",
																	"nodeType": "YulTypedName",
																	"src": "14552:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14585:41:10",
															"nodeType": "YulAssignment",
															"src": "14585:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14614:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14614:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14596:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14596:17:10"
																},
																"nativeSrc": "14596:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14596:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14585:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14585:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14803:22:10",
																"nodeType": "YulBlock",
																"src": "14803:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14805:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14805:16:10"
																			},
																			"nativeSrc": "14805:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14805:18:10"
																		},
																		"nativeSrc": "14805:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14805:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14736:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14736:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14729:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14729:6:10"
																				},
																				"nativeSrc": "14729:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14729:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14759:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14759:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14766:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "14766:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14775:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "14775:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14762:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14762:3:10"
																						},
																						"nativeSrc": "14762:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14762:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14756:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "14756:2:10"
																				},
																				"nativeSrc": "14756:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14756:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14709:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14709:2:10"
																		},
																		"nativeSrc": "14709:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14709:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14689:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14689:6:10"
																},
																"nativeSrc": "14689:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14689:113:10"
															},
															"nativeSrc": "14686:139:10",
															"nodeType": "YulIf",
															"src": "14686:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14422:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14453:1:10",
														"nodeType": "YulTypedName",
														"src": "14453:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14456:1:10",
														"nodeType": "YulTypedName",
														"src": "14456:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14462:7:10",
														"nodeType": "YulTypedName",
														"src": "14462:7:10",
														"type": ""
													}
												],
												"src": "14422:410:10"
											},
											{
												"body": {
													"nativeSrc": "14866:152:10",
													"nodeType": "YulBlock",
													"src": "14866:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14883:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14883:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14886:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14886:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14876:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14876:6:10"
																},
																"nativeSrc": "14876:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14876:88:10"
															},
															"nativeSrc": "14876:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14876:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14980:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14983:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14983:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14973:6:10"
																},
																"nativeSrc": "14973:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14973:15:10"
															},
															"nativeSrc": "14973:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14973:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15004:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15004:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15007:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15007:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14997:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14997:6:10"
																},
																"nativeSrc": "14997:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14997:15:10"
															},
															"nativeSrc": "14997:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14997:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14838:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14838:180:10"
											},
											{
												"body": {
													"nativeSrc": "15066:143:10",
													"nodeType": "YulBlock",
													"src": "15066:143:10",
													"statements": [
														{
															"nativeSrc": "15076:25:10",
															"nodeType": "YulAssignment",
															"src": "15076:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15099:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15099:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15081:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15081:17:10"
																},
																"nativeSrc": "15081:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15081:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15076:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15076:1:10"
																}
															]
														},
														{
															"nativeSrc": "15110:25:10",
															"nodeType": "YulAssignment",
															"src": "15110:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15133:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15133:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15115:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15115:17:10"
																},
																"nativeSrc": "15115:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15115:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15110:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15110:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15157:22:10",
																"nodeType": "YulBlock",
																"src": "15157:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15159:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15159:16:10"
																			},
																			"nativeSrc": "15159:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15159:18:10"
																		},
																		"nativeSrc": "15159:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15159:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15154:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15154:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15147:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15147:6:10"
																},
																"nativeSrc": "15147:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15147:9:10"
															},
															"nativeSrc": "15144:35:10",
															"nodeType": "YulIf",
															"src": "15144:35:10"
														},
														{
															"nativeSrc": "15189:14:10",
															"nodeType": "YulAssignment",
															"src": "15189:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15198:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15198:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15201:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15201:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15194:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15194:3:10"
																},
																"nativeSrc": "15194:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15194:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15189:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15189:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15024:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15055:1:10",
														"nodeType": "YulTypedName",
														"src": "15055:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15058:1:10",
														"nodeType": "YulTypedName",
														"src": "15058:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15064:1:10",
														"nodeType": "YulTypedName",
														"src": "15064:1:10",
														"type": ""
													}
												],
												"src": "15024:185:10"
											},
											{
												"body": {
													"nativeSrc": "15341:206:10",
													"nodeType": "YulBlock",
													"src": "15341:206:10",
													"statements": [
														{
															"nativeSrc": "15351:26:10",
															"nodeType": "YulAssignment",
															"src": "15351:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15363:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15363:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15374:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15374:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15359:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15359:3:10"
																},
																"nativeSrc": "15359:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15359:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15351:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15351:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15431:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15431:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15444:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15444:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15455:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15455:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15440:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15440:3:10"
																		},
																		"nativeSrc": "15440:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15440:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15387:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15387:43:10"
																},
																"nativeSrc": "15387:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15387:71:10"
															},
															"nativeSrc": "15387:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15387:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15512:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15512:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15525:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15525:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15536:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15536:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15521:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15521:3:10"
																		},
																		"nativeSrc": "15521:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15521:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15468:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15468:43:10"
																},
																"nativeSrc": "15468:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15468:72:10"
															},
															"nativeSrc": "15468:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15468:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15215:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15305:9:10",
														"nodeType": "YulTypedName",
														"src": "15305:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15317:6:10",
														"nodeType": "YulTypedName",
														"src": "15317:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15325:6:10",
														"nodeType": "YulTypedName",
														"src": "15325:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15336:4:10",
														"nodeType": "YulTypedName",
														"src": "15336:4:10",
														"type": ""
													}
												],
												"src": "15215:332:10"
											},
											{
												"body": {
													"nativeSrc": "15659:66:10",
													"nodeType": "YulBlock",
													"src": "15659:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15681:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15681:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15689:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15689:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15677:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15677:3:10"
																		},
																		"nativeSrc": "15677:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15677:14:10"
																	},
																	{
																		"hexValue": "417272617973206c656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "15693:24:10",
																		"nodeType": "YulLiteral",
																		"src": "15693:24:10",
																		"type": "",
																		"value": "Arrays length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15670:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15670:6:10"
																},
																"nativeSrc": "15670:48:10",
																"nodeType": "YulFunctionCall",
																"src": "15670:48:10"
															},
															"nativeSrc": "15670:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "15670:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
												"nativeSrc": "15553:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15651:6:10",
														"nodeType": "YulTypedName",
														"src": "15651:6:10",
														"type": ""
													}
												],
												"src": "15553:172:10"
											},
											{
												"body": {
													"nativeSrc": "15877:220:10",
													"nodeType": "YulBlock",
													"src": "15877:220:10",
													"statements": [
														{
															"nativeSrc": "15887:74:10",
															"nodeType": "YulAssignment",
															"src": "15887:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15953:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15953:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15958:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15958:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15894:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15894:58:10"
																},
																"nativeSrc": "15894:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15894:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15887:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15887:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16059:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16059:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
																	"nativeSrc": "15970:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15970:88:10"
																},
																"nativeSrc": "15970:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15970:93:10"
															},
															"nativeSrc": "15970:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15970:93:10"
														},
														{
															"nativeSrc": "16072:19:10",
															"nodeType": "YulAssignment",
															"src": "16072:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16083:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16083:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16088:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16088:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16079:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16079:3:10"
																},
																"nativeSrc": "16079:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16079:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16072:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16072:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15731:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15865:3:10",
														"nodeType": "YulTypedName",
														"src": "15865:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15873:3:10",
														"nodeType": "YulTypedName",
														"src": "15873:3:10",
														"type": ""
													}
												],
												"src": "15731:366:10"
											},
											{
												"body": {
													"nativeSrc": "16274:248:10",
													"nodeType": "YulBlock",
													"src": "16274:248:10",
													"statements": [
														{
															"nativeSrc": "16284:26:10",
															"nodeType": "YulAssignment",
															"src": "16284:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16296:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16296:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16307:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16307:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16292:3:10"
																},
																"nativeSrc": "16292:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16292:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16284:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16284:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16331:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16331:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16342:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16342:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16327:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16327:3:10"
																		},
																		"nativeSrc": "16327:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16327:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16350:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16350:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16356:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16356:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16346:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16346:3:10"
																		},
																		"nativeSrc": "16346:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16346:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16320:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16320:6:10"
																},
																"nativeSrc": "16320:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16320:47:10"
															},
															"nativeSrc": "16320:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16320:47:10"
														},
														{
															"nativeSrc": "16376:139:10",
															"nodeType": "YulAssignment",
															"src": "16376:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16510:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16510:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16384:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16384:124:10"
																},
																"nativeSrc": "16384:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16384:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16376:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16376:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16103:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16254:9:10",
														"nodeType": "YulTypedName",
														"src": "16254:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16269:4:10",
														"nodeType": "YulTypedName",
														"src": "16269:4:10",
														"type": ""
													}
												],
												"src": "16103:419:10"
											},
											{
												"body": {
													"nativeSrc": "16634:59:10",
													"nodeType": "YulBlock",
													"src": "16634:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16656:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16656:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16664:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16664:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16652:3:10"
																		},
																		"nativeSrc": "16652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16652:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "16668:17:10",
																		"nodeType": "YulLiteral",
																		"src": "16668:17:10",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16645:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16645:6:10"
																},
																"nativeSrc": "16645:41:10",
																"nodeType": "YulFunctionCall",
																"src": "16645:41:10"
															},
															"nativeSrc": "16645:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "16645:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "16528:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16626:6:10",
														"nodeType": "YulTypedName",
														"src": "16626:6:10",
														"type": ""
													}
												],
												"src": "16528:165:10"
											},
											{
												"body": {
													"nativeSrc": "16845:220:10",
													"nodeType": "YulBlock",
													"src": "16845:220:10",
													"statements": [
														{
															"nativeSrc": "16855:74:10",
															"nodeType": "YulAssignment",
															"src": "16855:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16921:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16921:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16926:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16926:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16862:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16862:58:10"
																},
																"nativeSrc": "16862:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16862:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16855:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16855:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17027:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17027:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "16938:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16938:88:10"
																},
																"nativeSrc": "16938:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16938:93:10"
															},
															"nativeSrc": "16938:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16938:93:10"
														},
														{
															"nativeSrc": "17040:19:10",
															"nodeType": "YulAssignment",
															"src": "17040:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17051:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17051:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17056:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17056:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17047:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17047:3:10"
																},
																"nativeSrc": "17047:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17047:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17040:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17040:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16699:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16833:3:10",
														"nodeType": "YulTypedName",
														"src": "16833:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16841:3:10",
														"nodeType": "YulTypedName",
														"src": "16841:3:10",
														"type": ""
													}
												],
												"src": "16699:366:10"
											},
											{
												"body": {
													"nativeSrc": "17242:248:10",
													"nodeType": "YulBlock",
													"src": "17242:248:10",
													"statements": [
														{
															"nativeSrc": "17252:26:10",
															"nodeType": "YulAssignment",
															"src": "17252:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17264:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17264:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17275:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17275:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17260:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17260:3:10"
																},
																"nativeSrc": "17260:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17260:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17252:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17252:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17299:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17299:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17310:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17310:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17295:3:10"
																		},
																		"nativeSrc": "17295:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17295:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17318:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17318:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17324:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17324:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17314:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17314:3:10"
																		},
																		"nativeSrc": "17314:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17314:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17288:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17288:6:10"
																},
																"nativeSrc": "17288:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17288:47:10"
															},
															"nativeSrc": "17288:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17288:47:10"
														},
														{
															"nativeSrc": "17344:139:10",
															"nodeType": "YulAssignment",
															"src": "17344:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17478:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17478:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17352:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17352:124:10"
																},
																"nativeSrc": "17352:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17352:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17344:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17344:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17071:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17222:9:10",
														"nodeType": "YulTypedName",
														"src": "17222:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17237:4:10",
														"nodeType": "YulTypedName",
														"src": "17237:4:10",
														"type": ""
													}
												],
												"src": "17071:419:10"
											},
											{
												"body": {
													"nativeSrc": "17602:65:10",
													"nodeType": "YulBlock",
													"src": "17602:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17624:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17624:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17632:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17632:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17620:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17620:3:10"
																		},
																		"nativeSrc": "17620:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17620:14:10"
																	},
																	{
																		"hexValue": "4e6f206469766964656e647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "17636:23:10",
																		"nodeType": "YulLiteral",
																		"src": "17636:23:10",
																		"type": "",
																		"value": "No dividends to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17613:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17613:6:10"
																},
																"nativeSrc": "17613:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17613:47:10"
															},
															"nativeSrc": "17613:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17613:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
												"nativeSrc": "17496:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17594:6:10",
														"nodeType": "YulTypedName",
														"src": "17594:6:10",
														"type": ""
													}
												],
												"src": "17496:171:10"
											},
											{
												"body": {
													"nativeSrc": "17819:220:10",
													"nodeType": "YulBlock",
													"src": "17819:220:10",
													"statements": [
														{
															"nativeSrc": "17829:74:10",
															"nodeType": "YulAssignment",
															"src": "17829:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17895:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17895:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17900:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17900:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17836:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17836:58:10"
																},
																"nativeSrc": "17836:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17836:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17829:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18001:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																	"nativeSrc": "17912:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17912:88:10"
																},
																"nativeSrc": "17912:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17912:93:10"
															},
															"nativeSrc": "17912:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17912:93:10"
														},
														{
															"nativeSrc": "18014:19:10",
															"nodeType": "YulAssignment",
															"src": "18014:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18025:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18025:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18030:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18030:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18021:3:10"
																},
																"nativeSrc": "18021:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18021:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18014:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17673:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17807:3:10",
														"nodeType": "YulTypedName",
														"src": "17807:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17815:3:10",
														"nodeType": "YulTypedName",
														"src": "17815:3:10",
														"type": ""
													}
												],
												"src": "17673:366:10"
											},
											{
												"body": {
													"nativeSrc": "18216:248:10",
													"nodeType": "YulBlock",
													"src": "18216:248:10",
													"statements": [
														{
															"nativeSrc": "18226:26:10",
															"nodeType": "YulAssignment",
															"src": "18226:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18238:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18238:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18249:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:10"
																},
																"nativeSrc": "18234:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18234:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18226:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18226:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18273:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18273:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18284:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18284:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18269:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18269:3:10"
																		},
																		"nativeSrc": "18269:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18269:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18292:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18292:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18298:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18298:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18288:3:10"
																		},
																		"nativeSrc": "18288:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18288:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18262:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18262:6:10"
																},
																"nativeSrc": "18262:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18262:47:10"
															},
															"nativeSrc": "18262:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18262:47:10"
														},
														{
															"nativeSrc": "18318:139:10",
															"nodeType": "YulAssignment",
															"src": "18318:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18452:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18452:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18326:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18326:124:10"
																},
																"nativeSrc": "18326:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18326:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18318:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18318:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18045:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18196:9:10",
														"nodeType": "YulTypedName",
														"src": "18196:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18211:4:10",
														"nodeType": "YulTypedName",
														"src": "18211:4:10",
														"type": ""
													}
												],
												"src": "18045:419:10"
											},
											{
												"body": {
													"nativeSrc": "18583:34:10",
													"nodeType": "YulBlock",
													"src": "18583:34:10",
													"statements": [
														{
															"nativeSrc": "18593:18:10",
															"nodeType": "YulAssignment",
															"src": "18593:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "18608:3:10",
																"nodeType": "YulIdentifier",
																"src": "18608:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18593:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "18593:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18470:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18555:3:10",
														"nodeType": "YulTypedName",
														"src": "18555:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18560:6:10",
														"nodeType": "YulTypedName",
														"src": "18560:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18571:11:10",
														"nodeType": "YulTypedName",
														"src": "18571:11:10",
														"type": ""
													}
												],
												"src": "18470:147:10"
											},
											{
												"body": {
													"nativeSrc": "18729:8:10",
													"nodeType": "YulBlock",
													"src": "18729:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "18623:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18721:6:10",
														"nodeType": "YulTypedName",
														"src": "18721:6:10",
														"type": ""
													}
												],
												"src": "18623:114:10"
											},
											{
												"body": {
													"nativeSrc": "18906:235:10",
													"nodeType": "YulBlock",
													"src": "18906:235:10",
													"statements": [
														{
															"nativeSrc": "18916:90:10",
															"nodeType": "YulAssignment",
															"src": "18916:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18999:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18999:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19004:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19004:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18923:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "18923:75:10"
																},
																"nativeSrc": "18923:83:10",
																"nodeType": "YulFunctionCall",
																"src": "18923:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18916:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18916:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19104:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19104:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "19015:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19015:88:10"
																},
																"nativeSrc": "19015:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19015:93:10"
															},
															"nativeSrc": "19015:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19015:93:10"
														},
														{
															"nativeSrc": "19117:18:10",
															"nodeType": "YulAssignment",
															"src": "19117:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19128:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19128:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19133:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19133:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19124:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19124:3:10"
																},
																"nativeSrc": "19124:11:10",
																"nodeType": "YulFunctionCall",
																"src": "19124:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19117:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19117:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18743:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18894:3:10",
														"nodeType": "YulTypedName",
														"src": "18894:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18902:3:10",
														"nodeType": "YulTypedName",
														"src": "18902:3:10",
														"type": ""
													}
												],
												"src": "18743:398:10"
											},
											{
												"body": {
													"nativeSrc": "19335:191:10",
													"nodeType": "YulBlock",
													"src": "19335:191:10",
													"statements": [
														{
															"nativeSrc": "19346:154:10",
															"nodeType": "YulAssignment",
															"src": "19346:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19496:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19496:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19353:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "19353:141:10"
																},
																"nativeSrc": "19353:147:10",
																"nodeType": "YulFunctionCall",
																"src": "19353:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19346:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19346:3:10"
																}
															]
														},
														{
															"nativeSrc": "19510:10:10",
															"nodeType": "YulAssignment",
															"src": "19510:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "19517:3:10",
																"nodeType": "YulIdentifier",
																"src": "19517:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19510:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19147:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19322:3:10",
														"nodeType": "YulTypedName",
														"src": "19322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19331:3:10",
														"nodeType": "YulTypedName",
														"src": "19331:3:10",
														"type": ""
													}
												],
												"src": "19147:379:10"
											},
											{
												"body": {
													"nativeSrc": "19638:62:10",
													"nodeType": "YulBlock",
													"src": "19638:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19660:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19660:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19668:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19656:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19656:3:10"
																		},
																		"nativeSrc": "19656:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19656:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420455448",
																		"kind": "string",
																		"nativeSrc": "19672:20:10",
																		"nodeType": "YulLiteral",
																		"src": "19672:20:10",
																		"type": "",
																		"value": "Failed to send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19649:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19649:6:10"
																},
																"nativeSrc": "19649:44:10",
																"nodeType": "YulFunctionCall",
																"src": "19649:44:10"
															},
															"nativeSrc": "19649:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "19649:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
												"nativeSrc": "19532:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19630:6:10",
														"nodeType": "YulTypedName",
														"src": "19630:6:10",
														"type": ""
													}
												],
												"src": "19532:168:10"
											},
											{
												"body": {
													"nativeSrc": "19852:220:10",
													"nodeType": "YulBlock",
													"src": "19852:220:10",
													"statements": [
														{
															"nativeSrc": "19862:74:10",
															"nodeType": "YulAssignment",
															"src": "19862:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19928:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19928:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19933:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19869:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19869:58:10"
																},
																"nativeSrc": "19869:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19869:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19862:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19862:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20034:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
																	"nativeSrc": "19945:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19945:88:10"
																},
																"nativeSrc": "19945:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19945:93:10"
															},
															"nativeSrc": "19945:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19945:93:10"
														},
														{
															"nativeSrc": "20047:19:10",
															"nodeType": "YulAssignment",
															"src": "20047:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20058:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20058:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20063:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20063:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20054:3:10"
																},
																"nativeSrc": "20054:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20054:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20047:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20047:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19706:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19840:3:10",
														"nodeType": "YulTypedName",
														"src": "19840:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19848:3:10",
														"nodeType": "YulTypedName",
														"src": "19848:3:10",
														"type": ""
													}
												],
												"src": "19706:366:10"
											},
											{
												"body": {
													"nativeSrc": "20249:248:10",
													"nodeType": "YulBlock",
													"src": "20249:248:10",
													"statements": [
														{
															"nativeSrc": "20259:26:10",
															"nodeType": "YulAssignment",
															"src": "20259:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20271:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20271:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20282:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20282:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20267:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20267:3:10"
																},
																"nativeSrc": "20267:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20267:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20259:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20259:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20306:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20306:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20317:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20317:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20302:3:10"
																		},
																		"nativeSrc": "20302:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20302:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20325:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20325:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20331:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20331:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20321:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20321:3:10"
																		},
																		"nativeSrc": "20321:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20321:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20295:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20295:6:10"
																},
																"nativeSrc": "20295:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20295:47:10"
															},
															"nativeSrc": "20295:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20295:47:10"
														},
														{
															"nativeSrc": "20351:139:10",
															"nodeType": "YulAssignment",
															"src": "20351:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20485:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20485:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20359:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20359:124:10"
																},
																"nativeSrc": "20359:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20359:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20351:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20351:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20078:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20229:9:10",
														"nodeType": "YulTypedName",
														"src": "20229:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20244:4:10",
														"nodeType": "YulTypedName",
														"src": "20244:4:10",
														"type": ""
													}
												],
												"src": "20078:419:10"
											},
											{
												"body": {
													"nativeSrc": "20657:288:10",
													"nodeType": "YulBlock",
													"src": "20657:288:10",
													"statements": [
														{
															"nativeSrc": "20667:26:10",
															"nodeType": "YulAssignment",
															"src": "20667:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20679:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20679:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20690:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20690:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20675:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20675:3:10"
																},
																"nativeSrc": "20675:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20675:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20667:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20667:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20747:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20747:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20760:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20760:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20771:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20771:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20756:3:10"
																		},
																		"nativeSrc": "20756:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20756:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20703:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20703:43:10"
																},
																"nativeSrc": "20703:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20703:71:10"
															},
															"nativeSrc": "20703:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20703:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20828:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20828:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20841:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20852:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20852:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20837:3:10"
																		},
																		"nativeSrc": "20837:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20837:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20784:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20784:43:10"
																},
																"nativeSrc": "20784:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20784:72:10"
															},
															"nativeSrc": "20784:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20784:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20910:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20910:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20923:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20923:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20934:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20934:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20919:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20919:3:10"
																		},
																		"nativeSrc": "20919:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20919:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20866:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20866:43:10"
																},
																"nativeSrc": "20866:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20866:72:10"
															},
															"nativeSrc": "20866:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20866:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20503:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20613:9:10",
														"nodeType": "YulTypedName",
														"src": "20613:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20625:6:10",
														"nodeType": "YulTypedName",
														"src": "20625:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20633:6:10",
														"nodeType": "YulTypedName",
														"src": "20633:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20641:6:10",
														"nodeType": "YulTypedName",
														"src": "20641:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20652:4:10",
														"nodeType": "YulTypedName",
														"src": "20652:4:10",
														"type": ""
													}
												],
												"src": "20503:442:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH sent for dividends\")\n\n    }\n\n    function abi_encode_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens issued\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Arrays length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"No dividends to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cc575f3560e01c80637dfb3383116100f65780639dc29fac11610094578063d9e63bb111610063578063d9e63bb114610662578063dd62ed3e1461068a578063f2fde38b146106c6578063fe4b84df146106ee576101cc565b80639dc29fac146105c0578063a9059cbb146105e8578063ad9e761114610624578063c7e772ed1461063a576101cc565b80638da5cb5b116100d05780638da5cb5b1461051a57806395d89b4114610544578063997664d71461056e578063998aa46514610598576101cc565b80637dfb33831461047a5780638284ce3e146104b65780638ad0aaef146104f2576101cc565b80632a11ced01161016e5780636264786c1161013d5780636264786c146103c457806368306e43146103ec57806370a0823114610428578063715018a614610464576101cc565b80632a11ced01461030c5780632eb21b2214610348578063313ce5671461037257806340c10f191461039c576101cc565b80630d8e6e2c116101aa5780630d8e6e2c1461026057806318160ddd1461028a578063213a852f146102b457806323b872dd146102d0576101cc565b806306fdde03146101d0578063095ea7b3146101fa5780630c55699c14610236575b5f5ffd5b3480156101db575f5ffd5b506101e4610716565b6040516101f19190611bf5565b60405180910390f35b348015610205575f5ffd5b50610220600480360381019061021b9190611cb3565b6107a6565b60405161022d9190611d0b565b60405180910390f35b348015610241575f5ffd5b5061024a6107c8565b6040516102579190611d33565b60405180910390f35b34801561026b575f5ffd5b506102746107ce565b6040516102819190611d33565b60405180910390f35b348015610295575f5ffd5b5061029e6107d7565b6040516102ab9190611d33565b60405180910390f35b6102ce60048036038101906102c99190611d4c565b6107e0565b005b3480156102db575f5ffd5b506102f660048036038101906102f19190611d77565b610af2565b6040516103039190611d0b565b60405180910390f35b348015610317575f5ffd5b50610332600480360381019061032d9190611dc7565b610b20565b60405161033f9190611e01565b60405180910390f35b348015610353575f5ffd5b5061035c610b5b565b6040516103699190611d33565b60405180910390f35b34801561037d575f5ffd5b50610386610b61565b6040516103939190611e35565b60405180910390f35b3480156103a7575f5ffd5b506103c260048036038101906103bd9190611cb3565b610b69565b005b3480156103cf575f5ffd5b506103ea60048036038101906103e5919061204e565b610b7f565b005b3480156103f7575f5ffd5b50610412600480360381019061040d9190611d4c565b610ce9565b60405161041f9190611d33565b60405180910390f35b348015610433575f5ffd5b5061044e60048036038101906104499190611d4c565b610cfe565b60405161045b9190611d33565b60405180910390f35b34801561046f575f5ffd5b50610478610d43565b005b348015610485575f5ffd5b506104a0600480360381019061049b9190611d4c565b610d56565b6040516104ad9190611d33565b60405180910390f35b3480156104c1575f5ffd5b506104dc60048036038101906104d79190611d4c565b610d6b565b6040516104e99190611d33565b60405180910390f35b3480156104fd575f5ffd5b5061051860048036038101906105139190611cb3565b610db1565b005b348015610525575f5ffd5b5061052e610ecd565b60405161053b9190611e01565b60405180910390f35b34801561054f575f5ffd5b50610558610ef5565b6040516105659190611bf5565b60405180910390f35b348015610579575f5ffd5b50610582610f85565b60405161058f9190611d33565b60405180910390f35b3480156105a3575f5ffd5b506105be60048036038101906105b99190611dc7565b610f8b565b005b3480156105cb575f5ffd5b506105e660048036038101906105e19190611cb3565b610f97565b005b3480156105f3575f5ffd5b5061060e60048036038101906106099190611cb3565b610fad565b60405161061b9190611d0b565b60405180910390f35b34801561062f575f5ffd5b50610638610fcf565b005b348015610645575f5ffd5b50610660600480360381019061065b9190611d4c565b610fe7565b005b34801561066d575f5ffd5b5061068860048036038101906106839190611dc7565b6111fa565b005b348015610695575f5ffd5b506106b060048036038101906106ab91906120c4565b611207565b6040516106bd9190611d33565b60405180910390f35b3480156106d1575f5ffd5b506106ec60048036038101906106e79190611d4c565b611289565b005b3480156106f9575f5ffd5b50610714600480360381019061070f9190611dc7565b61130d565b005b6060600380546107259061212f565b80601f01602080910402602001604051908101604052809291908181526020018280546107519061212f565b801561079c5780601f106107735761010080835404028352916020019161079c565b820191905f5260205f20905b81548152906001019060200180831161077f57829003601f168201915b5050505050905090565b5f5f6107b061131f565b90506107bd818585611326565b600191505092915050565b60065481565b5f600654905090565b5f600254905090565b6107e8611338565b5f341161082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906121a9565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610874573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089891906121db565b116108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90612250565b60405180910390fd5b3460095f8282546108e9919061229b565b9250508190555042600a819055505f8173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610941573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096591906121db565b90505f5f90505b600b80549050811015610ab4575f600b828154811061098e5761098d6122ce565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8473ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016109f29190611e01565b602060405180830381865afa158015610a0d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3191906121db565b90505f811115610aa557838134610a4891906122fb565b610a529190612369565b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a9d919061229b565b925050819055505b5050808060010191505061096c565b507f2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc56723523378713273442604051610ae6929190612399565b60405180910390a15050565b5f5f610afc61131f565b9050610b098582856113bf565b610b14858585611452565b60019150509392505050565b600b8181548110610b2f575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b5f6012905090565b610b71611338565b610b7b8282611542565b5050565b610b87611338565b8051825114610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc29061240a565b60405180910390fd5b5f5f90505b8251811015610ce4575f73ffffffffffffffffffffffffffffffffffffffff16838281518110610c0357610c026122ce565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890612472565b60405180910390fd5b818181518110610c7457610c736122ce565b5b602002602001015160075f858481518110610c9257610c916122ce565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508080600101915050610bd0565b505050565b6007602052805f5260405f205f915090505481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d4b611338565b610d545f6115c1565b565b6008602052805f5260405f205f915090505481565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610db9611338565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e90612472565b60405180910390fd5b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600b82908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f049061212f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f309061212f565b8015610f7b5780601f10610f5257610100808354040283529160200191610f7b565b820191905f5260205f20905b815481529060010190602001808311610f5e57829003601f168201915b5050505050905090565b60095481565b610f948161130d565b50565b610f9f611338565b610fa98282611684565b5050565b5f5f610fb761131f565b9050610fc4818585611452565b600191505092915050565b610fd7611338565b5f6009819055505f600a81905550565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811161106a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611061906124da565b60405180910390fd5b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110f8919061229b565b925050819055505f8273ffffffffffffffffffffffffffffffffffffffff168260405161112490612525565b5f6040518083038185875af1925050503d805f811461115e576040519150601f19603f3d011682016040523d82523d5f602084013e611163565b606091505b50509050806111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612583565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56836040516111ed9190611d33565b60405180910390a2505050565b6112043382611542565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611291611338565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611301575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112f89190611e01565b60405180910390fd5b61130a816115c1565b50565b611315611703565b8060068190555050565b5f33905090565b6113338383836001611743565b505050565b61134061131f565b73ffffffffffffffffffffffffffffffffffffffff1661135e610ecd565b73ffffffffffffffffffffffffffffffffffffffff16146113bd5761138161131f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113b49190611e01565b60405180910390fd5b565b5f6113ca8484611207565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561144c578181101561143d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611434939291906125a1565b60405180910390fd5b61144b84848484035f611743565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114c2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114b99190611e01565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611532575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115299190611e01565b60405180910390fd5b61153d838383611912565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115b2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115a99190611e01565b60405180910390fd5b6115bd5f8383611912565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116eb9190611e01565b60405180910390fd5b6116ff825f83611912565b5050565b61170b611b2b565b611741576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117b3575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117aa9190611e01565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611823575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161181a9190611e01565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561190c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119039190611d33565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611962578060025f828254611956919061229b565b92505081905550611a30565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156119eb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016119e2939291906125a1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a77578060025f8282540392505081905550611ac1565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b1e9190611d33565b60405180910390a3505050565b5f611b34611b49565b5f0160089054906101000a900460ff16905090565b5f5f611b53611b5c565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611bc782611b85565b611bd18185611b8f565b9350611be1818560208601611b9f565b611bea81611bad565b840191505092915050565b5f6020820190508181035f830152611c0d8184611bbd565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c4f82611c26565b9050919050565b611c5f81611c45565b8114611c69575f5ffd5b50565b5f81359050611c7a81611c56565b92915050565b5f819050919050565b611c9281611c80565b8114611c9c575f5ffd5b50565b5f81359050611cad81611c89565b92915050565b5f5f60408385031215611cc957611cc8611c1e565b5b5f611cd685828601611c6c565b9250506020611ce785828601611c9f565b9150509250929050565b5f8115159050919050565b611d0581611cf1565b82525050565b5f602082019050611d1e5f830184611cfc565b92915050565b611d2d81611c80565b82525050565b5f602082019050611d465f830184611d24565b92915050565b5f60208284031215611d6157611d60611c1e565b5b5f611d6e84828501611c6c565b91505092915050565b5f5f5f60608486031215611d8e57611d8d611c1e565b5b5f611d9b86828701611c6c565b9350506020611dac86828701611c6c565b9250506040611dbd86828701611c9f565b9150509250925092565b5f60208284031215611ddc57611ddb611c1e565b5b5f611de984828501611c9f565b91505092915050565b611dfb81611c45565b82525050565b5f602082019050611e145f830184611df2565b92915050565b5f60ff82169050919050565b611e2f81611e1a565b82525050565b5f602082019050611e485f830184611e26565b92915050565b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e8882611bad565b810181811067ffffffffffffffff82111715611ea757611ea6611e52565b5b80604052505050565b5f611eb9611c15565b9050611ec58282611e7f565b919050565b5f67ffffffffffffffff821115611ee457611ee3611e52565b5b602082029050602081019050919050565b5f5ffd5b5f611f0b611f0684611eca565b611eb0565b90508083825260208201905060208402830185811115611f2e57611f2d611ef5565b5b835b81811015611f575780611f438882611c6c565b845260208401935050602081019050611f30565b5050509392505050565b5f82601f830112611f7557611f74611e4e565b5b8135611f85848260208601611ef9565b91505092915050565b5f67ffffffffffffffff821115611fa857611fa7611e52565b5b602082029050602081019050919050565b5f611fcb611fc684611f8e565b611eb0565b90508083825260208201905060208402830185811115611fee57611fed611ef5565b5b835b8181101561201757806120038882611c9f565b845260208401935050602081019050611ff0565b5050509392505050565b5f82601f83011261203557612034611e4e565b5b8135612045848260208601611fb9565b91505092915050565b5f5f6040838503121561206457612063611c1e565b5b5f83013567ffffffffffffffff81111561208157612080611c22565b5b61208d85828601611f61565b925050602083013567ffffffffffffffff8111156120ae576120ad611c22565b5b6120ba85828601612021565b9150509250929050565b5f5f604083850312156120da576120d9611c1e565b5b5f6120e785828601611c6c565b92505060206120f885828601611c6c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061214657607f821691505b60208210810361215957612158612102565b5b50919050565b7f4e6f204554482073656e7420666f72206469766964656e6473000000000000005f82015250565b5f612193601983611b8f565b915061219e8261215f565b602082019050919050565b5f6020820190508181035f8301526121c081612187565b9050919050565b5f815190506121d581611c89565b92915050565b5f602082840312156121f0576121ef611c1e565b5b5f6121fd848285016121c7565b91505092915050565b7f4e6f20746f6b656e7320697373756564000000000000000000000000000000005f82015250565b5f61223a601083611b8f565b915061224582612206565b602082019050919050565b5f6020820190508181035f8301526122678161222e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a582611c80565b91506122b083611c80565b92508282019050808211156122c8576122c761226e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61230582611c80565b915061231083611c80565b925082820261231e81611c80565b915082820484148315176123355761233461226e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61237382611c80565b915061237e83611c80565b92508261238e5761238d61233c565b5b828204905092915050565b5f6040820190506123ac5f830185611d24565b6123b96020830184611d24565b9392505050565b7f417272617973206c656e677468206d69736d61746368000000000000000000005f82015250565b5f6123f4601683611b8f565b91506123ff826123c0565b602082019050919050565b5f6020820190508181035f830152612421816123e8565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61245c600f83611b8f565b915061246782612428565b602082019050919050565b5f6020820190508181035f83015261248981612450565b9050919050565b7f4e6f206469766964656e647320746f20636c61696d00000000000000000000005f82015250565b5f6124c4601583611b8f565b91506124cf82612490565b602082019050919050565b5f6020820190508181035f8301526124f1816124b8565b9050919050565b5f81905092915050565b50565b5f6125105f836124f8565b915061251b82612502565b5f82019050919050565b5f61252f82612505565b9150819050919050565b7f4661696c656420746f2073656e642045544800000000000000000000000000005f82015250565b5f61256d601283611b8f565b915061257882612539565b602082019050919050565b5f6020820190508181035f83015261259a81612561565b9050919050565b5f6060820190506125b45f830186611df2565b6125c16020830185611d24565b6125ce6040830184611d24565b94935050505056fea2646970667358221220ef73d2a01161a355df3368b44f3400223085337db85082a6ac64f70f0910c54c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DFB3383 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xD9E63BB1 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD9E63BB1 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x6EE JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xAD9E7611 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xC7E772ED EQ PUSH2 0x63A JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x998AA465 EQ PUSH2 0x598 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x7DFB3383 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8284CE3E EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x8AD0AAEF EQ PUSH2 0x4F2 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2A11CED0 GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x6264786C GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x6264786C EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x68306E43 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x464 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2A11CED0 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x2EB21B22 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x39C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0xD8E6E2C GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x213A852F EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xD43 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52E PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x558 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x582 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0xFCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0xFE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x688 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1289 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x714 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x725 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x773 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7B0 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0x7BD DUP2 DUP6 DUP6 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x1338 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST GT PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x941 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0xB DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAB4 JUMPI PUSH0 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98E JUMPI PUSH2 0x98D PUSH2 0x22CE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI DUP4 DUP2 CALLVALUE PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96C JUMP JUMPDEST POP PUSH32 0x2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFC PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0xB09 DUP6 DUP3 DUP6 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0xB14 DUP6 DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xB7B DUP3 DUP3 PUSH2 0x1542 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB87 PUSH2 0x1338 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCE4 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x22CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xD54 PUSH0 PUSH2 0x15C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF04 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF30 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF52 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF94 DUP2 PUSH2 0x130D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0x1338 JUMP JUMPDEST PUSH2 0xFA9 DUP3 DUP3 PUSH2 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFB7 PUSH2 0x131F JUMP JUMPDEST SWAP1 POP PUSH2 0xFC4 DUP2 DUP6 DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFD7 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1061 SWAP1 PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP1 PUSH2 0x2525 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x115E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1204 CALLER DUP3 PUSH2 0x1542 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1291 PUSH2 0x1338 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1301 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F8 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130A DUP2 PUSH2 0x15C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1315 PUSH2 0x1703 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1333 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x131F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x135E PUSH2 0xECD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13BD JUMPI PUSH2 0x1381 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x13CA DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x144C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x143D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x144B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1532 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153D DUP4 DUP4 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BD PUSH0 DUP4 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16FF DUP3 PUSH0 DUP4 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x170B PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1741 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AA SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1823 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181A SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x190C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1903 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1962 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1956 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A30 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19EB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A77 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AC1 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B1E SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 PUSH2 0x1B49 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1B53 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 DUP3 PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x1BD1 DUP2 DUP6 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1BE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x1BAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0D DUP2 DUP5 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4F DUP3 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5F DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C69 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C92 DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAD DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D05 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2D DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D46 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D60 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6E DUP5 DUP3 DUP6 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9B DUP7 DUP3 DUP8 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DAC DUP7 DUP3 DUP8 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DBD DUP7 DUP3 DUP8 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFB DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E14 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2F DUP2 PUSH2 0x1E1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E88 DUP3 PUSH2 0x1BAD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB9 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC5 DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0B PUSH2 0x1F06 DUP5 PUSH2 0x1ECA JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F2E JUMPI PUSH2 0x1F2D PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F57 JUMPI DUP1 PUSH2 0x1F43 DUP9 DUP3 PUSH2 0x1C6C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F30 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F85 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x1E52 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCB PUSH2 0x1FC6 DUP5 PUSH2 0x1F8E JUMP JUMPDEST PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FEE JUMPI PUSH2 0x1FED PUSH2 0x1EF5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2017 JUMPI DUP1 PUSH2 0x2003 DUP9 DUP3 PUSH2 0x1C9F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1E4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2045 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2063 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x208D DUP6 DUP3 DUP7 ADD PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP6 DUP3 DUP7 ADD PUSH2 0x2021 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2146 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204554482073656E7420666F72206469766964656E647300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 PUSH1 0x19 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C0 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D5 DUP2 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x1C1E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E732069737375656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223A PUSH1 0x10 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP3 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A5 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B0 DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22C8 JUMPI PUSH2 0x22C7 PUSH2 0x226E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2305 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x231E DUP2 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x226E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2373 DUP3 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP PUSH2 0x237E DUP4 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x238E JUMPI PUSH2 0x238D PUSH2 0x233C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x23B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23F4 PUSH1 0x16 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x23FF DUP3 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2421 DUP2 PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x245C PUSH1 0xF DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2467 DUP3 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2489 DUP2 PUSH2 0x2450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206469766964656E647320746F20636C61696D0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C4 PUSH1 0x15 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x24CF DUP3 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F1 DUP2 PUSH2 0x24B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2510 PUSH0 DUP4 PUSH2 0x24F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x251B DUP3 PUSH2 0x2502 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x252F DUP3 PUSH2 0x2505 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204554480000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x256D PUSH1 0x12 DUP4 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP3 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x259A DUP2 PUSH2 0x2561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF PUSH20 0xD2A01161A355DF3368B44F3400223085337DB850 DUP3 0xA6 0xAC PUSH5 0xF70F0910C5 0x4C PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "214:552:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;509:16:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:85:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1573:1142:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4757:244:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:24:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:95:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1098:362:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;272:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;325:51:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3399:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:29:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;553:90:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;977:99:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;695:123:7;;;;;;;;;;;;;:::i;:::-;;2744:617;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;623:107:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3532:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:81:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;509:16:8:-;;;;:::o;651:85:9:-;693:7;719:9;;712:16;;651:85;:::o;2830:97:3:-;2882:7;2908:12;;2901:19;;2830:97;:::o;1573:1142:7:-;1531:13:1;:11;:13::i;:::-;1724:1:7::1;1712:9;:13;1704:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1847:1;1824:5;1817:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;1809:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1940:9;1922:14;;:27;;;;;;;:::i;:::-;;;;;;;;1984:15;1960:21;:39;;;;2078:19;2107:5;2100:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2078:49;;2221:9;2233:1;2221:13;;2216:427;2240:7;:14;;;;2236:1;:18;2216:427;;;2313:14;2330:7;2338:1;2330:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2313:27;;2401:15;2426:5;2419:23;;;2443:6;2419:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2401:49;;2479:1;2469:7;:11;2465:167;;;2605:11;2594:7;2582:9;:19;;;;:::i;:::-;2581:35;;;;:::i;:::-;2560:9;:17;2570:6;2560:17;;;;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;;;;;;;;2465:167;2261:382;;2256:3;;;;;;;2216:427;;;;2660:47;2680:9;2691:15;2660:47;;;;;;;:::i;:::-;;;;;;;;1644:1071;1573:1142:::0;:::o;4757:244:3:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;464:24:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;419:36::-;;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;874:95:8:-;1531:13:1;:11;:13::i;:::-;944:17:8::1;950:2;954:6;944:5;:17::i;:::-;874:95:::0;;:::o;1098:362:7:-;1531:13:1;:11;:13::i;:::-;1234:7:7::1;:14;1218:5;:12;:30;1210:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1291:9;1303:1;1291:13;;1286:167;1310:5;:12;1306:1;:16;1286:167;;;1372:1;1352:22;;:5;1358:1;1352:8;;;;;;;;:::i;:::-;;;;;;;;:22;;::::0;1344:50:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1431:7;1439:1;1431:10;;;;;;;;:::i;:::-;;;;;;;;1409:9;:19;1419:5;1425:1;1419:8;;;;;;;;:::i;:::-;;;;;;;;1409:19;;;;;;;;;;;;;;;:32;;;;1324:3;;;;;;;1286:167;;;;1098:362:::0;;:::o;272:44::-;;;;;;;;;;;;;;;;;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;325:51:7:-;;;;;;;;;;;;;;;;;:::o;3399:118::-;3467:7;3494:9;:15;3504:4;3494:15;;;;;;;;;;;;;;;;3487:22;;3399:118;;;:::o;853:204::-;1531:13:1;:11;:13::i;:::-;963:1:7::1;947:18;;:4;:18;;::::0;939:46:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1014:6;996:9;:15;1006:4;996:15;;;;;;;;;;;;;;;:24;;;;1031:7;1044:4;1031:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:204:::0;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;383:29:7:-;;;;:::o;553:90:9:-;613:22;632:2;613:18;:22::i;:::-;553:90;:::o;977:99:8:-;1531:13:1;:11;:13::i;:::-;1049:19:8::1;1055:4;1061:6;1049:5;:19::i;:::-;977:99:::0;;:::o;3296:178:3:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;695:123:7:-;1531:13:1;:11;:13::i;:::-;773:1:7::1;756:14;:18;;;;809:1;785:21;:25;;;;695:123::o:0;2744:617::-;2854:14;2871:9;:15;2881:4;2871:15;;;;;;;;;;;;;;;;2854:32;;2914:1;2905:6;:10;2897:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3031:1;3013:9;:15;3023:4;3013:15;;;;;;;;;;;;;;;:19;;;;3124:6;3098:16;:22;3115:4;3098:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;3217:9;3232:4;:9;;3249:6;3232:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216:44;;;3279:4;3271:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;3340:4;3324:29;;;3346:6;3324:29;;;;;;:::i;:::-;;;;;;;;2791:570;;2744:617;:::o;623:107:8:-;690:32;696:10;708:13;690:5;:32::i;:::-;623:107;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;534:81:8:-;6929:20:0;:18;:20::i;:::-;605:2:8::1;601:1;:6;;;;534:81:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10396:476:3:-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:3:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;7082:141:0:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;9682:432:3:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;8485:120:0:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;9071:205::-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:329::-;4710:6;4759:2;4747:9;4738:7;4734:23;4730:32;4727:119;;;4765:79;;:::i;:::-;4727:119;4885:1;4910:53;4955:7;4946:6;4935:9;4931:22;4910:53;:::i;:::-;4900:63;;4856:117;4651:329;;;;:::o;4986:118::-;5073:24;5091:5;5073:24;:::i;:::-;5068:3;5061:37;4986:118;;:::o;5110:222::-;5203:4;5241:2;5230:9;5226:18;5218:26;;5254:71;5322:1;5311:9;5307:17;5298:6;5254:71;:::i;:::-;5110:222;;;;:::o;5338:86::-;5373:7;5413:4;5406:5;5402:16;5391:27;;5338:86;;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:214::-;5637:4;5675:2;5664:9;5660:18;5652:26;;5688:67;5752:1;5741:9;5737:17;5728:6;5688:67;:::i;:::-;5548:214;;;;:::o;5768:117::-;5877:1;5874;5867:12;5891:180;5939:77;5936:1;5929:88;6036:4;6033:1;6026:15;6060:4;6057:1;6050:15;6077:281;6160:27;6182:4;6160:27;:::i;:::-;6152:6;6148:40;6290:6;6278:10;6275:22;6254:18;6242:10;6239:34;6236:62;6233:88;;;6301:18;;:::i;:::-;6233:88;6341:10;6337:2;6330:22;6120:238;6077:281;;:::o;6364:129::-;6398:6;6425:20;;:::i;:::-;6415:30;;6454:33;6482:4;6474:6;6454:33;:::i;:::-;6364:129;;;:::o;6499:311::-;6576:4;6666:18;6658:6;6655:30;6652:56;;;6688:18;;:::i;:::-;6652:56;6738:4;6730:6;6726:17;6718:25;;6798:4;6792;6788:15;6780:23;;6499:311;;;:::o;6816:117::-;6925:1;6922;6915:12;6956:710;7052:5;7077:81;7093:64;7150:6;7093:64;:::i;:::-;7077:81;:::i;:::-;7068:90;;7178:5;7207:6;7200:5;7193:21;7241:4;7234:5;7230:16;7223:23;;7294:4;7286:6;7282:17;7274:6;7270:30;7323:3;7315:6;7312:15;7309:122;;;7342:79;;:::i;:::-;7309:122;7457:6;7440:220;7474:6;7469:3;7466:15;7440:220;;;7549:3;7578:37;7611:3;7599:10;7578:37;:::i;:::-;7573:3;7566:50;7645:4;7640:3;7636:14;7629:21;;7516:144;7500:4;7495:3;7491:14;7484:21;;7440:220;;;7444:21;7058:608;;6956:710;;;;;:::o;7689:370::-;7760:5;7809:3;7802:4;7794:6;7790:17;7786:27;7776:122;;7817:79;;:::i;:::-;7776:122;7934:6;7921:20;7959:94;8049:3;8041:6;8034:4;8026:6;8022:17;7959:94;:::i;:::-;7950:103;;7766:293;7689:370;;;;:::o;8065:311::-;8142:4;8232:18;8224:6;8221:30;8218:56;;;8254:18;;:::i;:::-;8218:56;8304:4;8296:6;8292:17;8284:25;;8364:4;8358;8354:15;8346:23;;8065:311;;;:::o;8399:710::-;8495:5;8520:81;8536:64;8593:6;8536:64;:::i;:::-;8520:81;:::i;:::-;8511:90;;8621:5;8650:6;8643:5;8636:21;8684:4;8677:5;8673:16;8666:23;;8737:4;8729:6;8725:17;8717:6;8713:30;8766:3;8758:6;8755:15;8752:122;;;8785:79;;:::i;:::-;8752:122;8900:6;8883:220;8917:6;8912:3;8909:15;8883:220;;;8992:3;9021:37;9054:3;9042:10;9021:37;:::i;:::-;9016:3;9009:50;9088:4;9083:3;9079:14;9072:21;;8959:144;8943:4;8938:3;8934:14;8927:21;;8883:220;;;8887:21;8501:608;;8399:710;;;;;:::o;9132:370::-;9203:5;9252:3;9245:4;9237:6;9233:17;9229:27;9219:122;;9260:79;;:::i;:::-;9219:122;9377:6;9364:20;9402:94;9492:3;9484:6;9477:4;9469:6;9465:17;9402:94;:::i;:::-;9393:103;;9209:293;9132:370;;;;:::o;9508:894::-;9626:6;9634;9683:2;9671:9;9662:7;9658:23;9654:32;9651:119;;;9689:79;;:::i;:::-;9651:119;9837:1;9826:9;9822:17;9809:31;9867:18;9859:6;9856:30;9853:117;;;9889:79;;:::i;:::-;9853:117;9994:78;10064:7;10055:6;10044:9;10040:22;9994:78;:::i;:::-;9984:88;;9780:302;10149:2;10138:9;10134:18;10121:32;10180:18;10172:6;10169:30;10166:117;;;10202:79;;:::i;:::-;10166:117;10307:78;10377:7;10368:6;10357:9;10353:22;10307:78;:::i;:::-;10297:88;;10092:303;9508:894;;;;;:::o;10408:474::-;10476:6;10484;10533:2;10521:9;10512:7;10508:23;10504:32;10501:119;;;10539:79;;:::i;:::-;10501:119;10659:1;10684:53;10729:7;10720:6;10709:9;10705:22;10684:53;:::i;:::-;10674:63;;10630:117;10786:2;10812:53;10857:7;10848:6;10837:9;10833:22;10812:53;:::i;:::-;10802:63;;10757:118;10408:474;;;;;:::o;10888:180::-;10936:77;10933:1;10926:88;11033:4;11030:1;11023:15;11057:4;11054:1;11047:15;11074:320;11118:6;11155:1;11149:4;11145:12;11135:22;;11202:1;11196:4;11192:12;11223:18;11213:81;;11279:4;11271:6;11267:17;11257:27;;11213:81;11341:2;11333:6;11330:14;11310:18;11307:38;11304:84;;11360:18;;:::i;:::-;11304:84;11125:269;11074:320;;;:::o;11400:175::-;11540:27;11536:1;11528:6;11524:14;11517:51;11400:175;:::o;11581:366::-;11723:3;11744:67;11808:2;11803:3;11744:67;:::i;:::-;11737:74;;11820:93;11909:3;11820:93;:::i;:::-;11938:2;11933:3;11929:12;11922:19;;11581:366;;;:::o;11953:419::-;12119:4;12157:2;12146:9;12142:18;12134:26;;12206:9;12200:4;12196:20;12192:1;12181:9;12177:17;12170:47;12234:131;12360:4;12234:131;:::i;:::-;12226:139;;11953:419;;;:::o;12378:143::-;12435:5;12466:6;12460:13;12451:22;;12482:33;12509:5;12482:33;:::i;:::-;12378:143;;;;:::o;12527:351::-;12597:6;12646:2;12634:9;12625:7;12621:23;12617:32;12614:119;;;12652:79;;:::i;:::-;12614:119;12772:1;12797:64;12853:7;12844:6;12833:9;12829:22;12797:64;:::i;:::-;12787:74;;12743:128;12527:351;;;;:::o;12884:166::-;13024:18;13020:1;13012:6;13008:14;13001:42;12884:166;:::o;13056:366::-;13198:3;13219:67;13283:2;13278:3;13219:67;:::i;:::-;13212:74;;13295:93;13384:3;13295:93;:::i;:::-;13413:2;13408:3;13404:12;13397:19;;13056:366;;;:::o;13428:419::-;13594:4;13632:2;13621:9;13617:18;13609:26;;13681:9;13675:4;13671:20;13667:1;13656:9;13652:17;13645:47;13709:131;13835:4;13709:131;:::i;:::-;13701:139;;13428:419;;;:::o;13853:180::-;13901:77;13898:1;13891:88;13998:4;13995:1;13988:15;14022:4;14019:1;14012:15;14039:191;14079:3;14098:20;14116:1;14098:20;:::i;:::-;14093:25;;14132:20;14150:1;14132:20;:::i;:::-;14127:25;;14175:1;14172;14168:9;14161:16;;14196:3;14193:1;14190:10;14187:36;;;14203:18;;:::i;:::-;14187:36;14039:191;;;;:::o;14236:180::-;14284:77;14281:1;14274:88;14381:4;14378:1;14371:15;14405:4;14402:1;14395:15;14422:410;14462:7;14485:20;14503:1;14485:20;:::i;:::-;14480:25;;14519:20;14537:1;14519:20;:::i;:::-;14514:25;;14574:1;14571;14567:9;14596:30;14614:11;14596:30;:::i;:::-;14585:41;;14775:1;14766:7;14762:15;14759:1;14756:22;14736:1;14729:9;14709:83;14686:139;;14805:18;;:::i;:::-;14686:139;14470:362;14422:410;;;;:::o;14838:180::-;14886:77;14883:1;14876:88;14983:4;14980:1;14973:15;15007:4;15004:1;14997:15;15024:185;15064:1;15081:20;15099:1;15081:20;:::i;:::-;15076:25;;15115:20;15133:1;15115:20;:::i;:::-;15110:25;;15154:1;15144:35;;15159:18;;:::i;:::-;15144:35;15201:1;15198;15194:9;15189:14;;15024:185;;;;:::o;15215:332::-;15336:4;15374:2;15363:9;15359:18;15351:26;;15387:71;15455:1;15444:9;15440:17;15431:6;15387:71;:::i;:::-;15468:72;15536:2;15525:9;15521:18;15512:6;15468:72;:::i;:::-;15215:332;;;;;:::o;15553:172::-;15693:24;15689:1;15681:6;15677:14;15670:48;15553:172;:::o;15731:366::-;15873:3;15894:67;15958:2;15953:3;15894:67;:::i;:::-;15887:74;;15970:93;16059:3;15970:93;:::i;:::-;16088:2;16083:3;16079:12;16072:19;;15731:366;;;:::o;16103:419::-;16269:4;16307:2;16296:9;16292:18;16284:26;;16356:9;16350:4;16346:20;16342:1;16331:9;16327:17;16320:47;16384:131;16510:4;16384:131;:::i;:::-;16376:139;;16103:419;;;:::o;16528:165::-;16668:17;16664:1;16656:6;16652:14;16645:41;16528:165;:::o;16699:366::-;16841:3;16862:67;16926:2;16921:3;16862:67;:::i;:::-;16855:74;;16938:93;17027:3;16938:93;:::i;:::-;17056:2;17051:3;17047:12;17040:19;;16699:366;;;:::o;17071:419::-;17237:4;17275:2;17264:9;17260:18;17252:26;;17324:9;17318:4;17314:20;17310:1;17299:9;17295:17;17288:47;17352:131;17478:4;17352:131;:::i;:::-;17344:139;;17071:419;;;:::o;17496:171::-;17636:23;17632:1;17624:6;17620:14;17613:47;17496:171;:::o;17673:366::-;17815:3;17836:67;17900:2;17895:3;17836:67;:::i;:::-;17829:74;;17912:93;18001:3;17912:93;:::i;:::-;18030:2;18025:3;18021:12;18014:19;;17673:366;;;:::o;18045:419::-;18211:4;18249:2;18238:9;18234:18;18226:26;;18298:9;18292:4;18288:20;18284:1;18273:9;18269:17;18262:47;18326:131;18452:4;18326:131;:::i;:::-;18318:139;;18045:419;;;:::o;18470:147::-;18571:11;18608:3;18593:18;;18470:147;;;;:::o;18623:114::-;;:::o;18743:398::-;18902:3;18923:83;19004:1;18999:3;18923:83;:::i;:::-;18916:90;;19015:93;19104:3;19015:93;:::i;:::-;19133:1;19128:3;19124:11;19117:18;;18743:398;;;:::o;19147:379::-;19331:3;19353:147;19496:3;19353:147;:::i;:::-;19346:154;;19517:3;19510:10;;19147:379;;;:::o;19532:168::-;19672:20;19668:1;19660:6;19656:14;19649:44;19532:168;:::o;19706:366::-;19848:3;19869:67;19933:2;19928:3;19869:67;:::i;:::-;19862:74;;19945:93;20034:3;19945:93;:::i;:::-;20063:2;20058:3;20054:12;20047:19;;19706:366;;;:::o;20078:419::-;20244:4;20282:2;20271:9;20267:18;20259:26;;20331:9;20325:4;20321:20;20317:1;20306:9;20302:17;20295:47;20359:131;20485:4;20359:131;:::i;:::-;20351:139;;20078:419;;;:::o;20503:442::-;20652:4;20690:2;20679:9;20675:18;20667:26;;20703:71;20771:1;20760:9;20756:17;20747:6;20703:71;:::i;:::-;20784:72;20852:2;20841:9;20837:18;20828:6;20784:72;:::i;:::-;20866;20934:2;20923:9;20919:18;20910:6;20866:72;:::i;:::-;20503:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1948000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBatchDividendsUsers(address[],uint256[])": "infinite",
								"addDividendsUser(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"burn(address,uint256)": "infinite",
								"claimDividends(address)": "infinite",
								"claimedDividends(address)": "2848",
								"decimals()": "428",
								"distributeDividends(address)": "infinite",
								"dividends(address)": "2869",
								"getClaimableDividends(address)": "2897",
								"getVersion()": "2478",
								"holders(uint256)": "4990",
								"initialize(uint256)": "24976",
								"initializeDividends()": "infinite",
								"initializeSupply(uint256)": "infinite",
								"lastDividendTimestamp()": "2493",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalDividends()": "2514",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateContractStatus(uint256)": "25006",
								"x()": "2516"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 836,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 214,
									"end": 766,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 214,
									"end": 766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 766,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef73d2a01161a355df3368b44f3400223085337db85082a6ac64f70f0910c54c64736f6c634300081e0033",
									".code": [
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "7DFB3383"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "D9E63BB1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "D9E63BB1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "FE4B84DF"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "AD9E7611"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "C7E772ED"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "997664D7"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "998AA465"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "7DFB3383"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "8284CE3E"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "8AD0AAEF"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "2A11CED0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "6264786C"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "6264786C"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "68306E43"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "2A11CED0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "2EB21B22"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "D8E6E2C"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "D8E6E2C"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "213A852F"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "C55699C"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 766,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 651,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 651,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 651,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1573,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1573,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 464,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 464,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 419,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 419,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1098,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1098,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 272,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 272,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 272,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 325,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 325,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 325,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3399,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3399,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3399,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 853,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 853,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 553,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 553,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 553,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 695,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 695,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2744,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2744,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 651,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 651,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 728,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 719,
											"end": 728,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 712,
											"end": 728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 712,
											"end": 728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 651,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1721,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1725,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1704,
											"end": 1755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1704,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1817,
											"end": 1844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1817,
											"end": 1844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1848,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1809,
											"end": 1869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1809,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1949,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1922,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1922,
											"end": 1949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1999,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1960,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2100,
											"end": 2125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2100,
											"end": 2127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2100,
											"end": 2127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2240,
											"end": 2254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2254,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2254,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2338,
											"end": 2339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2330,
											"end": 2340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2443,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2419,
											"end": 2450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2419,
											"end": 2450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2419,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2480,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2632,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2465,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2591,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2582,
											"end": 2601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2582,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2581,
											"end": 2616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2581,
											"end": 2616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2576,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2560,
											"end": 2616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2465,
											"end": 2632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327"
										},
										{
											"begin": 2680,
											"end": 2689,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2706,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2660,
											"end": 2707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2707,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 2715,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 2715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 464,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 419,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 419,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 969,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 874,
											"end": 969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 950,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 954,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 944,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 944,
											"end": 961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 944,
											"end": 961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1230,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1248,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1210,
											"end": 1275,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1210,
											"end": 1275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1315,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1322,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1372,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1357,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1352,
											"end": 1360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1344,
											"end": 1394,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1344,
											"end": 1394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1431,
											"end": 1441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1419,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1427,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1428,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 272,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 376,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 947,
											"end": 951,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 947,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 947,
											"end": 965,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 939,
											"end": 985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 939,
											"end": 985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1010,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1011,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1044,
											"end": 1048,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 1057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 553,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 613,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 632,
											"end": 634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 613,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 613,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 613,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 613,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 1055,
											"end": 1059,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1049,
											"end": 1068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 1049,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 695,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 695,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 756,
											"end": 774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 756,
											"end": 774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 756,
											"end": 774,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 756,
											"end": 774,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 809,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 785,
											"end": 810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 785,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 810,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 695,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2886,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2915,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2897,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3027,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3098,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3232,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3271,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3271,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56"
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3324,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 3361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 623,
											"end": 730,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 623,
											"end": 730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 690,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 708,
											"end": 721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 690,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 690,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 623,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 615,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 534,
											"end": 615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 601,
											"end": 607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 534,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4757,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4765,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4910,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 5073,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 5254,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5417,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5513,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 5688,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 5688,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5879,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6071,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5891,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 6016,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 6017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6040,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6033,
											"end": 6034,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6026,
											"end": 6041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6358,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6077,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6160,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6187,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 6160,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6152,
											"end": 6158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6148,
											"end": 6188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6275,
											"end": 6297,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6242,
											"end": 6252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6273,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6298,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 6233,
											"end": 6321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 6301,
											"end": 6319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6321,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 6233,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6341,
											"end": 6351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6493,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 6364,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6415,
											"end": 6445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6415,
											"end": 6445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 6482,
											"end": 6486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6454,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6487,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 6454,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6810,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 6499,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6685,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6708,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 6652,
											"end": 6708,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 6688,
											"end": 6706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6708,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 6652,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6743,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6780,
											"end": 6803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6810,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6816,
											"end": 6933,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 6816,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6927,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7052,
											"end": 7057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 7093,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7093,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7157,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 7093,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7077,
											"end": 7158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7158,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 7077,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7193,
											"end": 7214,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7223,
											"end": 7246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7223,
											"end": 7246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7294,
											"end": 7298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7299,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 7309,
											"end": 7431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 7342,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7342,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7421,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 7342,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7431,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 7309,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7481,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7578,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 7611,
											"end": 7614,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7578,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7578,
											"end": 7615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7578,
											"end": 7615,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 7578,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7573,
											"end": 7576,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7650,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7495,
											"end": 7498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 7440,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7806,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7790,
											"end": 7807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7813,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 7776,
											"end": 7898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 7817,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7817,
											"end": 7896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7896,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 7817,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7898,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 7776,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7941,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 8049,
											"end": 8052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8034,
											"end": 8038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8022,
											"end": 8039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7959,
											"end": 8053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8053,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 7959,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 8053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 8053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7689,
											"end": 8059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8376,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8065,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8142,
											"end": 8146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8218,
											"end": 8274,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8218,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 8218,
											"end": 8274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8254,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8218,
											"end": 8274,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 8218,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8292,
											"end": 8309,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8358,
											"end": 8362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 8536,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8536,
											"end": 8600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8600,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 8536,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8520,
											"end": 8601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8601,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 8520,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8621,
											"end": 8626,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8636,
											"end": 8657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8677,
											"end": 8682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8666,
											"end": 8689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8666,
											"end": 8689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8737,
											"end": 8741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8735,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8742,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8769,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8755,
											"end": 8770,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8874,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 8752,
											"end": 8874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 8785,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8785,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8864,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 8785,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8874,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 8752,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 8906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8912,
											"end": 8915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8924,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 8995,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 9054,
											"end": 9057,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 9021,
											"end": 9058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9058,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 9021,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9019,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9009,
											"end": 9059,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9088,
											"end": 9092,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9083,
											"end": 9086,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9079,
											"end": 9093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9093,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9072,
											"end": 9093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 9103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 8947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 8883,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8887,
											"end": 8908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 9109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 9109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 9109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9233,
											"end": 9250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9256,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9219,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 9219,
											"end": 9341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9219,
											"end": 9341,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 9219,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9384,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9402,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 9492,
											"end": 9495,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9484,
											"end": 9490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9477,
											"end": 9481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9469,
											"end": 9475,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9402,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9402,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9402,
											"end": 9496,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 9402,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9393,
											"end": 9496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9393,
											"end": 9496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9626,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9683,
											"end": 9685,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9662,
											"end": 9669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9681,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9770,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 9651,
											"end": 9770,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9689,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 9689,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 9689,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9689,
											"end": 9768,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 9689,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9770,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 9651,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9856,
											"end": 9886,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9970,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 9853,
											"end": 9970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9889,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9970,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 9853,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 10064,
											"end": 10071,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10053,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 9994,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10072,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 10082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10149,
											"end": 10151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10121,
											"end": 10153,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10172,
											"end": 10178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10169,
											"end": 10199,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10283,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 10166,
											"end": 10283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10202,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 10202,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 10202,
											"end": 10281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10202,
											"end": 10281,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 10202,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10283,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 10166,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10353,
											"end": 10375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 10307,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10385,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 10307,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10092,
											"end": 10395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 10402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10521,
											"end": 10530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 10519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10531,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10536,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10501,
											"end": 10620,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10501,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10501,
											"end": 10620,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 10539,
											"end": 10618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10501,
											"end": 10620,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10501,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10659,
											"end": 10660,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 10729,
											"end": 10736,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 10684,
											"end": 10737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10737,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 10684,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10737,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10630,
											"end": 10747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10812,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 10857,
											"end": 10864,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10846,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 10812,
											"end": 10865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10865,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 10812,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 11068,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10888,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 11013,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10926,
											"end": 11014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11033,
											"end": 11037,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 11030,
											"end": 11031,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11023,
											"end": 11038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11061,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11054,
											"end": 11055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11394,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 11074,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11155,
											"end": 11156,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11149,
											"end": 11153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11157,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11196,
											"end": 11200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11204,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11213,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 11213,
											"end": 11294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11279,
											"end": 11283,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 11271,
											"end": 11277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11267,
											"end": 11284,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11213,
											"end": 11294,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 11213,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11341,
											"end": 11343,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11333,
											"end": 11339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11330,
											"end": 11344,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11307,
											"end": 11345,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 11304,
											"end": 11388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11360,
											"end": 11378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11388,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 11304,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11575,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11400,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11540,
											"end": 11567,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F204554482073656E7420666F72206469766964656E647300000000000000"
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11524,
											"end": 11538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11400,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11947,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 11581,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 11808,
											"end": 11810,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 11803,
											"end": 11806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 11744,
											"end": 11811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11811,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 11744,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 11909,
											"end": 11912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11820,
											"end": 11913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11913,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 11820,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11938,
											"end": 11940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11933,
											"end": 11936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11929,
											"end": 11941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11922,
											"end": 11941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11922,
											"end": 11941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12146,
											"end": 12155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12206,
											"end": 12215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12200,
											"end": 12204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12196,
											"end": 12216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12181,
											"end": 12190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 12360,
											"end": 12364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 12234,
											"end": 12365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12226,
											"end": 12365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12226,
											"end": 12365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 12473,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12482,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 12509,
											"end": 12514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12482,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 12482,
											"end": 12515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12482,
											"end": 12515,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 12482,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12634,
											"end": 12643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12625,
											"end": 12632,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12644,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12649,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12614,
											"end": 12733,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12614,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 12614,
											"end": 12733,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 12652,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 12652,
											"end": 12731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12731,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 12652,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12614,
											"end": 12733,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 12614,
											"end": 12733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 12773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 12853,
											"end": 12860,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12844,
											"end": 12850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12833,
											"end": 12842,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12829,
											"end": 12851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12797,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 12797,
											"end": 12861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12797,
											"end": 12861,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 12797,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 12861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 12861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12743,
											"end": 12871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12527,
											"end": 12878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 13050,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 12884,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13024,
											"end": 13042,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20746F6B656E732069737375656400000000000000000000000000000000"
										},
										{
											"begin": 13020,
											"end": 13021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13008,
											"end": 13022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13001,
											"end": 13043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 13050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12884,
											"end": 13050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 13283,
											"end": 13285,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13219,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 13219,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 13384,
											"end": 13387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 13295,
											"end": 13388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 13295,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13404,
											"end": 13416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13634,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 13635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13681,
											"end": 13690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13675,
											"end": 13679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13652,
											"end": 13669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13645,
											"end": 13692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 13835,
											"end": 13839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 13709,
											"end": 13840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13853,
											"end": 14033,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 13853,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 13978,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13898,
											"end": 13899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13979,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13998,
											"end": 14002,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13995,
											"end": 13996,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13988,
											"end": 14003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14026,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14019,
											"end": 14020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14027,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 14116,
											"end": 14117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14098,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14098,
											"end": 14118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14098,
											"end": 14118,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 14098,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14093,
											"end": 14118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14093,
											"end": 14118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 14150,
											"end": 14151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14132,
											"end": 14152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14152,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 14132,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14152,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14168,
											"end": 14177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14190,
											"end": 14200,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14223,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 14187,
											"end": 14223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 14203,
											"end": 14221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14223,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 14187,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14416,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 14236,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14361,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14274,
											"end": 14362,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14385,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 14378,
											"end": 14379,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14371,
											"end": 14386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14409,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14402,
											"end": 14403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14410,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14462,
											"end": 14469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14485,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 14503,
											"end": 14504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14485,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14485,
											"end": 14505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14485,
											"end": 14505,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 14485,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14519,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14519,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14519,
											"end": 14539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14519,
											"end": 14539,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 14519,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14539,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14574,
											"end": 14575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14571,
											"end": 14572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14567,
											"end": 14576,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 14614,
											"end": 14625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14596,
											"end": 14626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14626,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 14596,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14585,
											"end": 14626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14585,
											"end": 14626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14762,
											"end": 14777,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 14760,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14778,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14736,
											"end": 14737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14729,
											"end": 14738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14709,
											"end": 14792,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 14686,
											"end": 14825,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 14805,
											"end": 14823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14825,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 14686,
											"end": 14825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14838,
											"end": 15018,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14838,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14886,
											"end": 14963,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14876,
											"end": 14964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 14987,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14980,
											"end": 14981,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14973,
											"end": 14988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15007,
											"end": 15011,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 15012,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15064,
											"end": 15065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15081,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15081,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 15081,
											"end": 15101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15081,
											"end": 15101,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 15081,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15115,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 15133,
											"end": 15134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15115,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 15115,
											"end": 15135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15115,
											"end": 15135,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 15115,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15110,
											"end": 15135,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15110,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15154,
											"end": 15155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15144,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 15144,
											"end": 15179,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15159,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 15159,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 15159,
											"end": 15177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15159,
											"end": 15177,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 15159,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15144,
											"end": 15179,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 15144,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15194,
											"end": 15203,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15374,
											"end": 15376,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15363,
											"end": 15372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15359,
											"end": 15377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 15455,
											"end": 15456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15444,
											"end": 15453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15431,
											"end": 15437,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15387,
											"end": 15458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 15536,
											"end": 15538,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15525,
											"end": 15534,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15512,
											"end": 15518,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15468,
											"end": 15540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15540,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 15468,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15725,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 15553,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15717,
											"name": "PUSH",
											"source": 10,
											"value": "417272617973206C656E677468206D69736D6174636800000000000000000000"
										},
										{
											"begin": 15689,
											"end": 15690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15681,
											"end": 15687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 15718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 16097,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 15731,
											"end": 16097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15873,
											"end": 15876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15894,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 15958,
											"end": 15960,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 15953,
											"end": 15956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 15894,
											"end": 15961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15961,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 15894,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15970,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 16059,
											"end": 16062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15970,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 15970,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15970,
											"end": 16063,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 15970,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16088,
											"end": 16090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16083,
											"end": 16086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16079,
											"end": 16091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 16097,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 16097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 16097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 16097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16522,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 16103,
											"end": 16522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16269,
											"end": 16273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16307,
											"end": 16309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16296,
											"end": 16305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16292,
											"end": 16310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16284,
											"end": 16310,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16284,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16356,
											"end": 16365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16350,
											"end": 16354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16366,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16342,
											"end": 16343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16331,
											"end": 16340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16327,
											"end": 16344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 16510,
											"end": 16514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 16384,
											"end": 16515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16515,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 16384,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16376,
											"end": 16515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16376,
											"end": 16515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16693,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16528,
											"end": 16693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16668,
											"end": 16685,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 16664,
											"end": 16665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16656,
											"end": 16662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16645,
											"end": 16686,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 17065,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 16699,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16841,
											"end": 16844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16862,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 16926,
											"end": 16928,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 16921,
											"end": 16924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16862,
											"end": 16929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16929,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 16862,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16938,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 17027,
											"end": 17030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16938,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16938,
											"end": 17031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16938,
											"end": 17031,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 16938,
											"end": 17031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17056,
											"end": 17058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17051,
											"end": 17054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17047,
											"end": 17059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17040,
											"end": 17059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17040,
											"end": 17059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 17065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 17065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 17065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 17065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17490,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 17071,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17275,
											"end": 17277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17264,
											"end": 17273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17260,
											"end": 17278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17252,
											"end": 17278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17252,
											"end": 17278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17324,
											"end": 17333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17318,
											"end": 17322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17314,
											"end": 17334,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17310,
											"end": 17311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17299,
											"end": 17308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17295,
											"end": 17312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17288,
											"end": 17335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 17478,
											"end": 17482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 17352,
											"end": 17483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17483,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 17352,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17344,
											"end": 17483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17344,
											"end": 17483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17496,
											"end": 17667,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 17496,
											"end": 17667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17636,
											"end": 17659,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F206469766964656E647320746F20636C61696D0000000000000000000000"
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17624,
											"end": 17630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17620,
											"end": 17634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17496,
											"end": 17667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17496,
											"end": 17667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17673,
											"end": 18039,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 17673,
											"end": 18039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17815,
											"end": 17818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 17900,
											"end": 17902,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 17895,
											"end": 17898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 17836,
											"end": 17903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 17836,
											"end": 17903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17912,
											"end": 18005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 18001,
											"end": 18004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17912,
											"end": 18005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 17912,
											"end": 18005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17912,
											"end": 18005,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 17912,
											"end": 18005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18025,
											"end": 18028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18014,
											"end": 18033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18014,
											"end": 18033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17673,
											"end": 18039,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17673,
											"end": 18039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17673,
											"end": 18039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17673,
											"end": 18039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18464,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 18045,
											"end": 18464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18211,
											"end": 18215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18238,
											"end": 18247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18226,
											"end": 18252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18226,
											"end": 18252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18298,
											"end": 18307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18292,
											"end": 18296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18288,
											"end": 18308,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18284,
											"end": 18285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18273,
											"end": 18282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18269,
											"end": 18286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18262,
											"end": 18309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 18452,
											"end": 18456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 18326,
											"end": 18457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18326,
											"end": 18457,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 18326,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18318,
											"end": 18457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18318,
											"end": 18457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18571,
											"end": 18582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18608,
											"end": 18611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18593,
											"end": 18611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18593,
											"end": 18611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18737,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 18623,
											"end": 18737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 19141,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 18743,
											"end": 19141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 18905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 19004,
											"end": 19005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19002,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18923,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 18923,
											"end": 19006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18923,
											"end": 19006,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 18923,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18916,
											"end": 19006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18916,
											"end": 19006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 19104,
											"end": 19107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 19015,
											"end": 19108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19108,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 19015,
											"end": 19108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19133,
											"end": 19134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19128,
											"end": 19131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19124,
											"end": 19135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 19141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 19141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 19141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 19141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19147,
											"end": 19526,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 19147,
											"end": 19526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19331,
											"end": 19334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19353,
											"end": 19500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 19496,
											"end": 19499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19353,
											"end": 19500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 19353,
											"end": 19500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19353,
											"end": 19500,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 19353,
											"end": 19500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19346,
											"end": 19500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19346,
											"end": 19500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19517,
											"end": 19520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19510,
											"end": 19520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19510,
											"end": 19520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19147,
											"end": 19526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19147,
											"end": 19526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19147,
											"end": 19526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19147,
											"end": 19526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19700,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 19532,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19672,
											"end": 19692,
											"name": "PUSH",
											"source": 10,
											"value": "4661696C656420746F2073656E64204554480000000000000000000000000000"
										},
										{
											"begin": 19668,
											"end": 19669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19660,
											"end": 19666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19656,
											"end": 19670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19649,
											"end": 19693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19706,
											"end": 20072,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 19706,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 19851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19869,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 19933,
											"end": 19935,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 19928,
											"end": 19931,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19869,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 19869,
											"end": 19936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19869,
											"end": 19936,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 19869,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19862,
											"end": 19936,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19862,
											"end": 19936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 20038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 20034,
											"end": 20037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 20038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 19945,
											"end": 20038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 20038,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 19945,
											"end": 20038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20063,
											"end": 20065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20058,
											"end": 20061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20054,
											"end": 20066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20047,
											"end": 20066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20047,
											"end": 20066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19706,
											"end": 20072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19706,
											"end": 20072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19706,
											"end": 20072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19706,
											"end": 20072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20497,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 20078,
											"end": 20497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20244,
											"end": 20248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20282,
											"end": 20284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20271,
											"end": 20280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20259,
											"end": 20285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20259,
											"end": 20285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20331,
											"end": 20340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20325,
											"end": 20329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20321,
											"end": 20341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20317,
											"end": 20318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20302,
											"end": 20319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20295,
											"end": 20342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 20485,
											"end": 20489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 20359,
											"end": 20490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20490,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 20359,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20351,
											"end": 20490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20351,
											"end": 20490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20652,
											"end": 20656,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20690,
											"end": 20692,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20679,
											"end": 20688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20675,
											"end": 20693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20667,
											"end": 20693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20667,
											"end": 20693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 20771,
											"end": 20772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20760,
											"end": 20769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20756,
											"end": 20773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20747,
											"end": 20753,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 20703,
											"end": 20774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20774,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 20703,
											"end": 20774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20784,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 20852,
											"end": 20854,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20841,
											"end": 20850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20828,
											"end": 20834,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20784,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 20784,
											"end": 20856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20784,
											"end": 20856,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 20784,
											"end": 20856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20919,
											"end": 20937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20910,
											"end": 20916,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 20866,
											"end": 20938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 20866,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contract/DividendLogic.sol",
								"contract/MyToken.sol",
								"contract/MyToken2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addBatchDividendsUsers(address[],uint256[])": "6264786c",
							"addDividendsUser(address,uint256)": "8ad0aaef",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"claimDividends(address)": "c7e772ed",
							"claimedDividends(address)": "7dfb3383",
							"decimals()": "313ce567",
							"distributeDividends(address)": "213a852f",
							"dividends(address)": "68306e43",
							"getClaimableDividends(address)": "8284ce3e",
							"getVersion()": "0d8e6e2c",
							"holders(uint256)": "2a11ced0",
							"initialize(uint256)": "fe4b84df",
							"initializeDividends()": "ad9e7611",
							"initializeSupply(uint256)": "d9e63bb1",
							"lastDividendTimestamp()": "2eb21b22",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalDividends()": "997664d7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateContractStatus(uint256)": "998aa465",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DividendClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DividendDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addBatchDividendsUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addDividendsUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"distributeDividends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initializeSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDividendTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"updateContractStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyToken2.sol\":\"MyToken2\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contract/DividendLogic.sol\":{\"keccak256\":\"0xf1d301dd8f02bb7d70ea3f8b71baa6be38f33c41c3880839acbca4d03a8e402b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b902b1249b9a75de490412b688f4fd1cb776d98e293cbb32d05f692440092d5\",\"dweb:/ipfs/QmVhLc7nEmrim8rZ8oNgjkr2HUi6Ds5NrESrDZhGZc5Dhb\"]},\"contract/MyToken.sol\":{\"keccak256\":\"0xc9dcc8596a50454646e9931c0665d2607b79bb08b4ee0a4951329dc338386a32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a105f88bc7f0c13392833f0ef6bb166eb618069fcaf8350c3bc0b772fc31e08\",\"dweb:/ipfs/QmWb9ckjLq9LtNTVAxhJhPYsFxSRjC24yAfaD8D63quy4h\"]},\"contract/MyToken2.sol\":{\"keccak256\":\"0xdbed98e13e95b53d0760a946d4832302725743a59525b0792515dda086d0477d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d184b5472201f97aa88953a9e393e6fcb4b0426d54370ef27a8cac0312face4a\",\"dweb:/ipfs/QmUtBnT9SuGA7sRciVPHUZkoVWfdv3RBWXtgSogTfKTwen\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 575,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 581,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 583,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 585,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 587,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 276,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1509,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "x",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1211,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "dividends",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1215,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "claimedDividends",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1217,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "totalDividends",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1219,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "lastDividendTimestamp",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "contract/MyToken2.sol:MyToken2",
								"label": "holders",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							267
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 267,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 267,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1079:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4704:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4724:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4768:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4788:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4854:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4871:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4849:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4885:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4906:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4899:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4981:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4977:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4997:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5064:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5084:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5098:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5135:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6289:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6355:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6355:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6355:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "6388:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6429:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6425:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6475:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6496:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6489:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6573:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6616:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6649:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6259:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:0"
									},
									"src": "6250:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6919:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6929:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:0"
									},
									"src": "6891:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7134:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7144:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7168:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7189:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7182:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 267,
									"src": "7082:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7758:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7824:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7824:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7824:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7857:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7898:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7894:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7929:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7979:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8019:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8080:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:0"
									},
									"scope": 267,
									"src": "7709:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8306:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8323:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8316:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:0"
									},
									"scope": 267,
									"src": "8241:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8541:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8558:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8558:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8551:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:0"
									},
									"scope": 267,
									"src": "8485:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8896:45:0",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "8913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "8906:28:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:0",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:0"
									},
									"scope": 267,
									"src": "8819:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9161:115:0",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "9171:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 259,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9186:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:0"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:0",
													"nodeType": "YulBlock",
													"src": "9232:38:0",
													"statements": [
														{
															"nativeSrc": "9246:14:0",
															"nodeType": "YulAssignment",
															"src": "9246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:0",
																"nodeType": "YulIdentifier",
																"src": "9256:4:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:0",
														"valueSize": 1
													}
												],
												"id": 264,
												"nodeType": "InlineAssembly",
												"src": "9223:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9129:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "9129:20:0"
													},
													"referencedDeclaration": 10,
													"src": "9129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:0"
									},
									"scope": 267,
									"src": "9071:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 268,
							"src": "2349:6929:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:9166:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1201
						],
						"Ownable": [
							415
						]
					},
					"id": 416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 416,
							"sourceUnit": 1202,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1201,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 273,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "692:7:1"
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 272,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 415,
							"linearizedBaseContracts": [
								415,
								1201
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 276,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 415,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 275,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 281,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 286,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 292,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 298,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 299,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 305,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 310,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 318,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 415,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 321,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 324,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 326,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 332,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 415,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 341,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 349,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 345,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 344,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 348,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 415,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 359,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 355,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 415,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 387,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 381,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 380,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 386,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 389,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 371,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 415,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"id": 402,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 404,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 405,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 409,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 415,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 416,
							"src": "663:2438:1",
							"usedErrors": [
								281,
								286
							],
							"usedEvents": [
								292
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							552
						],
						"IERC20Errors": [
							457
						],
						"IERC721Errors": [
							505
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 417,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 418,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 427,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 432,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 437,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 446,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 451,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 456,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 553,
							"src": "280:1764:2",
							"usedErrors": [
								427,
								432,
								437,
								446,
								451,
								456
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 505,
							"linearizedBaseContracts": [
								505
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 463,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 468,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 477,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 482,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 487,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 494,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 499,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 504,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 553,
							"src": "2190:2092:2",
							"usedErrors": [
								463,
								468,
								477,
								482,
								487,
								494,
								499,
								504
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 517,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 522,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 527,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 534,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 539,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 544,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 551,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 553,
							"src": "4430:2107:2",
							"usedErrors": [
								517,
								522,
								527,
								534,
								539,
								544,
								551
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1201
						],
						"ERC20": [
							1067
						],
						"IERC20": [
							1145
						],
						"IERC20Errors": [
							457
						],
						"IERC20Metadata": [
							1171
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 556,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1146,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 555,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 558,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1172,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 557,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1171,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 560,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1202,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 559,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1201,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 553,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 561,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 457,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 564,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "1133:7:3"
									},
									"id": 565,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 566,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "1142:6:3"
									},
									"id": 567,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 568,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1171,
										"src": "1150:14:3"
									},
									"id": 569,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 570,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "1166:12:3"
									},
									"id": 571,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 563,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1067,
							"linearizedBaseContracts": [
								1067,
								457,
								1171,
								1145,
								1201
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 575,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 574,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 572,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 573,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 581,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 580,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 576,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 579,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 577,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 578,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 583,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 582,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 585,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 584,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 587,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1067,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 586,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 596,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 600,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 604,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1067,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1158
									],
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 610,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 585,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 609,
												"id": 611,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1067,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1164
									],
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 619,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 587,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 618,
												"id": 620,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1067,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 627,
												"id": 629,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 625,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1067,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 637,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 583,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 636,
												"id": 638,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 1067,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1102
									],
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 648,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 650,
													"indexExpression": {
														"id": 649,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 647,
												"id": 651,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 1067,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1112
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 662,
												"id": 675,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 1067,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 687,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 691,
													"indexExpression": {
														"id": 690,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 692,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 1067,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1132
									],
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 704,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 706,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															958,
															1018
														],
														"referencedDeclaration": 958,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 703,
												"id": 716,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 1067,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1144
									],
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 730,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 732,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 729,
												"id": 748,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 1067,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 1067,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 808,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																819
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 819,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 844,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 818,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 823,
															"initialValue": {
																"baseExpression": {
																	"id": 820,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 822,
																"indexExpression": {
																	"id": 821,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 824,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 834,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 833,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 828,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 829,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 819,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 830,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 827,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 832,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 843,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 835,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 837,
																			"indexExpression": {
																				"id": 836,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 838,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 813,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 814,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 856,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 852,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 583,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 855,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 868,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 1067,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 889,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 888,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 1067,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 915,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 916,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 922,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 921,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 927,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 931,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 932,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 1067,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 950,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															958,
															1018
														],
														"referencedDeclaration": 1018,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 1067,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 986,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 992,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 991,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 997,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1000,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1003,
															"indexExpression": {
																"id": 1001,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"id": 1002,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1005,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 1008,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 967,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1010,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1011,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1012,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1009,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 1067,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"arguments": [
														{
															"id": 1031,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1030,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1035,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1037,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1036,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1042,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1043,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1052,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 1051,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1046,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1047,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1048,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1045,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1050,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 1062,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1055,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1056,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1057,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1053,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				958,
																				1018
																			],
																			"referencedDeclaration": 1018,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 1067,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1068,
							"src": "1106:9768:3",
							"usedErrors": [
								427,
								432,
								437,
								446,
								451,
								456
							],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1145,
							"linearizedBaseContracts": [
								1145
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1079,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1088,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1145,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1145,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1145,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1145,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1145,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1145,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1146,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1145
						],
						"IERC20Metadata": [
							1171
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 1146,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "306:6:5"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1171,
							"linearizedBaseContracts": [
								1171,
								1145
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1171,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1171,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1167,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1171,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1172,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1079,
								1088
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1201
						]
					},
					"id": 1202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1179,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1181,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1201,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1188,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1190,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1201,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1196,
												"id": 1198,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1201,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1202,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contract/DividendLogic.sol": {
				"ast": {
					"absolutePath": "contract/DividendLogic.sol",
					"exportedSymbols": {
						"Context": [
							1201
						],
						"DividendLogic": [
							1496
						],
						"IERC20": [
							1145
						],
						"Ownable": [
							415
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1146,
							"src": "61:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 416,
							"src": "119:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1206,
										"name": "Ownable",
										"nameLocations": [
											"210:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 415,
										"src": "210:7:7"
									},
									"id": 1207,
									"nodeType": "InheritanceSpecifier",
									"src": "210:7:7"
								}
							],
							"canonicalName": "DividendLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496,
								415,
								1201
							],
							"name": "DividendLogic",
							"nameLocation": "193:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "68306e43",
									"id": 1211,
									"mutability": "mutable",
									"name": "dividends",
									"nameLocation": "307:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "272:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1210,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "272:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dfb3383",
									"id": 1215,
									"mutability": "mutable",
									"name": "claimedDividends",
									"nameLocation": "360:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "325:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1214,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1213,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "997664d7",
									"id": 1217,
									"mutability": "mutable",
									"name": "totalDividends",
									"nameLocation": "398:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "383:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2eb21b22",
									"id": 1219,
									"mutability": "mutable",
									"name": "lastDividendTimestamp",
									"nameLocation": "434:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "419:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "419:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a11ced0",
									"id": 1222,
									"mutability": "mutable",
									"name": "holders",
									"nameLocation": "481:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1496,
									"src": "464:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "464:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1221,
										"nodeType": "ArrayTypeName",
										"src": "464:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc5672352337871327",
									"id": 1228,
									"name": "DividendDistributed",
									"nameLocation": "524:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "552:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "544:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "568:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "560:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:35:7"
									},
									"src": "518:61:7"
								},
								{
									"anonymous": false,
									"eventSelector": "5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56",
									"id": 1234,
									"name": "DividendClaimed",
									"nameLocation": "591:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "623:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "607:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "637:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "629:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:38:7"
									},
									"src": "585:60:7"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "745:73:7",
										"statements": [
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "totalDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "756:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "773:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "756:18:7"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "lastDividendTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "785:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "809:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "785:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "785:25:7"
											}
										]
									},
									"functionSelector": "ad9e7611",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyOwner",
												"nameLocations": [
													"735:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "735:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "735:9:7"
										}
									],
									"name": "initializeDividends",
									"nameLocation": "704:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "723:2:7"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:7"
									},
									"scope": 1496,
									"src": "695:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "928:129:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "947:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "963:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "955:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "955:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "955:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "947:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "967:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "939:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "939:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "939:46:7"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1267,
															"name": "dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "996:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1269,
														"indexExpression": {
															"id": 1268,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "1006:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "996:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1270,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1014:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "996:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "996:24:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "1044:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1273,
															"name": "holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "1031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1039:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1031:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "1031:18:7"
											}
										]
									},
									"functionSelector": "8ad0aaef",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1255,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1254,
												"name": "onlyOwner",
												"nameLocations": [
													"918:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "918:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "918:9:7"
										}
									],
									"name": "addDividendsUser",
									"nameLocation": "862:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "887:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "879:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "901:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "893:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:30:7"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:7"
									},
									"scope": 1496,
									"src": "853:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "1199:261:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1292,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1218:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1224:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1218:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1294,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "1234:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1242:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1234:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1218:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417272617973206c656e677468206d69736d61746368",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1250:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
																"typeString": "literal_string \"Arrays length mismatch\""
															},
															"value": "Arrays length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
																"typeString": "literal_string \"Arrays length mismatch\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1210:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "1210:65:7"
											},
											{
												"body": {
													"id": 1333,
													"nodeType": "Block",
													"src": "1329:124:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1312,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "1352:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1314,
																			"indexExpression": {
																				"id": 1313,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "1358:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1352:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1372:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1364:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1315,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1364:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1364:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1352:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1376:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		},
																		"value": "Invalid address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		}
																	],
																	"id": 1311,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1344:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1344:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "1344:50:7"
														},
														{
															"expression": {
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1323,
																		"name": "dividends",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "1409:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1327,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1324,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "1419:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1326,
																		"indexExpression": {
																			"id": 1325,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1301,
																			"src": "1425:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1419:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1409:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1328,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "1431:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1330,
																	"indexExpression": {
																		"id": 1329,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "1439:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1431:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1409:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1332,
															"nodeType": "ExpressionStatement",
															"src": "1409:32:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1304,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "1306:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1305,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "1310:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1316:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1310:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1306:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"initializationExpression": {
													"assignments": [
														1301
													],
													"declarations": [
														{
															"constant": false,
															"id": 1301,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1299:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1334,
															"src": "1291:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1300,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1291:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1303,
													"initialValue": {
														"hexValue": "30",
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1303:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1291:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1324:3:7",
														"subExpression": {
															"id": 1308,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "1324:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1310,
													"nodeType": "ExpressionStatement",
													"src": "1324:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1286:167:7"
											}
										]
									},
									"functionSelector": "6264786c",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1288,
												"name": "onlyOwner",
												"nameLocations": [
													"1189:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "1189:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1189:9:7"
										}
									],
									"name": "addBatchDividendsUsers",
									"nameLocation": "1107:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "1147:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1130:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1281,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1130:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1282,
													"nodeType": "ArrayTypeName",
													"src": "1130:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1171:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1154:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1154:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "1154:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:50:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:0:7"
									},
									"scope": 1496,
									"src": "1098:362:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "1644:1071:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1344,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1712:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1716:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1712:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1724:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1712:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204554482073656e7420666f72206469766964656e6473",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1727:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee",
																"typeString": "literal_string \"No ETH sent for dividends\""
															},
															"value": "No ETH sent for dividends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_072ebdeb2155d66613812b0b668ab86949f7fae8540a579046427258eabe53ee",
																"typeString": "literal_string \"No ETH sent for dividends\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "1704:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1353,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "1824:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1352,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "1817:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1145_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1817:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1145",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1831:11:7",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1094,
																	"src": "1817:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1817:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1847:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1817:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320697373756564",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1850:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																"typeString": "literal_string \"No tokens issued\""
															},
															"value": "No tokens issued"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																"typeString": "literal_string \"No tokens issued\""
															}
														],
														"id": 1351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1809:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "1809:60:7"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1362,
														"name": "totalDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "1922:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1363,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1940:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1944:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "1922:27:7"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1367,
														"name": "lastDividendTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "1960:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1368,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1984:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1984:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1960:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "1960:39:7"
											},
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "2086:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "2078:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2078:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1375,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "2107:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1374,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "2100:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1145_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2100:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2114:11:7",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1094,
														"src": "2100:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2078:49:7"
											},
											{
												"body": {
													"id": 1423,
													"nodeType": "Block",
													"src": "2261:382:7",
													"statements": [
														{
															"assignments": [
																1392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1392,
																	"mutability": "mutable",
																	"name": "holder",
																	"nameLocation": "2321:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "2313:14:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2313:7:7",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1396,
															"initialValue": {
																"baseExpression": {
																	"id": 1393,
																	"name": "holders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "2330:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1395,
																"indexExpression": {
																	"id": 1394,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2338:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2330:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2313:27:7"
														},
														{
															"assignments": [
																1398
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1398,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "2409:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "2401:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2401:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1405,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1403,
																		"name": "holder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "2443:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1400,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "2426:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1399,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "2419:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1145_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2419:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1145",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2433:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1102,
																	"src": "2419:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2419:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2401:49:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1406,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "2469:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2479:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2469:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1422,
															"nodeType": "IfStatement",
															"src": "2465:167:7",
															"trueBody": {
																"id": 1421,
																"nodeType": "Block",
																"src": "2482:150:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1409,
																					"name": "dividends",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "2560:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1411,
																				"indexExpression": {
																					"id": 1410,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1392,
																					"src": "2570:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2560:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1415,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1412,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2582:3:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1413,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2586:5:7",
																								"memberName": "value",
																								"nodeType": "MemberAccess",
																								"src": "2582:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1414,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1398,
																								"src": "2594:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2582:19:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1416,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2581:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1417,
																					"name": "totalTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1373,
																					"src": "2605:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2581:35:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2560:56:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1420,
																		"nodeType": "ExpressionStatement",
																		"src": "2560:56:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1384,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "2236:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1385,
															"name": "holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "2240:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2248:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2240:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2236:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"initializationExpression": {
													"assignments": [
														1381
													],
													"declarations": [
														{
															"constant": false,
															"id": 1381,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2229:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1424,
															"src": "2221:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1380,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2221:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1383,
													"initialValue": {
														"hexValue": "30",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2221:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2256:3:7",
														"subExpression": {
															"id": 1388,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "2256:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1390,
													"nodeType": "ExpressionStatement",
													"src": "2256:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2216:427:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2680:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2684:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2680:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1428,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2691:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2697:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2691:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "DividendDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2660:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "EmitStatement",
												"src": "2655:52:7"
											}
										]
									},
									"functionSelector": "213a852f",
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyOwner",
												"nameLocations": [
													"1634:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "1634:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1634:9:7"
										}
									],
									"name": "distributeDividends",
									"nameLocation": "1582:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1610:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1602:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:15:7"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:7"
									},
									"scope": 1496,
									"src": "1573:1142:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "2791:570:7",
										"statements": [
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2862:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "2854:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2854:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"baseExpression": {
														"id": 1440,
														"name": "dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "2871:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1442,
													"indexExpression": {
														"id": 1441,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "2881:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2871:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2854:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "2905:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2914:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2905:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206469766964656e647320746f20636c61696d",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2917:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																"typeString": "literal_string \"No dividends to claim\""
															},
															"value": "No dividends to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																"typeString": "literal_string \"No dividends to claim\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2897:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2897:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "2897:44:7"
											},
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1451,
															"name": "dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3013:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1453,
														"indexExpression": {
															"id": 1452,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3023:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3013:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3031:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3013:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "3013:19:7"
											},
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1457,
															"name": "claimedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3098:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1459,
														"indexExpression": {
															"id": 1458,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3115:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3098:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1460,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "3124:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3098:32:7"
											},
											{
												"assignments": [
													1464,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "3222:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "3217:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1463,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3217:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1471,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3257:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1465,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "3232:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3237:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3232:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1467,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "3249:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3232:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3232:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3216:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "3279:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420455448",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3285:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
																"typeString": "literal_string \"Failed to send ETH\""
															},
															"value": "Failed to send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
																"typeString": "literal_string \"Failed to send ETH\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3271:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "3271:35:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1478,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3340:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "3346:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1477,
														"name": "DividendClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "3324:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "EmitStatement",
												"src": "3319:34:7"
											}
										]
									},
									"functionSelector": "c7e772ed",
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimDividends",
									"nameLocation": "2753:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2776:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2768:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:14:7"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2791:0:7"
									},
									"scope": 1496,
									"src": "2744:617:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "3476:41:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1490,
														"name": "dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3494:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1492,
													"indexExpression": {
														"id": 1491,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "3504:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3494:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1493,
												"nodeType": "Return",
												"src": "3487:22:7"
											}
										]
									},
									"functionSelector": "8284ce3e",
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimableDividends",
									"nameLocation": "3408:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3438:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3430:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:14:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3467:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:9:7"
									},
									"scope": 1496,
									"src": "3399:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1497,
							"src": "175:3345:7",
							"usedErrors": [
								281,
								286
							],
							"usedEvents": [
								292,
								1228,
								1234
							]
						}
					],
					"src": "33:3487:7"
				},
				"id": 7
			},
			"contract/MyToken.sol": {
				"ast": {
					"absolutePath": "contract/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1201
						],
						"ERC20": [
							1067
						],
						"IERC20": [
							1145
						],
						"IERC20Errors": [
							457
						],
						"IERC20Metadata": [
							1171
						],
						"Initializable": [
							267
						],
						"MyToken": [
							1576
						],
						"Ownable": [
							415
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 1068,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 416,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1577,
							"sourceUnit": 268,
							"src": "172:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1502,
										"name": "ERC20",
										"nameLocations": [
											"472:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1067,
										"src": "472:5:8"
									},
									"id": 1503,
									"nodeType": "InheritanceSpecifier",
									"src": "472:5:8"
								},
								{
									"baseName": {
										"id": 1504,
										"name": "Ownable",
										"nameLocations": [
											"479:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 415,
										"src": "479:7:8"
									},
									"id": 1505,
									"nodeType": "InheritanceSpecifier",
									"src": "479:7:8"
								},
								{
									"baseName": {
										"id": 1506,
										"name": "Initializable",
										"nameLocations": [
											"488:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "488:13:8"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "488:13:8"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576,
								267,
								415,
								1067,
								457,
								1171,
								1145,
								1201
							],
							"name": "MyToken",
							"nameLocation": "461:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 1509,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "524:1:8",
									"nodeType": "VariableDeclaration",
									"scope": 1576,
									"src": "509:16:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1508,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "590:25:8",
										"statements": [
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1516,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "601:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1517,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "605:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "601:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "601:6:8"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1514,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1513,
												"name": "onlyInitializing",
												"nameLocations": [
													"573:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "573:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "573:16:8"
										}
									],
									"name": "initialize",
									"nameLocation": "543:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "562:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "554:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:12:8"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:8"
									},
									"scope": 1576,
									"src": "534:81:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "679:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1527,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "696:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "700:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "696:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "708:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "690:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "690:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "690:32:8"
											}
										]
									},
									"functionSelector": "d9e63bb1",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeSupply",
									"nameLocation": "632:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "657:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "649:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:23:8"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:0:8"
									},
									"scope": 1576,
									"src": "623:107:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "838:28:8",
										"statements": []
									},
									"id": 1545,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "800:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "811:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 1538,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1535,
												"name": "ERC20",
												"nameLocations": [
													"794:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "794:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "794:23:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1540,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "826:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1542,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1539,
												"name": "Ownable",
												"nameLocations": [
													"818:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 415,
												"src": "818:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "818:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:18:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:8"
									},
									"scope": 1576,
									"src": "764:102:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "933:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "950:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "954:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1554,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "944:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "944:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1551,
												"name": "onlyOwner",
												"nameLocations": [
													"923:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "923:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "923:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "883:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "888:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "908:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:28:8"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:0:8"
									},
									"scope": 1576,
									"src": "874:95:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "1038:38:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "1055:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "1061:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "1049:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "1049:19:8"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1566,
												"name": "onlyOwner",
												"nameLocations": [
													"1028:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "1028:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1028:9:8"
										}
									],
									"name": "burn",
									"nameLocation": "986:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "999:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "991:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1013:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1005:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:30:8"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:8"
									},
									"scope": 1576,
									"src": "977:99:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1577,
							"src": "452:627:8",
							"usedErrors": [
								16,
								19,
								281,
								286,
								427,
								432,
								437,
								446,
								451,
								456
							],
							"usedEvents": [
								24,
								292,
								1079,
								1088
							]
						}
					],
					"src": "33:1048:8"
				},
				"id": 8
			},
			"contract/MyToken2.sol": {
				"ast": {
					"absolutePath": "contract/MyToken2.sol",
					"exportedSymbols": {
						"Context": [
							1201
						],
						"DividendLogic": [
							1496
						],
						"ERC20": [
							1067
						],
						"IERC20": [
							1145
						],
						"IERC20Errors": [
							457
						],
						"IERC20Metadata": [
							1171
						],
						"Initializable": [
							267
						],
						"MyToken": [
							1576
						],
						"MyToken2": [
							1606
						],
						"Ownable": [
							415
						]
					},
					"id": 1607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "contract/MyToken.sol",
							"file": "./MyToken.sol",
							"id": 1579,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1577,
							"src": "61:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contract/DividendLogic.sol",
							"file": "./DividendLogic.sol",
							"id": 1580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1497,
							"src": "86:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1581,
										"name": "MyToken",
										"nameLocations": [
											"235:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "235:7:9"
									},
									"id": 1582,
									"nodeType": "InheritanceSpecifier",
									"src": "235:7:9"
								},
								{
									"baseName": {
										"id": 1583,
										"name": "DividendLogic",
										"nameLocations": [
											"244:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "244:13:9"
									},
									"id": 1584,
									"nodeType": "InheritanceSpecifier",
									"src": "244:13:9"
								}
							],
							"canonicalName": "MyToken2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1606,
							"linearizedBaseContracts": [
								1606,
								1496,
								1576,
								267,
								415,
								1067,
								457,
								1171,
								1145,
								1201
							],
							"name": "MyToken2",
							"nameLocation": "223:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "602:41:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1592,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "632:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1589,
															"name": "MyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "613:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MyToken_$1576_$",
																"typeString": "type(contract MyToken)"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "621:10:9",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1521,
														"src": "613:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "613:22:9"
											}
										]
									},
									"functionSelector": "998aa465",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateContractStatus",
									"nameLocation": "562:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "591:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "583:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:12:9"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:9"
									},
									"scope": 1606,
									"src": "553:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "701:35:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1601,
														"name": "MyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "719:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_MyToken_$1576_$",
															"typeString": "type(contract MyToken)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "727:1:9",
													"memberName": "x",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1509,
													"src": "719:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1603,
												"nodeType": "Return",
												"src": "712:16:9"
											}
										]
									},
									"functionSelector": "0d8e6e2c",
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nameLocation": "660:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:2:9"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1606,
									"src": "651:85:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1607,
							"src": "214:552:9",
							"usedErrors": [
								16,
								19,
								281,
								286,
								427,
								432,
								437,
								446,
								451,
								456
							],
							"usedEvents": [
								24,
								292,
								1079,
								1088,
								1228,
								1234
							]
						}
					],
					"src": "33:735:9"
				},
				"id": 9
			}
		}
	}
}